/*!
┌(ixi))┐)┐)┐)┐)┐)┐
*/

this.pixiv = this.pixiv || {}, this.pixiv.templates = this.pixiv.templates || {}, 
this.pixiv.templates["booth-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<li class="_booth-item">\n		<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">\n' + (null != (e = b["if"].call(a, null != (e = null != a ? a.images : a) ? e["150x150"] : e, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + '			<h1 class="title" title="' + i((f = null != (f = b.name || (null != a ? a.name : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : f)) + '">' + i((b.truncate || a && a.truncate || g).call(a, null != a ? a.name : a, 24, {
            name: "truncate",
            hash: {},
            data: d
        })) + '</h1>\n		</a>\n		<div class="price">&yen;' + i((b.comma || a && a.comma || g).call(a, null != a ? a.price : a, {
            name: "comma",
            hash: {},
            data: d
        })) + '</div>\n		<ul class="user inline-list pipe-separated">\n			<li>\n				<a href="' + i((f = null != (f = b.booth_url || (null != a ? a.booth_url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "booth_url",
            hash: {},
            data: d
        }) : f)) + '" class="booth-name" title="' + i((f = null != (f = b.booth_name || (null != a ? a.booth_name : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "booth_name",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">\n					<span class="icon-text">' + i((b.truncate || a && a.truncate || g).call(a, null != a ? a.booth_name : a, 8, {
            name: "truncate",
            hash: {},
            data: d
        })) + '</span>\n					<i class="_icon sprites-booth">BOOTH</i>\n				</a>\n			</li>\n' + (null != (e = b["if"].call(a, null != a ? a.pixiv_id : a, {
            name: "if",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "		</ul>\n	</li>\n";
    },
    "2": function(a, b, c, d) {
        var e;
        return '				<img src="' + this.escapeExpression(this.lambda(null != (e = null != a ? a.images : a) ? e["150x150"] : e, a)) + '" class="_thumbnail">\n';
    },
    "4": function(a, b, c, d) {
        return '				<div class="no-image _thumbnail"></div>\n';
    },
    "6": function(a, b, c, d) {
        var e;
        return '				<li>\n					<a href="http://pixiv.me/' + this.escapeExpression((e = null != (e = b.pixiv_id || (null != a ? a.pixiv_id : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "pixiv_id",
            hash: {},
            data: d
        }) : e)) + '" class="user _icon sprites-pixiv" target="_blank">pixiv</a>\n				</li>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["emoji-list"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression, h = "function";
        return '<li><img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" data-src="' + g((b.prop || a && a.prop || f).call(a, "commonSourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + "images/emoji/" + g((e = null != (e = b.id || (null != a ? a.id : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : e)) + '.png" width="42" height="42" class="emoji _lazy-image" data-name="' + g((e = null != (e = b.name || (null != a ? a.name : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : e)) + '"></li>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.emoji_series || (null != a ? a.emoji_series : a)) ? f : b.helperMissing, 
        g = {
            name: "emoji_series",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.emoji_series || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["follow-option"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォロー中", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "3": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォローする", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "5": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '					<div class="item">\n						<select name="tag" disabled>\n							<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n							<option value="new">' + f((b.t || a && a.t || e).call(a, "新規フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + "</option>\n						</select>\n					</div>\n";
    },
    "7": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '						<a href="/premium.php?ref=bookmark_user" target="_blank" class="item premium-feature">\n						<select name="tag" disabled>\n							<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n						</select>\n						<i class="_icon sprites-premium"></i>\n						<p class="_notes">' + f((b.t || a && a.t || e).call(a, "プレミアム会員になるとユーザーをフォルダーに分類できます", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n					</a>\n";
    },
    "9": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '					<div class="action">\n						<span class="_button2 unfollow-button">' + f((b.t || a && a.t || e).call(a, "フォロー解除", {
            name: "t",
            hash: {},
            data: d
        })) + '</span>\n						<span class="_button2 update-button">' + f((b.t || a && a.t || e).call(a, "更新", {
            name: "t",
            hash: {},
            data: d
        })) + "</span>\n					</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '<button class="follow-button">\n	';
        return f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, g = {
            name: "is_follow",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k += "\n	", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.noop,
            inverse: this.program(3, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k += '\n</button>\n<span class="follow-more-button-container">\n	<button class="follow-more-button">\n		<i class="_icon sprites-more"></i>\n	</button>\n	<div class="options-wrapper _hidden">\n		<div class="options-container">\n			<section class="option">\n', 
        f = null != (f = b.premium || (null != a ? a.premium : a)) ? f : h, g = {
            name: "premium",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.premium || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.premium || (null != a ? a.premium : a)) ? f : h, g = {
            name: "premium",
            hash: {},
            fn: this.noop,
            inverse: this.program(7, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.premium || (e = j.call(a, e, g)), null != e && (k += e), 
        k += '				<div class="item">\n					<label><input type="checkbox" name="restrict" value="1">' + this.escapeExpression((b.t || a && a.t || h).call(a, "公開しない", {
            name: "t",
            hash: {},
            data: d
        })) + "</label>\n				</div>\n", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.program(9, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k + "			</section>\n		</div>\n	</div>\n</span>\n";
    },
    useData: !0
}), this.pixiv.templates["following-booster-dummy"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = this.lambda, g = this.escapeExpression;
        return '	<li data-user_id="' + g(f(a, a)) + '" data-filter="following-booster-loading" class="ui-scroll-view following-booster-' + g(f(a, a)) + " following-booster-dummy" + (null != (e = b["if"].call(a, (e = d && d.root) && e.user_name, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '" ' + (null != (e = b["if"].call(a, (e = d && d.root) && e.user_name, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "></li>\n";
    },
    "2": function(a, b, c, d) {
        return " following-booster-related-user";
    },
    "4": function(a, b, c, d) {
        var e;
        return 'data-related_user="' + this.escapeExpression(this.lambda((e = d && d.root) && e.user_name, a)) + '"';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return null != (e = b.each.call(a, null != a ? a.user_ids : a, {
            name: "each",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "";
    },
    useData: !0
}), this.pixiv.templates["history-detail-item"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " on";
    },
    "3": function(a, b, c, d) {
        var e, f, g = this.escapeExpression;
        return '		<a href="/member_illust.php?mode=medium&amp;illust_id=' + g((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : b.helperMissing, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="image" style="background-image:url(' + g(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + ');"></a>\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != a ? a.ugoira_meta : a, {
            name: "if",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.program(8, d, 0),
            data: d
        })) ? e : "";
    },
    "6": function(a, b, c, d) {
        return '			<div class="player toggle image"></div>\n';
    },
    "8": function(a, b, c, d) {
        var e, f, g = this.escapeExpression;
        return '			<a href="/member_illust.php?mode=medium&amp;illust_id=' + g((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : b.helperMissing, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="image" style="background-image:url(' + g(this.lambda(null != (e = null != a ? a.url : a) ? e.m : e, a)) + ');"></a>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<header class="header">\n	<div class="label">\n	    <a href="/member_illust.php?mode=medium&amp;illust_id=' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_block">\n		   <h1 class="work-title">' + j((b.truncate || a && a.truncate || h).call(a, null != a ? a.illust_title : a, 20, {
            name: "truncate",
            hash: {},
            data: d
        })) + '</h1>\n		</a>\n\n		<a href="/member.php?id=' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '" target="_block" class="user ui-profile-popup" data-user_id="' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '">\n			<img src="' + j((f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "profile_img",
            hash: {},
            data: d
        }) : f)) + '" height="20" class="user-icon">\n			<span class="icon-text">' + j((b.truncate || a && a.truncate || h).call(a, null != a ? a.user_name : a, 20, {
            name: "truncate",
            hash: {},
            data: d
        })) + '</span>\n		</a>\n	</div>\n	<div class="actions">\n		<span class="action rate';
        return f = null != (f = b.is_rated || (null != a ? a.is_rated : a)) ? f : h, g = {
            name: "is_rated",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_rated || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '" data-id="' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '">\n			<i class="_icon-20 _icon-smile"></i>\n		</span>\n		<a href="/bookmark_add.php?type=illust&amp;illust_id=' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="action toggle-bookmark', f = null != (f = b.is_bookmarked || (null != a ? a.is_bookmarked : a)) ? f : h, 
        g = {
            name: "is_bookmarked",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_bookmarked || (e = k.call(a, e, g)), 
        null != e && (l += e), l += '" data-id="' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '">\n			<i class="_icon-20 _icon-star"></i>\n		</a>\n		<a href="/member_illust.php?mode=medium&amp;illust_id=' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '#one_comment" target="_blank" class="action add-comment', f = null != (f = b.is_commented || (null != a ? a.is_commented : a)) ? f : h, 
        g = {
            name: "is_commented",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_commented || (e = k.call(a, e, g)), 
        null != e && (l += e), l + '">\n			<i class="_icon-20 _icon-comment"></i>\n		</a>\n	</div>\n</header>\n\n<div class="image-container">\n' + (null != (e = b["if"].call(a, null != a ? a.tmp : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '\n	<nav class="nav">\n		<span class="prev _hidden"><i class="_icon-20 _icon-rtl"></i></span>\n		<span class="next _hidden"><i class="_icon-20 _icon-ltr"></i></span>\n	</nav>\n</div>\n';
    },
    useData: !0
}), this.pixiv.templates["history-illust-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = this.lambda, g = this.escapeExpression;
        return '	<h1 class="date">' + g(f((e = d && d.root) && e.date, a)) + '<span class="count">' + g(f((e = d && d.root) && e.count, a)) + "</span></h1>\n";
    },
    "3": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != a ? a.illust_id : a, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "";
    },
    "4": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != a ? a.trial : a, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.program(7, d, 0),
            data: d
        })) ? e : "";
    },
    "5": function(a, b, c, d) {
        var e;
        return '			<span class="_history-item trial" style="background-image:url(' + this.escapeExpression(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + ')"></span>\n';
    },
    "7": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '			<a href="/member_illust.php?mode=medium&amp;illust_id=' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" data-id="' + j((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" class="_history-item show-detail list-item" style="background-image:url(' + j(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + ')">\n				<div class="status">\n					';
        return f = null != (f = b.is_rated || (null != a ? a.is_rated : a)) ? f : h, g = {
            name: "is_rated",
            hash: {},
            fn: this.program(8, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_rated || (e = k.call(a, e, g)), null != e && (l += e), 
        l += "\n					", f = null != (f = b.is_bookmarked || (null != a ? a.is_bookmarked : a)) ? f : h, 
        g = {
            name: "is_bookmarked",
            hash: {},
            fn: this.program(10, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_bookmarked || (e = k.call(a, e, g)), 
        null != e && (l += e), l += "\n					", f = null != (f = b.is_commented || (null != a ? a.is_commented : a)) ? f : h, 
        g = {
            name: "is_commented",
            hash: {},
            fn: this.program(12, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_commented || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "\n				</div>\n			</a>\n";
    },
    "8": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-smile"></i></span>';
    },
    "10": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-star"></i></span>';
    },
    "12": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-comment"></i></span>';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = "";
        return f = null != (f = b.date || (null != a ? a.date : a)) ? f : h, g = {
            name: "date",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.items || (null != a ? a.items : a)) ? f : h, g = {
            name: "items",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.items || (e = j.call(a, e, g)), null != e && (k += e), 
        k;
    },
    useData: !0
}), this.pixiv.templates["history-novel-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = this.lambda, g = this.escapeExpression;
        return '	<h1 class="date">' + g(f((e = d && d.root) && e.date, a)) + '<span class="count">' + g(f((e = d && d.root) && e.count, a)) + "</span></h1>\n";
    },
    "3": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != a ? a.id : a, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "";
    },
    "4": function(a, b, c, d) {
        var e, f, g, h = this.escapeExpression, i = b.helperMissing, j = "function", k = b.blockHelperMissing, l = '	<div class="_history-item novel ' + (null != (e = b["if"].call(a, null != a ? a.trial : a, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '">\n		<div class="thumb">\n			<a ' + (null != (e = b.unless.call(a, null != a ? a.trial : a, {
            name: "unless",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + ' target="_blank" class="' + (null != (e = b["if"].call(a, null != a ? a.trial : a, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '">\n				<img src="' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + '">\n			</a>\n			<br>' + h((f = null != (f = b.scene || (null != a ? a.scene : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "scene",
            hash: {},
            data: d
        }) : f)) + "P - " + h((f = null != (f = b.text_length || (null != a ? a.text_length : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "text_length",
            hash: {},
            data: d
        }) : f)) + h((b.t || a && a.t || i).call(a, "文字", {
            name: "t",
            hash: {},
            data: d
        })) + '\n		</div>\n		<div class="details">\n			<div class="title">\n				<a ' + (null != (e = b.unless.call(a, null != a ? a.trial : a, {
            name: "unless",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + ' target="_blank" class="' + (null != (e = b["if"].call(a, null != a ? a.trial : a, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '">' + h((f = null != (f = b.title || (null != a ? a.title : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : f)) + '</a>\n			</div>\n			<div class="author">\n				<a href="/novel/member.php?id=' + h((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '" target="_block" class="user ui-profile-popup" data-user_id="' + h((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '">\n          <img src="' + h((f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "profile_img",
            hash: {},
            data: d
        }) : f)) + '" height="20" width="20" class="user-icon">\n          <span class="icon-text">' + h((f = null != (f = b.user_name || (null != a ? a.user_name : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "user_name",
            hash: {},
            data: d
        }) : f)) + '</span>\n        </a>\n			</div>\n			<div class="comment">' + (null != (f = null != (f = b.comment || (null != a ? a.comment : a)) ? f : i, 
        e = typeof f === j ? f.call(a, {
            name: "comment",
            hash: {},
            data: d
        }) : f) ? e : "") + '</div>\n			<div class="tags">\n';
        return f = null != (f = b.tag_a || (null != a ? a.tag_a : a)) ? f : i, g = {
            name: "tag_a",
            hash: {},
            fn: this.program(9, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.tag_a || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '			</div>\n		</div>\n		<div class="status">\n			', f = null != (f = b.is_rated || (null != a ? a.is_rated : a)) ? f : i, 
        g = {
            name: "is_rated",
            hash: {},
            fn: this.program(11, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.is_rated || (e = k.call(a, e, g)), null != e && (l += e), 
        l += "\n			", f = null != (f = b.is_bookmarked || (null != a ? a.is_bookmarked : a)) ? f : i, 
        g = {
            name: "is_bookmarked",
            hash: {},
            fn: this.program(13, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.is_bookmarked || (e = k.call(a, e, g)), 
        null != e && (l += e), l += "\n			", f = null != (f = b.is_commented || (null != a ? a.is_commented : a)) ? f : i, 
        g = {
            name: "is_commented",
            hash: {},
            fn: this.program(15, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.is_commented || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "\n		</div>\n	</div>\n";
    },
    "5": function(a, b, c, d) {
        return "trial";
    },
    "7": function(a, b, c, d) {
        var e;
        return 'href="/novel/show.php?id=' + this.escapeExpression((e = null != (e = b.id || (null != a ? a.id : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : e)) + '"';
    },
    "9": function(a, b, c, d) {
        var e = this.lambda, f = this.escapeExpression;
        return '					<a href="/novel/tags.php?tag=' + f(e(a, a)) + '">' + f(e(a, a)) + "</a>\n";
    },
    "11": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-smile"></i></span>';
    },
    "13": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-star"></i></span>';
    },
    "15": function(a, b, c, d) {
        return '<span><i class="_icon-20 _icon-comment"></i></span>';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = "";
        return f = null != (f = b.date || (null != a ? a.date : a)) ? f : h, g = {
            name: "date",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.items || (null != a ? a.items : a)) ? f : h, g = {
            name: "items",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.items || (e = j.call(a, e, g)), null != e && (k += e), 
        k;
    },
    useData: !0
}), this.pixiv.templates["history-related-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<a href="/member_illust.php?mode=medium&amp;illust_id=' + i((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="_history-related-item update-detail _area-target list-item" data-id="' + i((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" data-filter="lazy-image" data-src="' + i(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + '"></a>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["illust-upload-fails"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing;
        return "  " + (null != (e = (b.is || a && a.is || f).call(a, a, "==", "file_type", {
            name: "is",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "\n  " + (null != (e = (b.is || a && a.is || f).call(a, a, "==", "file_size", {
            name: "is",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "\n  " + (null != (e = (b.is || a && a.is || f).call(a, a, "==", "total_file_size", {
            name: "is",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "\n";
    },
    "2": function(a, b, c, d) {
        return "<li>" + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "画像のファイルフォーマットを統一してください", {
            name: "t",
            hash: {},
            data: d
        })) + "</li>";
    },
    "4": function(a, b, c, d) {
        return "<li>" + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "1枚の画像のファイルサイズは最大8 MBです", {
            name: "t",
            hash: {},
            data: d
        })) + "</li>";
    },
    "6": function(a, b, c, d) {
        return "<li>" + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "画像の合計ファイルサイズは最大30 MBです", {
            name: "t",
            hash: {},
            data: d
        })) + "</li>";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return null != (e = b.each.call(a, null != a ? a.fails : a, {
            name: "each",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "";
    },
    useData: !0
}), this.pixiv.templates["illust-upload-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = '	<li class="item';
        return f = null != (f = b.fails || (null != a ? a.fails : a)) ? f : h, g = {
            name: "fails",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.fails || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (j += e), j + '" style="background-image:url(' + this.escapeExpression((f = null != (f = b.image || (null != a ? a.image : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : f)) + ')">\n		<div class="remove">\n			<i class="_icon-12 _icon-close"></i>\n		</div>\n</li>\n';
    },
    "2": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = "";
        return f = null != (f = b.file_type || (null != a ? a.file_type : a)) ? f : h, g = {
            name: "file_type",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.file_type || (e = j.call(a, e, g)), 
        null != e && (k += e), f = null != (f = b.file_size || (null != a ? a.file_size : a)) ? f : h, 
        g = {
            name: "file_size",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.file_size || (e = j.call(a, e, g)), 
        null != e && (k += e), k;
    },
    "3": function(a, b, c, d) {
        return " fail-file-type";
    },
    "5": function(a, b, c, d) {
        return " fail-file-size";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["manga-page"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<li><a href="' + i((f = null != (f = b.href || (null != a ? a.href : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "href",
            hash: {},
            data: d
        }) : f)) + '" target="_blank"' + (null != (e = b.unless.call(a, (e = d && d.root) && e.loggedIn, {
            name: "unless",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + ">" + i((f = null != (f = b.page || (null != a ? a.page : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "page",
            hash: {},
            data: d
        }) : f)) + "</a></li>\n";
    },
    "2": function(a, b, c, d) {
        return ' class="require-login" data-ref="manga_viewer_zoom_page"';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.pages || (null != a ? a.pages : a)) ? f : b.helperMissing, 
        g = {
            name: "pages",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.pages || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["manga-thumbnail-list"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<li class="thumbnail-item' + (null != (e = b.unless.call(a, null != a ? a.src : a, {
            name: "unless",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + ' _ui-tooltip" data-position="' + i((f = null != (f = b.position || (null != a ? a.position : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "position",
            hash: {},
            data: d
        }) : f)) + '" data-tooltip="' + i((f = null != (f = b.page || (null != a ? a.page : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "page",
            hash: {},
            data: d
        }) : f)) + '">\n' + (null != (e = b["if"].call(a, null != a ? a.src : a, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.program(6, d, 0),
            data: d
        })) ? e : "") + "	</li>\n";
    },
    "2": function(a, b, c, d) {
        return " footer-item";
    },
    "4": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '			<img src="' + h((e = null != (e = b.src || (null != a ? a.src : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "src",
            hash: {},
            data: d
        }) : e)) + '" width="128" height="128" alt="' + h((e = null != (e = b.page || (null != a ? a.page : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "page",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    "6": function(a, b, c, d) {
        return '			<i class="_icon sprites-dot"></i>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.images || (null != a ? a.images : a)) ? f : b.helperMissing, 
        g = {
            name: "images",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.images || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["notification-approve_friend"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="/mypixiv_all.php">\n		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1</span>さんがあなたのマイピク申請を承認しました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-bookmarked"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '		<a href="/novel/bookmark_detail.php?id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '		<a href="/bookmark_detail.php?illust_id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.type : e, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1人</span>以上のユーザーが<span>「$2」</span>をブックマークしました。", null != (e = null != a ? a.details : a) ? e.count : e, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-booth_item"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.adult : e, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.program(6, d, 0),
            data: d
        })) ? e : "";
    },
    "4": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さんが<span>$2 [R-18]</span>と他<span>$3個</span>のアイテムをBOOTHで販売開始しました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.other_count : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "6": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さんが<span>$2</span>と他<span>$3個</span>のアイテムをBOOTHで販売開始しました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.other_count : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "8": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.adult : e, {
            name: "if",
            hash: {},
            fn: this.program(9, d, 0),
            inverse: this.program(11, d, 0),
            data: d
        })) ? e : "";
    },
    "9": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さんが<span>$2 [R-18]</span>をBOOTHで販売開始しました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "11": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さんが<span>$2</span>をBOOTHで販売開始しました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "13": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="' + j(l(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.items : e) ? e[0] : e) ? e.url : e, a)) + '?utm_source=pixiv&utm_medium=popboard&utm_campaign=popboard" target="_blank">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.url : e, a)) + '" alt="" width="48" height="48">\n		</div>\n' + (null != (e = b["if"].call(a, null != (e = null != a ? a.details : a) ? e.other_count : e, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(8, d, 0),
            data: d
        })) ? e : ""), f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(13, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-comic_book"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e, f = b.helperMissing;
        return (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 1, {
            name: "is",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, ">=", 2, {
            name: "is",
            hash: {},
            fn: this.program(8, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "");
    },
    "4": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "本日<span>「$1」</span>と<span>「$2」</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "6": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "昨日<span>「$1」</span>と<span>「$2」</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "8": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "$1に<span>「$2」</span>と<span>「$3」</span>が発売されました。", null != a ? a.date : a, null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "10": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != (e = null != a ? a.details : a) ? e.other_count : e, {
            name: "if",
            hash: {},
            fn: this.program(11, d, 0),
            inverse: this.program(18, d, 0),
            data: d
        })) ? e : "";
    },
    "11": function(a, b, c, d) {
        var e, f = b.helperMissing;
        return (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(12, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 1, {
            name: "is",
            hash: {},
            fn: this.program(14, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, ">=", 2, {
            name: "is",
            hash: {},
            fn: this.program(16, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "");
    },
    "12": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "本日<span>「$2」</span>と他<span>$1冊</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.other_count : e, null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "14": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "昨日<span>「$2」</span>と他<span>$1冊</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.other_count : e, null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "16": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "$1に<span>「$3」</span>と他<span>$2冊</span>が発売されました。", null != a ? a.date : a, null != (e = null != a ? a.details : a) ? e.other_count : e, null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "18": function(a, b, c, d) {
        var e, f = b.helperMissing;
        return (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(19, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, "==", 1, {
            name: "is",
            hash: {},
            fn: this.program(21, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || f).call(a, null != a ? a.date_ago : a, ">=", 2, {
            name: "is",
            hash: {},
            fn: this.program(23, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "");
    },
    "19": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "本日<span>「$1」</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "21": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "昨日<span>「$1」</span>が発売されました。", null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "23": function(a, b, c, d) {
        var e;
        return "					" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "$1に<span>「$2」</span>が発売されました。", null != a ? a.date : a, null != (e = null != a ? a.details : a) ? e.titles : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "25": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="http://comic.pixiv.net/my?ads=popbook#books" class="icon-comic-book" target="_blank">\n		<div class="image">\n			<img src="' + j((b.prop || a && a.prop || h).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/notification/comic.png" alt="">\n		</div>\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.titles : e) ? e.length : e, "==", 2, {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(10, d, 0),
            data: d
        })) ? e : ""), f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(25, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-comic_new"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="http://comic.pixiv.net/my?ads=popnew" class="icon-comic-new" target="_blank">\n		<div class="image">\n			<img src="' + j((b.prop || a && a.prop || h).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/notification/comic.png" alt="">\n		</div>\n		' + j((b.t || a && a.t || h).call(a, "pixivコミックで「いいね！」した作品の更新がありました。", {
            name: "t",
            hash: {},
            data: d
        })) + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-comment_replied"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e, f = this.lambda, g = this.escapeExpression;
        return '		<a href="/novel/show.php?id=' + g(f(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.target_id : e, a)) + "&amp;comment_id=" + g(f(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.comment_id : e, a)) + '">\n';
    },
    "5": function(a, b, c, d) {
        var e, f = this.lambda, g = this.escapeExpression;
        return '		<a href="/member_illust.php?mode=medium&amp;illust_id=' + g(f(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.target_id : e, a)) + "&amp;comment_id=" + g(f(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.comment_id : e, a)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n' + (null != (e = b["if"].call(a, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.is_novel : e, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '		<div class="image"><img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '"></div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1</span>さんがあなたの<span>コメント</span>に返信しました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.user_name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "<br>\n		<span>&gt; " + j((b.t || a && a.t || h).call(a, "$1さん", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.reply_to_user_name : e, {
            name: "t",
            hash: {},
            data: d
        })) + "</span> " + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.comment : e, a)) + "\n", 
        f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, g = {
            name: "date_time",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-commented"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '		<a href="/novel/show.php?id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '		<a href="/member_illust.php?mode=comment_chk&amp;illust_id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.type : e, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1人</span>のユーザーが<span>「$2」</span>にコメントしました。", null != (e = null != a ? a.details : a) ? e.count : e, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-content_response"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.from : e) ? e.type : e, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.program(6, d, 0),
            data: d
        })) ? e : "";
    },
    "4": function(a, b, c, d) {
        var e;
        return '			<a href="/novel/show.php?id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.from : e) ? e.id : e, a)) + '">\n';
    },
    "6": function(a, b, c, d) {
        var e;
        return '			<a href="/member_illust.php?mode=medium&amp;illust_id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.from : e) ? e.id : e, a)) + '">\n';
    },
    "8": function(a, b, c, d) {
        return '		<a href="/response.php?mode=chk">\n';
    },
    "10": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n' + (null != (e = b["if"].call(a, null != a ? a.response_approved : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(8, d, 0),
            data: d
        })) ? e : "") + '		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1</span>さんから<span>「$2」</span>へのイメージレスポンスが届きました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.from : e) ? e.user : e) ? e.name : e, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(10, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-favorited"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return "			" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さん、<span>$2</span>さんがあなたをフォローしました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[1] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "5": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != (e = null != a ? a.details : a) ? e.other_count : e, {
            name: "if",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.program(8, d, 0),
            data: d
        })) ? e : "";
    },
    "6": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$2</span>さんと他<span>$1人</span>のユーザーがあなたをフォローしました。", null != (e = null != a ? a.details : a) ? e.other_count : e, null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "8": function(a, b, c, d) {
        var e;
        return "				" + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "<span>$1</span>さんがあなたをフォローしました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n";
    },
    "10": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="/bookmark.php?type=reg_user">\n		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.url : e, a)) + '" alt="">\n		</div>\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != a ? a.users : a) ? e.length : e, "==", 2, {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : ""), f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(10, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-group_application"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/group/?id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "グループ<span>「$1」</span>に<span>$2人</span>以上の参加申請があります。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.count : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-group_approve"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/group/?id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "グループ<span>「$1」</span>の参加申請が承認されました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-group_comment"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/group/comment.php?id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "グループ<span>「$1」</span>のあなたの投稿に<span>$2件</span>以上のコメントがありました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.count : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-group_content_reference"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/group/comment.php?id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "グループ<span>「$1」</span>にあなたの作品が紹介されました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-group_like"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/group/comment.php?id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "グループ<span>「$1」</span>のあなたの投稿に<span>$2人</span>以上が「いいね！」と言っています。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.count : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-message"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/msg_view.php?mode=get&amp;id=' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.user : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1</span>さんから<span>「$2」</span>のメッセージが届きました。", null != (e = null != (e = null != a ? a.details : a) ? e.user : e) ? e.name : e, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-more"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e;
        return '		<a href="/msgbox.php">\n			' + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "他<span>$1件</span>以上の新着メッセージがあります。", null != a ? a.other_count : a, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n		</a>\n";
    },
    "3": function(a, b, c, d) {
        var e;
        return '		<a href="/notify_all.php">\n			' + (null != (e = (b.t || a && a.t || b.helperMissing).call(a, "他<span>$1件</span>以上の新着通知があります。", null != a ? a.other_count : a, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n		</a>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return '<li class="continue unread">\n' + (null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.notification_type : a, "==", "message", {
            name: "is",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(3, d, 0),
            data: d
        })) ? e : "") + "</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-ranked_in"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = this.lambda, m = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (m += e), 
        m += '">\n	<a href="/ranking.php?mode=' + j(l(null != (e = null != a ? a.details : a) ? e.context : e, a)) + "&amp;content=" + j(l(null != (e = null != a ? a.details : a) ? e.type : e, a)) + '">\n		<div class="image">\n			<img src="' + j(l(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>「$1」</span>が$2で<span>$3位</span>にランクインしました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.category : e, null != (e = null != a ? a.details : a) ? e.position : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (m += e), m + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-received_stacc_message"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="/stacc/my/home/all/message_from">\n		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "フィードで<span>$1</span>さんがあなたへコメントしました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-requested_friend"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n	<a href="/mypixiv_request.php">\n		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>$1</span>さんからマイピク申請が届きました。", null != (e = null != (e = null != (e = null != a ? a.details : a) ? e.users : e) ? e[0] : e) ? e.name : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-scored"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '		<a href="/novel/bookmark_detail.php?id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '		<a href="/bookmark_detail.php?illust_id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.type : e, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>「$1」</span>の評価点数が<span>$2点</span>を超えました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.score : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["notification-tagged"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " unread";
    },
    "3": function(a, b, c, d) {
        var e;
        return '		<a href="/novel/show.php?id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '		<a href="/member_illust.php?mode=medium&amp;illust_id=' + this.escapeExpression(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.id : e, a)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e;
        return '			<div class="notified-at">' + this.escapeExpression((e = null != (e = b.date_time || (null != a ? a.date_time : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "date_time",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<li class="' + j((f = null != (f = b.type || (null != a ? a.type : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : f));
        return f = null != (f = b.unread || (null != a ? a.unread : a)) ? f : h, g = {
            name: "unread",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.unread || (e = k.call(a, e, g)), null != e && (l += e), 
        l += '">\n' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.type : e, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '		<div class="image">\n			<img src="' + j(this.lambda(null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.url : e, a)) + '" alt="">\n		</div>\n		' + (null != (e = (b.t || a && a.t || h).call(a, "<span>「$1」</span>に<span>$2</span>タグが追加されました。", null != (e = null != (e = null != a ? a.details : a) ? e.target : e) ? e.title : e, null != (e = null != a ? a.details : a) ? e.tag : e, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "\n", f = null != (f = b.date_time || (null != a ? a.date_time : a)) ? f : h, 
        g = {
            name: "date_time",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.date_time || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "	</a>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates.pager = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '			<a href="' + g((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" rel="prev" class="_button" title="' + g((b.t || a && a.t || f).call(a, "前へ", {
            name: "t",
            hash: {},
            data: d
        })) + '">\n				<i class="_icon sprites-prev-linked"></i>\n			</a>\n';
    },
    "3": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = "			";
        return f = null != (f = b.current || (null != a ? a.current : a)) ? f : h, g = {
            name: "current",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.current || (e = j.call(a, e, g)), null != e && (k += e), 
        k += "\n			", f = null != (f = b.current || (null != a ? a.current : a)) ? f : h, 
        g = {
            name: "current",
            hash: {},
            fn: this.noop,
            inverse: this.program(6, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.current || (e = j.call(a, e, g)), null != e && (k += e), 
        k + "\n";
    },
    "4": function(a, b, c, d) {
        var e;
        return '<li class="current">' + this.escapeExpression((e = null != (e = b.page || (null != a ? a.page : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "page",
            hash: {},
            data: d
        }) : e)) + "</li>";
    },
    "6": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '<li><a href="' + h((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '">' + h((e = null != (e = b.page || (null != a ? a.page : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "page",
            hash: {},
            data: d
        }) : e)) + "</a></li>";
    },
    "8": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '			<a href="' + g((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" rel="next" class="_button" title="' + g((b.t || a && a.t || f).call(a, "次へ", {
            name: "t",
            hash: {},
            data: d
        })) + '">\n				<i class="_icon sprites-next-linked"></i>\n			</a>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '<div class="pager-container">\n	<span class="prev">\n';
        return f = null != (f = b.prev || (null != a ? a.prev : a)) ? f : h, g = {
            name: "prev",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.prev || (e = j.call(a, e, g)), null != e && (k += e), 
        k += '	</span>\n	<ul class="page-list">\n', f = null != (f = b.pages || (null != a ? a.pages : a)) ? f : h, 
        g = {
            name: "pages",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.pages || (e = j.call(a, e, g)), null != e && (k += e), 
        k += '	</ul>\n	<span class="next">\n', f = null != (f = b.next || (null != a ? a.next : a)) ? f : h, 
        g = {
            name: "next",
            hash: {},
            fn: this.program(8, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.next || (e = j.call(a, e, g)), null != e && (k += e), 
        k + "	</span>\n</div>\n";
    },
    useData: !0
}), this.pixiv.templates["profile-popup-loading"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '					<a href="/member.php?id=' + this.escapeExpression((b.url_encode || a && a.url_encode || h).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '" target="_blank" class="user-icon-container">\n';
        return f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : h, 
        g = {
            name: "profile_img",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.profile_img || (e = j.call(a, e, g)), 
        null != e && (k += e), f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : h, 
        g = {
            name: "profile_img",
            hash: {},
            fn: this.noop,
            inverse: this.program(4, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.profile_img || (e = j.call(a, e, g)), 
        null != e && (k += e), k + "					</a>\n";
    },
    "2": function(a, b, c, d) {
        var e;
        return '							<img src="' + this.escapeExpression((e = null != (e = b.profile_img || (null != a ? a.profile_img : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "profile_img",
            hash: {},
            data: d
        }) : e)) + '" class="user-icon" width="40">\n';
    },
    "4": function(a, b, c, d) {
        return '							<img src="' + this.escapeExpression((b.prop || a && a.prop || b.helperMissing).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" class="user-icon loading" width="40">\n';
    },
    "6": function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.user_name || (null != a ? a.user_name : a)) ? f : b.helperMissing, 
        g = {
            name: "user_name",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.user_name || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    "7": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '					<h1><a href="/member.php?id=' + g((b.url_encode || a && a.url_encode || f).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '" target="_blank" class="user-name">' + g((e = null != (e = b.user_name || (null != a ? a.user_name : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "user_name",
            hash: {},
            data: d
        }) : e)) + "</a></h1>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '<section class="_profile-popup">\n	<div class="wrapper">\n		<div class="items">\n			<div class="_spinner"></div>\n		</div>\n		<div class="user-info">\n			<div class="user-profile">\n';
        return f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, g = {
            name: "user_id",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.user_id || (e = j.call(a, e, g)), null != e && (k += e), 
        k += "			</div>\n", f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        g = {
            name: "user_id",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.user_id || (e = j.call(a, e, g)), null != e && (k += e), 
        k + '		</div>\n	</div>\n	<div class="nipple"></div>\n</section>\n';
    },
    useData: !0
}), this.pixiv.templates["profile-popup"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return '		<div class="no-item">' + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "作品がありません", {
            name: "t",
            hash: {},
            data: d
        })) + "</div>\n";
    },
    "3": function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    "4": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.type : a, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.program(7, d, 0),
            data: d
        })) ? e : "";
    },
    "5": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '				<a href="/novel/show.php?id=' + h((e = null != (e = b.id || (null != a ? a.id : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : e)) + '&amp;ref=profile_card" target="_blank" class="item novel _layout-thumbnail">\n					<h1 class="title">' + h((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '</h1>\n					<div class="word-count">' + h((e = null != (e = b.text_length || (null != a ? a.text_length : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "text_length",
            hash: {},
            data: d
        }) : e)) + " " + h((b.t || a && a.t || f).call(a, "文字", {
            name: "t",
            hash: {},
            data: d
        })) + "</div>\n				</a>\n";
    },
    "7": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.illust_x_restrict : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(8, d, 0),
            inverse: this.program(10, d, 0),
            data: d
        })) ? e : "";
    },
    "8": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '					<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["480mw"] : e, a)) + ')"></a>\n';
    },
    "10": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, (e = d && d.root) && e.r18_page, {
            name: "if",
            hash: {},
            fn: this.program(11, d, 0),
            inverse: this.program(13, d, 0),
            data: d
        })) ? e : "";
    },
    "11": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '						<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item  ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["480mw"] : e, a)) + ')"></a>\n';
    },
    "13": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '						<a href="/member_illust.php?mode=medium&amp;illust_id=' + g((e = null != (e = b.illust_id || (null != a ? a.illust_id : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : e)) + '&amp;ref=profile_card" target="_blank" class="item explicit  ' + g((b.get_thumbnail_classes || a && a.get_thumbnail_classes || f).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '"></a>\n';
    },
    "15": function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(16, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    "16": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.type : a, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.program(17, d, 0),
            data: d
        })) ? e : "";
    },
    "17": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.illust_x_restrict : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(18, d, 0),
            inverse: this.program(20, d, 0),
            data: d
        })) ? e : "";
    },
    "18": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '					<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item  ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + ')"></a>\n';
    },
    "20": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, (e = d && d.root) && e.r18_page, {
            name: "if",
            hash: {},
            fn: this.program(21, d, 0),
            inverse: this.program(13, d, 0),
            data: d
        })) ? e : "";
    },
    "21": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '						<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item  ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["240mw"] : e, a)) + ')"></a>\n';
    },
    "23": function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(24, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    "24": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.type : a, "==", "novel", {
            name: "is",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.program(25, d, 0),
            data: d
        })) ? e : "";
    },
    "25": function(a, b, c, d) {
        var e;
        return null != (e = (b.is || a && a.is || b.helperMissing).call(a, null != a ? a.illust_x_restrict : a, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(26, d, 0),
            inverse: this.program(28, d, 0),
            data: d
        })) ? e : "";
    },
    "26": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '					<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item  ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["128x128"] : e, a)) + ')"></a>\n';
    },
    "28": function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, (e = d && d.root) && e.r18_page, {
            name: "if",
            hash: {},
            fn: this.program(29, d, 0),
            inverse: this.program(13, d, 0),
            data: d
        })) ? e : "";
    },
    "29": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '						<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;ref=profile_card" target="_blank" class="item  ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || g).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" style="background-image:url(' + h(this.lambda(null != (e = null != a ? a.url : a) ? e["128x128"] : e, a)) + ')"></a>\n';
    },
    "31": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '					<li class="new-context"><a href="/msg_send.php?id=' + f((b.url_encode || a && a.url_encode || e).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + f((b.t || a && a.t || e).call(a, "メッセージを送る", {
            name: "t",
            hash: {},
            data: d
        })) + '</a></li>\n					<li class="new-context"><a href="/user_infomsg.php?id=' + f((b.url_encode || a && a.url_encode || e).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + f((b.t || a && a.t || e).call(a, "ユーザーを報告・ブロック", {
            name: "t",
            hash: {},
            data: d
        })) + "</a></li>\n";
    },
    "33": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '		<div class="_follow-button-container';
        return f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, g = {
            name: "is_follow",
            hash: {},
            fn: this.program(34, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k += '">\n			<button class="follow-button">\n				', f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.program(36, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k += "\n				", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.noop,
            inverse: this.program(38, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k += '\n			</button>\n			<span class="follow-more-button-container">\n				<button class="follow-more-button">\n					<i class="_icon sprites-more"></i>\n				</button>\n				<div class="options-wrapper">\n					<div class="options-container">\n						<section class="option">\n', 
        f = null != (f = b.premium || (null != a ? a.premium : a)) ? f : h, g = {
            name: "premium",
            hash: {},
            fn: this.program(40, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.premium || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.premium || (null != a ? a.premium : a)) ? f : h, g = {
            name: "premium",
            hash: {},
            fn: this.noop,
            inverse: this.program(42, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.premium || (e = j.call(a, e, g)), null != e && (k += e), 
        k += '							<div class="item">\n								<label><input type="checkbox" name="restrict" value="1">' + this.escapeExpression((b.t || a && a.t || h).call(a, "公開しない", {
            name: "t",
            hash: {},
            data: d
        })) + "</label>\n							</div>\n", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.program(44, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = j.call(a, e, g)), 
        null != e && (k += e), k + "						</section>\n					</div>\n				</div>\n			</span>\n		</div>\n";
    },
    "34": function(a, b, c, d) {
        return " following2";
    },
    "36": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォロー中", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "38": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォローする", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "40": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '								<div class="item">\n									<select name="tag" disabled>\n										<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n										<option value="new">' + f((b.t || a && a.t || e).call(a, "新規フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + "</option>\n									</select>\n								</div>\n";
    },
    "42": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '		 						<a href="/premium.php?ref=profile_card" target="_blank" class="item premium-feature">\n									<select name="tag" disabled>\n										<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n									</select>\n									<i class="_icon sprites-premium"></i>\n									<p class="_notes">' + f((b.t || a && a.t || e).call(a, "プレミアム会員になるとユーザーをフォルダーに分類できます", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n								</a>\n";
    },
    "44": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '								<div class="action">\n									<span class="_button2 unfollow-button">' + f((b.t || a && a.t || e).call(a, "フォロー解除", {
            name: "t",
            hash: {},
            data: d
        })) + '</span>\n									<span class="_button2 update-button">' + f((b.t || a && a.t || e).call(a, "更新", {
            name: "t",
            hash: {},
            data: d
        })) + "</span>\n								</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = this.escapeExpression, i = b.helperMissing, j = "function", k = b.blockHelperMissing, l = '<div class="items layout-' + h(this.lambda(null != (e = null != a ? a.items : a) ? e.length : e, a)) + '">\n' + (null != (e = (b.is || a && a.is || i).call(a, null != (e = null != a ? a.illusts : a) ? e.length : e, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || i).call(a, null != (e = null != a ? a.items : a) ? e.length : e, "==", 1, {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || i).call(a, null != (e = null != a ? a.items : a) ? e.length : e, "==", 2, {
            name: "is",
            hash: {},
            fn: this.program(15, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = (b.is || a && a.is || i).call(a, null != (e = null != a ? a.items : a) ? e.length : e, "==", 3, {
            name: "is",
            hash: {},
            fn: this.program(23, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '</div>\n<div class="user-info">\n	<div class="user-profile">\n		<a href="/member.php?id=' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank" class="user-icon-container">\n			<img src="' + h((f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "profile_img",
            hash: {},
            data: d
        }) : f)) + '" class="user-icon" width="40">\n		</a>\n		<div class="user-menu-items-wrapper">\n			<ul class="user-menu-items">\n				<li><a href="/member.php?id=' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + h((b.t || a && a.t || i).call(a, "プロフィール", {
            name: "t",
            hash: {},
            data: d
        })) + '</a></li>\n				<li><a href="/member_illust.php?id=' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + h((b.t || a && a.t || i).call(a, "作品", {
            name: "t",
            hash: {},
            data: d
        })) + '</a></li>\n				<li><a href="/bookmark.php?id=' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + h((b.t || a && a.t || i).call(a, "ブックマーク", {
            name: "t",
            hash: {},
            data: d
        })) + '</a></li>\n				<li><a href="/stacc/' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_account : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank">' + h((b.t || a && a.t || i).call(a, "フィード", {
            name: "t",
            hash: {},
            data: d
        })) + "</a></li>\n";
        return f = null != (f = b.controllable || (null != a ? a.controllable : a)) ? f : i, 
        g = {
            name: "controllable",
            hash: {},
            fn: this.program(31, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.controllable || (e = k.call(a, e, g)), 
        null != e && (l += e), l += '			</ul>\n		</div>\n	</div>\n	<h1><a href="/member.php?id=' + h((b.url_encode || a && a.url_encode || i).call(a, null != a ? a.user_id : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '&amp;ref=profile_card" target="_blank" class="user-name">' + h((f = null != (f = b.user_name || (null != a ? a.user_name : a)) ? f : i, 
        typeof f === j ? f.call(a, {
            name: "user_name",
            hash: {},
            data: d
        }) : f)) + '</a></h1>\n	<p class="description">' + h((b.truncate || a && a.truncate || i).call(a, null != a ? a.user_comment : a, 16, {
            name: "truncate",
            hash: {},
            data: d
        })) + "</p>\n\n", f = null != (f = b.controllable || (null != a ? a.controllable : a)) ? f : i, 
        g = {
            name: "controllable",
            hash: {},
            fn: this.program(33, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === j ? f.call(a, g) : f, b.controllable || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "</div>\n";
    },
    useData: !0
}), this.pixiv.templates["promotion-comic-novel"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '		<div class="item book _ui-tooltip" data-tooltip="' + i((f = null != (f = b.title || (null != a ? a.title : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : f)) + '">\n			<a href="http://comic.pixiv.net/works/' + i((f = null != (f = b.workId || (null != a ? a.workId : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "workId",
            hash: {},
            data: d
        }) : f)) + '?ads=mpr_novel" target="_blank">\n' + (null != (e = b["if"].call(a, null != a ? a.lazy : a, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + "			</a>\n		</div>\n";
    },
    "2": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression, h = "function";
        return '					<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" data-src="' + g((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="140" height="190" alt="' + g((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    "4": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '					<img src="' + h((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="140" height="190" alt="' + h((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = '<div class="items books">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + '</div>\n<ul class="pager"></ul>\n';
    },
    useData: !0
}), this.pixiv.templates["promotion-comic"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '		<div class="item book _ui-tooltip" data-tooltip="' + i((f = null != (f = b.title || (null != a ? a.title : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : f)) + '">\n' + (null != (e = b["if"].call(a, null != a ? a.newFlag : a, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '			<div class="thick">\n				<a href="http://comic.pixiv.net/magazines/' + i((f = null != (f = b.magazineId || (null != a ? a.magazineId : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "magazineId",
            hash: {},
            data: d
        }) : f)) + '?ads=mpr" target="_blank">\n' + (null != (e = b["if"].call(a, null != a ? a.lazy : a, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.program(6, d, 0),
            data: d
        })) ? e : "") + "				</a>\n			</div>\n		</div>\n";
    },
    "2": function(a, b, c, d) {
        return '				<ul class="badge">\n					<li class="new">NEW</li>\n				</ul>\n';
    },
    "4": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression, h = "function";
        return '						<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" data-src="' + g((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="60" height="87" alt="' + g((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === h ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    "6": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '						<img src="' + h((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="60" height="87" alt="' + h((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = '<div class="items books">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + '</div>\n<ul class="pager"></ul>\n<div class="pager-prev"></div>\n<div class="pager-next"></div>\n';
    },
    useData: !0
}), this.pixiv.templates["promotion-comico"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = '			<div class="items">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + "			</div>\n";
    },
    "2": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '					<section class="item">\n						<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="image">\n' + (null != (e = b["if"].call(a, null != a ? a.lazy : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '						</a>\n						<div class="body">\n							<h1 class="title">\n								<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">' + i((f = null != (f = b.name || (null != a ? a.name : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : f)) + "</a>\n							</h1>\n							<p>" + i((b.truncate || a && a.truncate || g).call(a, null != a ? a.description : a, 50, {
            name: "truncate",
            hash: {},
            data: d
        })) + "</p>\n						</div>\n					</section>\n";
    },
    "3": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '								<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" data-src="' + g((e = null != (e = b.image || (null != a ? a.image : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : e)) + '" alt="" height="89">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '								<img src="' + this.escapeExpression((e = null != (e = b.image || (null != a ? a.image : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : e)) + '" alt="" height="89">\n';
    },
    "7": function(a, b, c, d) {
        return '			<p class="_no-item">' + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "作品がありません", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n";
    },
    "9": function(a, b, c, d) {
        return '		<ul class="pager"></ul>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '<div class="wrapper">\n	<aside class="item-container">\n		<h1 class="service-title">\n			<a href="' + h((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">\n				<img src="' + h((b.prop || a && a.prop || g).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/comico/logo.png" alt="comico" width="70" height="17">\n			</a>\n		</h1>\n' + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(7, d, 0),
            data: d
        })) ? e : "") + "	</aside>\n" + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(9, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "</div>\n";
    },
    useData: !0
}), this.pixiv.templates["promotion-contest-novel"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '		<div class="item contest">\n			<a href="' + h((e = null != (e = b.linkURL || (null != a ? a.linkURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "linkURL",
            hash: {},
            data: d
        }) : e)) + '" target="_blank">\n				<img src="' + h((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="548" height="178">\n			</a>\n		</div>\n';
    },
    "3": function(a, b, c, d) {
        return "";
    },
    "5": function(a, b, c, d) {
        return '	<ul class="pager"></ul>\n	<div class="pager-prev"></div>\n	<div class="pager-next"></div>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = '<div class="items contests">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + "</div>\n" + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = b["if"].call(a, null != (e = null != a ? a.items : a) ? e[1] : e, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "");
    },
    useData: !0
}), this.pixiv.templates["promotion-contest-portal"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '		<div class="item contest">\n			<a href="' + h((e = null != (e = b.linkURL || (null != a ? a.linkURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "linkURL",
            hash: {},
            data: d
        }) : e)) + '" target="_blank">\n				<img src="' + h((e = null != (e = b.imageURL || (null != a ? a.imageURL : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "imageURL",
            hash: {},
            data: d
        }) : e)) + '" width="968" height="314">\n			</a>\n		</div>\n';
    },
    "3": function(a, b, c, d) {
        return "";
    },
    "5": function(a, b, c, d) {
        return '	<ul class="pager"></ul>\n	<div class="pager-prev"></div>\n	<div class="pager-next"></div>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = '<div class="items contests">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + "</div>\n" + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + (null != (e = b["if"].call(a, null != (e = null != a ? a.items : a) ? e[1] : e, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "");
    },
    useData: !0
}), this.pixiv.templates["promotion-melonbooks-dl"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '		<div class="_melonbooks-dl-item">\n			<a href="' + h((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" target="_blank">\n				<h1 class="title">' + h((e = null != (e = b.name || (null != a ? a.name : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : e)) + '</h1>\n				<img src="' + h((e = null != (e = b.image || (null != a ? a.image : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : e)) + '" width="100" height="100" alt="">\n				<p class="description">' + h((e = null != (e = b.description || (null != a ? a.description : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "description",
            hash: {},
            data: d
        }) : e)) + "</p>\n			</a>\n		</div>\n";
    },
    "3": function(a, b, c, d) {
        return '		<p class="_no-item">' + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "商品はまだありません", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '<aside class="_unit">\n	<h1 class="unit-title"><a href="' + j((f = null != (f = b.url || (null != a ? a.url : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">' + j((b.t || a && a.t || h).call(a, "メロンブックスDL", {
            name: "t",
            hash: {},
            data: d
        })) + "</a></h1>\n";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : h, g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.items || (e = k.call(a, e, g)), null != e && (l += e), 
        f = null != (f = b.items || (null != a ? a.items : a)) ? f : h, g = {
            name: "items",
            hash: {},
            fn: this.noop,
            inverse: this.program(3, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.items || (e = k.call(a, e, g)), null != e && (l += e), 
        l + "</aside>\n";
    },
    useData: !0
}), this.pixiv.templates.promotion = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = '			<div class="items">\n';
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + "			</div>\n";
    },
    "2": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression, j = this.lambda;
        return '					<section class="item">\n						<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + "?utm_source=pixiv&amp;utm_medium=promotion&amp;utm_content=" + i(j((e = d && d.root) && e.content, a)) + '-item&amp;utm_campaign=pixiv-promotion" target="_blank" class="image">\n' + (null != (e = b["if"].call(a, null != a ? a.lazy : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.program(5, d, 0),
            data: d
        })) ? e : "") + '						</a>\n						<div class="body">\n							<h1 class="title">\n								<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + "?utm_source=pixiv&amp;utm_medium=promotion&amp;utm_content=" + i(j((e = d && d.root) && e.content, a)) + '-item&amp;utm_campaign=pixiv-promotion" target="_blank" class="image">' + i((f = null != (f = b.name || (null != a ? a.name : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : f)) + '</a>\n							</h1>\n							<p class="price">&yen;' + i((b.format || a && a.format || g).call(a, null != a ? a.price : a, {
            name: "format",
            hash: {},
            data: d
        })) + "</p>\n							<p>" + i((b.truncate || a && a.truncate || g).call(a, null != a ? a.description : a, 50, {
            name: "truncate",
            hash: {},
            data: d
        })) + "</p>\n						</div>\n					</section>\n";
    },
    "3": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '								<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" data-src="' + g((e = null != (e = b.image || (null != a ? a.image : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : e)) + '" alt="">\n';
    },
    "5": function(a, b, c, d) {
        var e;
        return '								<img src="' + this.escapeExpression((e = null != (e = b.image || (null != a ? a.image : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : e)) + '" alt="">\n';
    },
    "7": function(a, b, c, d) {
        return '			<p class="_no-item">' + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "商品はまだありません", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n";
    },
    "9": function(a, b, c, d) {
        return '		<ul class="pager"></ul>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '<div class="wrapper">\n	<aside class="item-container">\n		<h1 class="service-title">\n			<a href="' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + "?utm_source=pixiv&amp;utm_medium=promotion&amp;utm_content=" + i((f = null != (f = b.content || (null != a ? a.content : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "content",
            hash: {},
            data: d
        }) : f)) + '-logo&amp;utm_campaign=pixiv-promotion" target="_blank">\n				<img src="' + i((b.prop || a && a.prop || g).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/booth/logo.png" alt="BOOTH" width="75" height="25">\n			</a>\n		</h1>\n' + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(7, d, 0),
            data: d
        })) ? e : "") + "	</aside>\n" + (null != (e = b["if"].call(a, null != a ? a.items : a, {
            name: "if",
            hash: {},
            fn: this.program(9, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "</div>\n";
    },
    useData: !0
}), this.pixiv.templates["ranking-attr-filter-list-item"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return " checked";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = this.escapeExpression, l = '<div class="_sub-menu-container">\n	<ul class="sub-menu">\n		<li><label class="menu-item"><input type="checkbox" name="lo"';
        return f = null != (f = b.lo || (null != a ? a.lo : a)) ? f : h, g = {
            name: "lo",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.lo || (e = j.call(a, e, g)), null != e && (l += e), 
        l += ">" + k((b.t || a && a.t || h).call(a, "未成年", {
            name: "t",
            hash: {},
            data: d
        })) + '</label></li>\n		<li><label class="menu-item"><input type="checkbox" name="furry"', 
        f = null != (f = b.furry || (null != a ? a.furry : a)) ? f : h, g = {
            name: "furry",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.furry || (e = j.call(a, e, g)), null != e && (l += e), 
        l += ">" + k((b.t || a && a.t || h).call(a, "ケモノ", {
            name: "t",
            hash: {},
            data: d
        })) + '</label></li>\n		<li><label class="menu-item"><input type="checkbox" name="bl"', 
        f = null != (f = b.bl || (null != a ? a.bl : a)) ? f : h, g = {
            name: "bl",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.bl || (e = j.call(a, e, g)), null != e && (l += e), 
        l += ">" + k((b.t || a && a.t || h).call(a, "男性同性愛", {
            name: "t",
            hash: {},
            data: d
        })) + '</label></li>\n		<li><label class="menu-item"><input type="checkbox" name="yuri"', 
        f = null != (f = b.yuri || (null != a ? a.yuri : a)) ? f : h, g = {
            name: "yuri",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.yuri || (e = j.call(a, e, g)), null != e && (l += e), 
        l + ">" + k((b.t || a && a.t || h).call(a, "女性同性愛", {
            name: "t",
            hash: {},
            data: d
        })) + "</label></li>\n	</ul>\n</div>\n";
    },
    useData: !0
}), this.pixiv.templates["ranking-info-modal"] = Handlebars.template({
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression, i = "function";
        return '<div class="info-modal">\n	<dl class="inline-list">\n		<dt>' + h((b.t || a && a.t || g).call(a, "投稿日時", {
            name: "t",
            hash: {},
            data: d
        })) + "</dt>\n		<dd>" + h((f = null != (f = b.date || (null != a ? a.date : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "date",
            hash: {},
            data: d
        }) : f)) + '</dd>\n	</dl>\n	<dl class="inline-list slash-separated">\n		<dt>' + h((b.t || a && a.t || g).call(a, "閲覧数", {
            name: "t",
            hash: {},
            data: d
        })) + "</dt>\n		<dd>" + h((f = null != (f = b.viewCount || (null != a ? a.viewCount : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "viewCount",
            hash: {},
            data: d
        }) : f)) + "</dd>\n		<dt>" + h((b.t || a && a.t || g).call(a, "総合点", {
            name: "t",
            hash: {},
            data: d
        })) + "</dt>\n		<dd>" + h((f = null != (f = b.totalScore || (null != a ? a.totalScore : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "totalScore",
            hash: {},
            data: d
        }) : f)) + '</dd>\n	</dl>\n	<div>\n		<textarea class="ui-select-all">' + (null != (f = null != (f = b.text || (null != a ? a.text : a)) ? f : g, 
        e = typeof f === i ? f.call(a, {
            name: "text",
            hash: {},
            data: d
        }) : f) ? e : "") + " " + (null != (f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        e = typeof f === i ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f) ? e : "") + '</textarea>\n	</div>\n	<ul class="share-buttons">\n		<li class="twitter">\n			<a href="https://twitter.com/share" class="twitter-share-button" data-url="' + h((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" data-text="' + h((f = null != (f = b.text || (null != a ? a.text : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "text",
            hash: {},
            data: d
        }) : f)) + " " + h((f = null != (f = b.hashtag || (null != a ? a.hashtag : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "hashtag",
            hash: {},
            data: d
        }) : f)) + '"></a>\n		</li>\n		<li class="facebook">\n			<div class="fb-like" data-href="' + h((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === i ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + '" data-layout="button_count" data-send="false"></div>\n		</li>\n	</ul>\n</div>\n';
    },
    useData: !0
}), this.pixiv.templates["reply-to"] = Handlebars.template({
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f = b.helperMissing;
        return '<div class="_reply-to">\n	' + (null != (e = (b.t || a && a.t || f).call(a, '<span class="user">$1</span>さんに返信', null != a ? a.userName : a, {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + '\n	<span class="action-cancel-reply _ui-tooltip" data-tooltip="' + this.escapeExpression((b.t || a && a.t || f).call(a, "返信を止める", {
            name: "t",
            hash: {},
            data: d
        })) + '"></span>\n</div>\n';
    },
    useData: !0
}), this.pixiv.templates["showcase-modal-preview"] = Handlebars.template({
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((e = null != (e = b.illust_id || (null != a ? a.illust_id : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : e)) + '">\n	<img src="' + h((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" class="_ui-tooltip" data-tooltip="' + h((e = null != (e = b.illust_title || (null != a ? a.illust_title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "illust_title",
            hash: {},
            data: d
        }) : e)) + '">\n</a>\n';
    },
    useData: !0
}), this.pixiv.templates["showcase-modal"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e;
        return '					<div class="error">' + this.escapeExpression((e = null != (e = b.error_point || (null != a ? a.error_point : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "error_point",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    "3": function(a, b, c, d) {
        var e;
        return '								<div class="error">' + this.escapeExpression((e = null != (e = b.error_date || (null != a ? a.error_date : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "error_date",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    "5": function(a, b, c, d) {
        var e;
        return '								<div class="error">' + this.escapeExpression((e = null != (e = b.error_tags || (null != a ? a.error_tags : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "error_tags",
            hash: {},
            data: d
        }) : e)) + "</div>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '<section class="showcase-set ui-modal-close" id="showcase-' + i((f = null != (f = b.id || (null != a ? a.id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : f)) + '">\n	<div class="container">\n		<div class="close ui-modal-close"></div>\n\n		<div class="content">\n			<h1>' + i((b.t || a && a.t || g).call(a, "ショーケースを設定", {
            name: "t",
            hash: {},
            data: d
        })) + '</h1>\n			<form action="/setting_showcase.php" method="POST">\n				<input type="hidden" name="type" value="1">\n				<input type="hidden" name="action" value="add">\n\n' + (null != (e = b["if"].call(a, null != a ? a.error_point : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '				<div class="input-container">\n					<dl>\n						<dt>' + i((b.t || a && a.t || g).call(a, "作品ID", {
            name: "t",
            hash: {},
            data: d
        })) + '</dt>\n						<dd class="illust-id-container">\n							<input type="text" class="illust-id" name="illustid" value="' + i((f = null != (f = b.form_illust_id || (null != a ? a.form_illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "form_illust_id",
            hash: {},
            data: d
        }) : f)) + '" placeholder="' + i((b.t || a && a.t || g).call(a, "作品ID、またはURLを入力", {
            name: "t",
            hash: {},
            data: d
        })) + '"><span class="loading"></span>\n							<div class="error">' + i((f = null != (f = b.error_illust_id || (null != a ? a.error_illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "error_illust_id",
            hash: {},
            data: d
        }) : f)) + "</div>\n						</dd>\n\n						<dt>" + i((b.t || a && a.t || g).call(a, "期間", {
            name: "t",
            hash: {},
            data: d
        })) + '</dt>\n						<dd class="date-container">\n							<input type="text" class="date ui-modal-trigger" name="start_date" value="' + i((f = null != (f = b.form_start_date || (null != a ? a.form_start_date : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "form_start_date",
            hash: {},
            data: d
        }) : f)) + '" placeholder="' + i((b.t || a && a.t || g).call(a, "開始日", {
            name: "t",
            hash: {},
            data: d
        })) + '" readonly>\n							&nbsp;〜&nbsp;\n							<input type="text" class="date ui-modal-trigger" name="finish_date" value="' + i((f = null != (f = b.form_finish_date || (null != a ? a.form_finish_date : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "form_finish_date",
            hash: {},
            data: d
        }) : f)) + '" placeholder="' + i((b.t || a && a.t || g).call(a, "終了日", {
            name: "t",
            hash: {},
            data: d
        })) + '" readonly>\n' + (null != (e = b["if"].call(a, null != a ? a.error_date : a, {
            name: "if",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "						</dd>\n\n						<dt>" + i((b.t || a && a.t || g).call(a, "タグ", {
            name: "t",
            hash: {},
            data: d
        })) + '</dt>\n						<dd class="tags-container">\n							<input type="text" class="ui-tag" name="tags" value="' + i((f = null != (f = b.form_tags || (null != a ? a.form_tags : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "form_tags",
            hash: {},
            data: d
        }) : f)) + '">\n' + (null != (e = b["if"].call(a, null != a ? a.error_tags : a, {
            name: "if",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '						</dd>\n						<div class="supplementary">\n							<ul>\n								<li>' + (null != (e = (b.t || a && a.t || g).call(a, "pixivポイントは、<strong>1タグ1日100pp</strong>から設定が可能です", {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "</li>\n								<li>" + (null != (e = (b.t || a && a.t || g).call(a, "設定できる掲載期間は、<strong>翌日の0時から1日毎</strong>になります", {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "</li>\n								<li>" + (null != (e = (b.t || a && a.t || g).call(a, "掲載開始30分前になると、掲載準備中になります", {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + "</li>\n								<li>" + (null != (e = (b.t || a && a.t || g).call(a, "使用したpixivポイントは、掲載準備中以降は払い戻されません", {
            name: "t",
            hash: {},
            data: d
        })) ? e : "") + '</li>\n							</ul>\n						</div>\n					</dl>\n				</div>\n\n				<div class="point-container">\n					<div class="preview no-item">?</div>\n					<dl>\n						<dt>' + i((b.t || a && a.t || g).call(a, "所持ポイント", {
            name: "t",
            hash: {},
            data: d
        })) + "</dt>\n						<dd>" + i((b.format || a && a.format || g).call(a, null != a ? a.total_point : a, {
            name: "format",
            hash: {},
            data: d
        })) + ' <span class="unit" title="' + i((b.t || a && a.t || g).call(a, "pixivポイント", {
            name: "t",
            hash: {},
            data: d
        })) + '">pp</span></dd>\n						<dt>' + i((b.t || a && a.t || g).call(a, "使用ポイント", {
            name: "t",
            hash: {},
            data: d
        })) + '</dt>\n						<dd><span class="point"></span> <span class="unit" title="' + i((b.t || a && a.t || g).call(a, "pixivポイント", {
            name: "t",
            hash: {},
            data: d
        })) + '">pp</span></dd>\n					</dl>\n					<p><a href="/help.php#11-1">' + i((b.t || a && a.t || g).call(a, "pixivポイントについて", {
            name: "t",
            hash: {},
            data: d
        })) + '</a></p>\n				</div>\n				<div class="submit"><input type="submit" value="' + i((b.t || a && a.t || g).call(a, "この内容で設定する", {
            name: "t",
            hash: {},
            data: d
        })) + '"></div>\n			</form>\n		</div>\n	</div>\n</section>\n';
    },
    useData: !0
}), this.pixiv.templates["stamp-tab-content"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = '	<ul class="sticker-list ui-tab-content _lazy-image-container sticker-' + this.escapeExpression((f = null != (f = b.index || d && d.index) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "index",
            hash: {},
            data: d
        }) : f)) + '">\n';
        return f = null != (f = b.stamps || (null != a ? a.stamps : a)) ? f : h, g = {
            name: "stamps",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.stamps || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (j += e), j + "	</ul>\n";
    },
    "2": function(a, b, c, d) {
        var e = this.escapeExpression, f = b.helperMissing;
        return '	<li class="sticker" data-id="' + e(this.lambda(a, a)) + '"><img src="' + e((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/common/transparent.gif" width="70" height="70" class="_lazy-image" data-src="' + e((b.prop || a && a.prop || f).call(a, "commonSourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + "/images/stamp/stamps/" + e((b.url_encode || a && a.url_encode || f).call(a, a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '_s.jpg"></li>\n';
    },
    "4": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = this.escapeExpression;
        return '		<li class="ui-tab' + (null != (e = (b.is || a && a.is || g).call(a, d && d.index, "==", 0, {
            name: "is",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '" data-target="sticker-' + h((f = null != (f = b.index || d && d.index) ? f : g, 
        "function" == typeof f ? f.call(a, {
            name: "index",
            hash: {},
            data: d
        }) : f)) + '"><img src="' + h((b.prop || a && a.prop || g).call(a, "commonSourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + "images/stamp/main/" + h((b.url_encode || a && a.url_encode || g).call(a, null != a ? a.slug : a, {
            name: "url_encode",
            hash: {},
            data: d
        })) + '.png" width="24" height="24"></li>\n';
    },
    "5": function(a, b, c, d) {
        return " default";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return "\n" + (null != (e = b.each.call(a, null != a ? a.stamp_series : a, {
            name: "each",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '\n<ul class="sticker-type-list ui-tabs">\n' + (null != (e = b.each.call(a, null != a ? a.stamp_series : a, {
            name: "each",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '</ul>\n<div class="disabler"><div class="bar"></div></div>\n';
    },
    useData: !0
}), this.pixiv.templates["status-item"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '	<a href="' + h((e = null != (e = b.link || (null != a ? a.link : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "link",
            hash: {},
            data: d
        }) : e)) + '" class="status-item ' + h((e = null != (e = b.type || (null != a ? a.type : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : e)) + '">' + h((b.t || a && a.t || f).call(a, null != a ? a.text : a, {
            name: "t",
            hash: {},
            data: d
        })) + "</a>\n";
    },
    "3": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '	<span class="status-item ' + g((e = null != (e = b.type || (null != a ? a.type : a)) ? e : f, 
        "function" == typeof e ? e.call(a, {
            name: "type",
            hash: {},
            data: d
        }) : e)) + '">' + g((b.t || a && a.t || f).call(a, null != a ? a.text : a, {
            name: "t",
            hash: {},
            data: d
        })) + "</span>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return null != (e = b["if"].call(a, null != a ? a.link : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(3, d, 0),
            data: d
        })) ? e : "";
    },
    useData: !0
}), this.pixiv.templates["tag-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = '	<li>\n		<span class="tag c' + (null != (e = b["if"].call(a, null != a ? a.cloud : a, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + '" data-tag="' + j((f = null != (f = b.name || (null != a ? a.name : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : f)) + '">\n			';
        return f = null != (f = b.self || (null != a ? a.self : a)) ? f : h, g = {
            name: "self",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.self || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (k += e), k + "\n			" + j((f = null != (f = b.name || (null != a ? a.name : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "name",
            hash: {},
            data: d
        }) : f)) + "\n		</span>\n	</li>\n";
    },
    "2": function(a, b, c, d) {
        var e;
        return this.escapeExpression((e = null != (e = b.cloud || (null != a ? a.cloud : a)) ? e : b.helperMissing, 
        "function" == typeof e ? e.call(a, {
            name: "cloud",
            hash: {},
            data: d
        }) : e));
    },
    "4": function(a, b, c, d) {
        return "6";
    },
    "6": function(a, b, c, d) {
        return '<span class="self-tag">*</span>';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.tags || (null != a ? a.tags : a)) ? f : b.helperMissing, 
        g = {
            name: "tags",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.tags || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["tag-order"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '	<li class="_clickable current" data-type="name">' + g((b.t || a && a.t || f).call(a, "名前順", {
            name: "t",
            hash: {},
            data: d
        })) + (null != (e = (b.eq || a && a.eq || f).call(a, null != a ? a.order : a, "desc", {
            name: "eq",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + '</li>\n	<li class="_clickable" data-type="count">' + g((b.t || a && a.t || f).call(a, "件数順", {
            name: "t",
            hash: {},
            data: d
        })) + "</li>\n";
    },
    "2": function(a, b, c, d) {
        return "↓";
    },
    "4": function(a, b, c, d) {
        return "↑";
    },
    "6": function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '	<li class="_clickable" data-type="name">' + g((b.t || a && a.t || f).call(a, "名前順", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n	<li class="_clickable current" data-type="count">' + g((b.t || a && a.t || f).call(a, "件数順", {
            name: "t",
            hash: {},
            data: d
        })) + (null != (e = (b.eq || a && a.eq || f).call(a, null != a ? a.order : a, "desc", {
            name: "eq",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + "</li>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e;
        return null != (e = (b.eq || a && a.eq || b.helperMissing).call(a, null != a ? a.type : a, "name", {
            name: "eq",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(6, d, 0),
            data: d
        })) ? e : "";
    },
    useData: !0
}), this.pixiv.templates["ugoku-illust-file-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = this.escapeExpression, l = '<li class="item';
        return f = null != (f = b.fail_type || (null != a ? a.fail_type : a)) ? f : h, g = {
            name: "fail_type",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.fail_type || (e = j.call(a, e, g)), 
        null != e && (l += e), f = null != (f = b.fail_size || (null != a ? a.fail_size : a)) ? f : h, 
        g = {
            name: "fail_size",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.fail_size || (e = j.call(a, e, g)), 
        null != e && (l += e), f = null != (f = b.fail_file_size || (null != a ? a.fail_file_size : a)) ? f : h, 
        g = {
            name: "fail_file_size",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.fail_file_size || (e = j.call(a, e, g)), 
        null != e && (l += e), l + '">\n	<div class="file-name">' + k(this.lambda(null != (e = null != a ? a.file : a) ? e.name : e, a)) + '</div>\n	<div class="frame">\n		<img src="' + k((f = null != (f = b.image || (null != a ? a.image : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "image",
            hash: {},
            data: d
        }) : f)) + '" width="150">\n		<div class="file-size"><span class="value">' + k((f = null != (f = b.file_size_text || (null != a ? a.file_size_text : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "file_size_text",
            hash: {},
            data: d
        }) : f)) + '</span></div>\n		<div class="delay open-delay-modal ui-modal-trigger _ui-tooltip" data-tooltip="' + k((b.t || a && a.t || h).call(a, "フレームの時間を変更", {
            name: "t",
            hash: {},
            data: d
        })) + '"><span class="value">' + k((f = null != (f = b.delay_text || (null != a ? a.delay_text : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "delay_text",
            hash: {},
            data: d
        }) : f)) + "</span></div>\n	</div>\n</li>\n";
    },
    "2": function(a, b, c, d) {
        return " fail-type";
    },
    "4": function(a, b, c, d) {
        return " fail-size";
    },
    "6": function(a, b, c, d) {
        return " fail-file-size";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["ugoku-illust-upload-modal"] = Handlebars.template({
    "1": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "完了", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "3": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "情報入力へ", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f = b.helperMissing, g = this.escapeExpression;
        return '<div class="_ugoku-illust-upload-modal _user-input-modal">\n	<section class="content">\n		<header class="header">\n			<div class="wrapper">\n				<h1 class="title">' + g((b.t || a && a.t || f).call(a, "フレーム編集", {
            name: "t",
            hash: {},
            data: d
        })) + '</h1>\n				<button class="_action-button next upload" disabled>\n					' + (null != (e = b["if"].call(a, null != a ? a.re_upload : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(3, d, 0),
            data: d
        })) ? e : "") + '\n				</button>\n				<span>\n					<button class="back close _action-button">' + g((b.t || a && a.t || f).call(a, "戻る", {
            name: "t",
            hash: {},
            data: d
        })) + '</button>\n				</span>\n			</div>\n		</header>\n\n		<div class="preview-container">\n			<div class="_ugoku-illust-player-container">\n				<div class="wrapper">\n					<div class="player toggle"></div>\n					<progress class="preview-progress"></progress>\n					<div class="controls">\n						<span class="control-item play">\n							<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/ugoku-illust/play.png" width="26" height="26">\n						</span>\n						<span class="control-item pause">\n							<img src="' + g((b.prop || a && a.prop || f).call(a, "sourcePath", {
            name: "prop",
            hash: {},
            data: d
        })) + 'images/ugoku-illust/pause.png" width="26" height="26">\n						</span>\n					</div>\n				</div>\n			</div>\n		</div>\n\n		<div class="error-container">\n			<ul class="error-items">\n				<li class="error-fail-length">' + g((b.t || a && a.t || f).call(a, "うごくイラストの作成には2フレーム以上の画像が必要です", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n				<li class="error-fail-type">' + g((b.t || a && a.t || f).call(a, "すべてのフレームの画像フォーマットを統一してください", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n				<li class="error-fail-size">' + g((b.t || a && a.t || f).call(a, "すべてのフレームの画像サイズを統一してください", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n				<li class="error-fail-file-size">' + g((b.t || a && a.t || f).call(a, "各フレームのファイルサイズは最大8MBです", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n				<li class="error-fail-file-size-total">' + g((b.t || a && a.t || f).call(a, "すべてのフレームの合計ファイルサイズは最大30MBです", {
            name: "t",
            hash: {},
            data: d
        })) + '</li>\n			</ul>\n		</div>\n\n		<div class="manage-container">\n			<div class="actions">\n				<button class="_action-button add-item _ui-tooltip" data-tooltip="' + g((b.t || a && a.t || f).call(a, "150枚まで追加できます", {
            name: "t",
            hash: {},
            data: d
        })) + '">\n					<i class="_icon sprites-button-add"></i>\n				</button>\n			</div>\n\n			<div class="status-container">\n				<ul class="status">\n					<li class="status-item total-frames"><span class="value">0</span> フレーム</li>\n					<li class="status-item resolution">0 x 0</li>\n					<li class="status-item total-bytes">0 B</li>\n					<li class="status-item total-delay">00:000</li>\n				</ul>\n			</div>\n\n			<div class="context-actions">\n				<button class="_control-button select-all">' + g((b.t || a && a.t || f).call(a, "すべて選択", {
            name: "t",
            hash: {},
            data: d
        })) + '</button>\n				<button class="_control-button select-none">' + g((b.t || a && a.t || f).call(a, "選択解除", {
            name: "t",
            hash: {},
            data: d
        })) + '</button>\n				<span class="new-context">\n					<button class="_action-button open-delay-modal ui-modal-trigger" disabled>' + g((b.t || a && a.t || f).call(a, "フレームの時間を変更", {
            name: "t",
            hash: {},
            data: d
        })) + '</button>\n					<button class="_action-button remove" disabled>' + g((b.t || a && a.t || f).call(a, "削除", {
            name: "t",
            hash: {},
            data: d
        })) + '</button>\n				</span>\n			</div>\n\n			<ul class="items"></ul>\n		</div>\n	</section>\n</div>\n';
    },
    useData: !0
}), this.pixiv.templates["ui-tag-item"] = Handlebars.template({
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '<li data-tag="' + h((e = null != (e = b.tag || (null != a ? a.tag : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "tag",
            hash: {},
            data: d
        }) : e)) + '" class="close">\n	<i class="_icon-14 _icon-tag"></i>\n	<span class="_icon-text">' + h((e = null != (e = b.tag || (null != a ? a.tag : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "tag",
            hash: {},
            data: d
        }) : e)) + "</span>\n</li>\n";
    },
    useData: !0
}), this.pixiv.templates["ui-tag"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e = this.lambda, f = this.escapeExpression;
        return '			<li data-tag="' + f(e(a, a)) + '" class="close">\n				<i class="_icon-14 _icon-tag"></i>\n				<span class="_icon-text">' + f(e(a, a)) + "</span>\n			</li>\n";
    },
    "3": function(a, b, c, d) {
        return " over";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = '<div class="ui-tag-container">\n	<ul class="tags">\n';
        return f = null != (f = b.tags || (null != a ? a.tags : a)) ? f : h, g = {
            name: "tags",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.tags || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (k += e), k + '	</ul>\n	<input type="text" value="" placeholder="' + j((b.t || a && a.t || h).call(a, "タグ", {
            name: "t",
            hash: {},
            data: d
        })) + '" maxlength="30">\n	<div class="options _count-container">\n		<span class="count' + (null != (e = (b.is || a && a.is || h).call(a, null != (e = null != a ? a.tags : a) ? e.length : e, ">", null != a ? a.max : a, {
            name: "is",
            hash: {},
            fn: this.program(3, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '">' + j(this.lambda(null != (e = null != a ? a.tags : a) ? e.length : e, a)) + "</span>/" + j((f = null != (f = b.max || (null != a ? a.max : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "max",
            hash: {},
            data: d
        }) : f)) + "\n	</div>\n</div>\n";
    },
    useData: !0
}), this.pixiv.templates["uploader-image-response-item"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e;
        return 'data-type="illust" data-id="' + this.escapeExpression(this.lambda(null != (e = null != a ? a.illust : a) ? e.illust_id : e, a)) + '"';
    },
    "3": function(a, b, c, d) {
        var e;
        return 'data-type="novel" data-id="' + this.escapeExpression(this.lambda(null != (e = null != a ? a.novel : a) ? e.id : e, a)) + '"';
    },
    "5": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '		<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((e = null != (e = b.illust_id || (null != a ? a.illust_id : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : e)) + '" target="_blank">\n			<img src="' + h((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" width="150" class="_ui-tooltip" data-tooltip="' + h((e = null != (e = b.illust_title || (null != a ? a.illust_title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "illust_title",
            hash: {},
            data: d
        }) : e)) + '">\n		</a>\n		<input type="hidden" name="response[]" value="' + h((e = null != (e = b.href || (null != a ? a.href : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "href",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    "7": function(a, b, c, d) {
        var e, f = b.helperMissing, g = "function", h = this.escapeExpression;
        return '		<a href="/novel/show.php?id=' + h((e = null != (e = b.id || (null != a ? a.id : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : e)) + '" target="_blank">\n			<img src="' + h((e = null != (e = b.url || (null != a ? a.url : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : e)) + '" width="150" class="_ui-tooltip" data-tooltip="' + h((e = null != (e = b.title || (null != a ? a.title : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : e)) + '">\n		</a>\n		<input type="hidden" name="response[]" value="' + h((e = null != (e = b.href || (null != a ? a.href : a)) ? e : f, 
        typeof e === g ? e.call(a, {
            name: "href",
            hash: {},
            data: d
        }) : e)) + '">\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = '<li class="image-response-item" ' + (null != (e = b["if"].call(a, null != a ? a.illust : a, {
            name: "if",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.program(3, d, 0),
            data: d
        })) ? e : "") + ">\n";
        return f = null != (f = b.illust || (null != a ? a.illust : a)) ? f : h, g = {
            name: "illust",
            hash: {},
            fn: this.program(5, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.illust || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.novel || (null != a ? a.novel : a)) ? f : h, g = {
            name: "novel",
            hash: {},
            fn: this.program(7, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.novel || (e = j.call(a, e, g)), null != e && (k += e), 
        k + '	<div class="remove action-remove-image-response">\n		<i class="_icon-12 _icon-close"></i>\n	</div>\n</li>\n';
    },
    useData: !0
}), this.pixiv.templates["uploader-image-response-preview-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<li class="image-response-preview-item">\n		<a href="/member_illust.php?mode=medium&amp;illust_id=' + i((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">\n			<div class="thumbnail" style="background-image:url(' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + ')"></div>\n			' + i((f = null != (f = b.illust_title || (null != a ? a.illust_title : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "illust_title",
            hash: {},
            data: d
        }) : f)) + '\n		</a>\n		<div class="options _action-button ' + (null != (e = b["if"].call(a, null != a ? a.exists : a, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + '" data-type="illust" data-id="' + i((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '">' + i((b.t || a && a.t || g).call(a, "追加", {
            name: "t",
            hash: {},
            data: d
        })) + "</div>\n	</li>\n";
    },
    "2": function(a, b, c, d) {
        return "_disabled";
    },
    "4": function(a, b, c, d) {
        return "action-add-image-response";
    },
    "6": function(a, b, c, d) {
        var e, f, g = b.helperMissing, h = "function", i = this.escapeExpression;
        return '	<li class="image-response-preview-item">\n		<a href="/novel/show.php?id=' + i((f = null != (f = b.id || (null != a ? a.id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">\n			<div class="thumbnail" style="background-image:url(' + i((f = null != (f = b.url || (null != a ? a.url : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "url",
            hash: {},
            data: d
        }) : f)) + ')"></div>\n			' + i((f = null != (f = b.title || (null != a ? a.title : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "title",
            hash: {},
            data: d
        }) : f)) + '\n		</a>\n		<div class="options _action-button  ' + (null != (e = b["if"].call(a, null != a ? a.exists : a, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.program(4, d, 0),
            data: d
        })) ? e : "") + '" data-type="novel" data-id="' + i((f = null != (f = b.id || (null != a ? a.id : a)) ? f : g, 
        typeof f === h ? f.call(a, {
            name: "id",
            hash: {},
            data: d
        }) : f)) + '">' + i((b.t || a && a.t || g).call(a, "追加", {
            name: "t",
            hash: {},
            data: d
        })) + "</div>\n	</li>\n";
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = b.blockHelperMissing, k = "";
        return f = null != (f = b.illust || (null != a ? a.illust : a)) ? f : h, g = {
            name: "illust",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.illust || (e = j.call(a, e, g)), null != e && (k += e), 
        f = null != (f = b.novel || (null != a ? a.novel : a)) ? f : h, g = {
            name: "novel",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.novel || (e = j.call(a, e, g)), null != e && (k += e), 
        k;
    },
    useData: !0
}), this.pixiv.templates["user-list-items"] = Handlebars.template({
    "1": function(a, b, c, d) {
        var e, f, g, h = b.helperMissing, i = "function", j = this.escapeExpression, k = b.blockHelperMissing, l = '	<li class="user-recommendation-item' + (null != (e = b["if"].call(a, (e = d && d.root) && e.relatedUser, {
            name: "if",
            hash: {},
            fn: this.program(2, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '" data-id="' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '">\n' + (null != (e = b["if"].call(a, (e = d && d.root) && e.relatedUser, {
            name: "if",
            hash: {},
            fn: this.program(4, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + '		<a href="/member.php?id=' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="user-icon-container ui-scroll-view" data-src="' + j((f = null != (f = b.profile_img || (null != a ? a.profile_img : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "profile_img",
            hash: {},
            data: d
        }) : f)) + '" data-filter="lazy-image"></a>\n		<h1><a href="/member.php?id=' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank" class="title">' + j((f = null != (f = b.user_name || (null != a ? a.user_name : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_name",
            hash: {},
            data: d
        }) : f)) + '</a></h1>\n		<dl class="meta inline-list">\n			<dt>' + j((b.t || a && a.t || h).call(a, "イラスト投稿数", {
            name: "t",
            hash: {},
            data: d
        })) + '</dt>\n			<dd><a href="/member_illust.php?id=' + j((f = null != (f = b.user_id || (null != a ? a.user_id : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "user_id",
            hash: {},
            data: d
        }) : f)) + '" target="_blank">' + j((f = null != (f = b.illust_count || (null != a ? a.illust_count : a)) ? f : h, 
        typeof f === i ? f.call(a, {
            name: "illust_count",
            hash: {},
            data: d
        }) : f)) + '</a></dd>\n		</dl>\n		<p class="caption">' + j((b.truncate || a && a.truncate || h).call(a, null != a ? a.user_comment : a, 36, {
            name: "truncate",
            hash: {},
            data: d
        })) + '</p>\n\n		<div class="_follow-button-container';
        return f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, g = {
            name: "is_follow",
            hash: {},
            fn: this.program(6, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = k.call(a, e, g)), 
        null != e && (l += e), l += '">\n			<button class="follow-button">\n				', f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.program(8, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = k.call(a, e, g)), 
        null != e && (l += e), l += "\n				", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.noop,
            inverse: this.program(10, d, 0),
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = k.call(a, e, g)), 
        null != e && (l += e), l += '\n			</button>\n			<span class="follow-more-button-container">\n				<button class="follow-more-button">\n					<i class="_icon sprites-more"></i>\n				</button>\n				<div class="options-wrapper">\n					<div class="options-container">\n						<section class="option">\n' + (null != (e = b["if"].call(a, (e = d && d.root) && e.premium, {
            name: "if",
            hash: {},
            fn: this.program(12, d, 0),
            inverse: this.program(14, d, 0),
            data: d
        })) ? e : "") + '							<div class="item">\n								<label><input type="checkbox" name="restrict" value="1">' + j((b.t || a && a.t || h).call(a, "公開しない", {
            name: "t",
            hash: {},
            data: d
        })) + "</label>\n							</div>\n", f = null != (f = b.is_follow || (null != a ? a.is_follow : a)) ? f : h, 
        g = {
            name: "is_follow",
            hash: {},
            fn: this.program(16, d, 0),
            inverse: this.noop,
            data: d
        }, e = typeof f === i ? f.call(a, g) : f, b.is_follow || (e = k.call(a, e, g)), 
        null != e && (l += e), l + "						</section>\n					</div>\n				</div>\n			</span>\n		</div>\n\n" + (null != (e = b["if"].call(a, null != a ? a.illusts : a, {
            name: "if",
            hash: {},
            fn: this.program(18, d, 0),
            inverse: this.noop,
            data: d
        })) ? e : "") + "	</li>\n";
    },
    "2": function(a, b, c, d) {
        return " child";
    },
    "4": function(a, b, c, d) {
        var e;
        return '			<div class="related-user">' + this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "$1さんの関連ユーザー", (e = d && d.root) && e.relatedUser, {
            name: "t",
            hash: {},
            data: d
        })) + "</div>\n";
    },
    "6": function(a, b, c, d) {
        return " following2";
    },
    "8": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォロー中", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "10": function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "フォローする", {
            name: "t",
            hash: {},
            data: d
        }));
    },
    "12": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '								<div class="item">\n									<select name="tag" disabled>\n										<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n										<option value="new">' + f((b.t || a && a.t || e).call(a, "新規フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + "</option>\n									</select>\n								</div>\n";
    },
    "14": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '		 						<a href="/premium.php?ref=uarea=user_recommend" target="_blank" class="item premium-feature">\n									<select name="tag" disabled>\n										<option value="">' + f((b.t || a && a.t || e).call(a, "フォルダー", {
            name: "t",
            hash: {},
            data: d
        })) + '</option>\n									</select>\n									<i class="_icon sprites-premium"></i>\n									<p class="_notes">' + f((b.t || a && a.t || e).call(a, "プレミアム会員になるとユーザーをフォルダーに分類できます", {
            name: "t",
            hash: {},
            data: d
        })) + "</p>\n								</a>\n";
    },
    "16": function(a, b, c, d) {
        var e = b.helperMissing, f = this.escapeExpression;
        return '								<div class="action">\n									<span class="_button2 unfollow-button">' + f((b.t || a && a.t || e).call(a, "フォロー解除", {
            name: "t",
            hash: {},
            data: d
        })) + '</span>\n									<span class="_button2 update-button">' + f((b.t || a && a.t || e).call(a, "更新", {
            name: "t",
            hash: {},
            data: d
        })) + "</span>\n								</div>\n";
    },
    "18": function(a, b, c, d) {
        var e, f, g, h = '			<ul class="images">\n';
        return f = null != (f = b.illusts || (null != a ? a.illusts : a)) ? f : b.helperMissing, 
        g = {
            name: "illusts",
            hash: {},
            fn: this.program(19, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.illusts || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h + "			</ul>\n";
    },
    "19": function(a, b, c, d) {
        var e, f, g = this.lambda, h = this.escapeExpression, i = b.helperMissing;
        return '					<li class="action-open-thumbnail" data-src="' + h(g(null != (e = null != a ? a.url : a) ? e["480mw"] : e, a)) + '">\n						<a href="/member_illust.php?mode=medium&amp;illust_id=' + h((f = null != (f = b.illust_id || (null != a ? a.illust_id : a)) ? f : i, 
        "function" == typeof f ? f.call(a, {
            name: "illust_id",
            hash: {},
            data: d
        }) : f)) + '&amp;uarea=user_recommend" target="_blank" class="ui-scroll-view ' + h((b.get_thumbnail_classes || a && a.get_thumbnail_classes || i).call(a, null != a ? a.illust_id : a, null != a ? a.illust_type : a, null != a ? a.illust_page_count : a, null != a ? a.illust_book_style : a, {
            name: "get_thumbnail_classes",
            hash: {},
            data: d
        })) + '" data-src="' + h(g(null != (e = null != a ? a.url : a) ? e["128x128"] : e, a)) + '" data-filter="lazy-image">\n							<span class="layout-effect"></span>\n						</a>\n					</li>\n';
    },
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        var e, f, g, h = "";
        return f = null != (f = b.items || (null != a ? a.items : a)) ? f : b.helperMissing, 
        g = {
            name: "items",
            hash: {},
            fn: this.program(1, d, 0),
            inverse: this.noop,
            data: d
        }, e = "function" == typeof f ? f.call(a, g) : f, b.items || (e = b.blockHelperMissing.call(a, e, g)), 
        null != e && (h += e), h;
    },
    useData: !0
}), this.pixiv.templates["web-notification-notification"] = Handlebars.template({
    compiler: [ 6, ">= 2.0.0-beta.1" ],
    main: function(a, b, c, d) {
        return this.escapeExpression((b.t || a && a.t || b.helperMissing).call(a, "$1件の更新があります", null != a ? a.count : a, {
            name: "t",
            hash: {},
            data: d
        })) + "\n";
    },
    useData: !0
}), colon.ns("pixiv.libs", {
    "jquery-ui.min.js": "js/lib/jquery-ui/jquery-ui.min.js?dfe3ecf96456f8cafc12a7f48de6b8c8",
    "jquery-ui.min.css": "js/lib/jquery-ui/theme/jquery-ui.min.css?975db0c6fcedec2eebc3d45b66688aeb"
}), colon.config("ga", {}), function(a, b, c) {
    "use strict";
    function d(a) {
        c(aa.iframe("http://www.facebook.com/plugins/likebox.php", c(a).dataset())).appendTo(a);
    }
    function e() {
        var b = aa.context.twitterWidgetOptions;
        b && a.TWTR && c.getScript("//widgets.twimg.com/j/2/widget.js").done(function() {
            new TWTR.Widget(b).render().start();
        });
    }
    function f(b) {
        return a.open(b, "twitter", "width=550,height=450,personalbar=0,toolbar=0,scrollbars=1,resizable=1"), 
        !1;
    }
    function g(b) {
        return a.open(b, "mixi_check", "width=632,height=456,location=yes,resizable=yes,toolbar=no,menubar=no,scrollbars=no,status=no"), 
        !1;
    }
    function h() {
        c("form.ui-prevent-duplicate").submit(function() {
            c('input[type="submit"]', this).addClass("loading").val(c(this).attr("data-text-loading")).prop("disabled", !0);
        });
    }
    function i(a) {
        this.handler = a, this.config = colon.storage.config("auto-view"), this.enableContainer = c("#enable-auto-view"), 
        this.disableContainer = c("#disable-auto-view");
        var b = this.enabled();
        return this.update(b), b;
    }
    function j() {
        aa.toolbar.remove(this.disableContainer), this.enableContainer.remove(), delete aa.autoView;
    }
    function k(a) {
        return a ? (this.enable(), aa.toolbar.add(this.disableContainer), this.enableContainer.hide()) : (this.disable(), 
        aa.toolbar.remove(this.disableContainer), this.enableContainer.show()), !1;
    }
    function l() {
        this.config("enabled", 1), "function" === c.type(this.handler) && this.handler(!0);
    }
    function m() {
        this.config("enabled", null), "function" === c.type(this.handler) && this.handler(!1);
    }
    function n() {
        this.terminate();
    }
    function o() {
        var a = c(this).dataset(), b = 72, d = 16, e = {
            url: a.url,
            type: "3",
            count: "1",
            appKey: "",
            title: a.title + "#",
            pic: a.pic || c('meta[property="og:image"]').attr("content") || "",
            relateUid: "2230227495",
            language: a.language,
            rnd: new Date().valueOf()
        }, f = [];
        for (var g in e) e.hasOwnProperty(g) && f.push(g + "=" + encodeURIComponent(e[g] || ""));
        c('<iframe allowTransparency="true" frameborder="0" scrolling="no" style="vertical-align:middle"src="http://hits.sinajs.cn/A1/weiboshare.html?' + f.join("&") + '" width="' + b + '" height="' + d + '"></iframe>').appendTo(this);
    }
    function q() {
        var a = c(this).dataset(), b = {
            url: a.url,
            desc: "",
            summary: "",
            title: a.title,
            site: "",
            pics: a.pic || c('meta[property="og:image"]').attr("content") || ""
        }, d = [];
        for (var e in b) b.hasOwnProperty(e) && d.push(e + "=" + encodeURIComponent(b[e] || ""));
        c(this).html('<a href="http://sns.qzone.qq.com/cgi-bin/qzshare/cgi_qzshare_onekey?' + d.join("&") + '" target="_blank" title="分享到QQ空间"><img src="http://qzonestyle.gtimg.cn/qzone_v6/proj_connect_open/img/qzone_share_txt_s.png" alt="分享到QQ空间" border="0"></a>');
    }
    function r(a) {
        var b = c(a.target), d = b.dataset(), e = d.shareButtonId || 0, f = this.container[e] = this.container[e] || this.template.tmpl(d).appendTo("body"), g = b.offset();
        return colon.ui.modal.toggle(b, f.css({
            top: g.top + b.outerHeight() + 7,
            left: g.left + b.outerWidth() / 2 - f.outerWidth() / 2
        })), e || (c.getScript("http://b.st-hatena.com/js/bookmark_button.js"), c.getScript(aa.sourcePath + "js/stacc/modal.js")), 
        !1;
    }
    function s(a) {
        return a = aa.ui.Tag.trim(a), a ? a.split(ia) : [];
    }
    function t(a, b) {
        a = aa.ui.Tag.trim(a).toLowerCase();
        for (var c = 0, d = b.length; d > c; ++c) if (a === b[c].toLowerCase()) return c;
        return -1;
    }
    function u(a, b, c) {
        a = aa.ui.Tag.trim(a).toLowerCase();
        var d, e = ja.exec(a), f = [];
        e && (a = e[1]);
        for (var g = 0, h = b.length; h > g; ++g) d = aa.ui.Tag.trim(b[g]).toLowerCase(), 
        (e && d === a || -1 !== d.indexOf(a)) && (d = c ? c(d) : d, d && f.push(d));
        return f.length ? f : null;
    }
    function v(a) {
        return a.replace(ja, "$1");
    }
    function w(a) {
        return a ? a.toString().replace(ka, "").replace(la, "") : "";
    }
    function x(a, b) {
        this.target = c(a), this.options = c.extend({
            maxCount: 10
        }, b), this.make();
    }
    function y() {
        return this.tags.join(" ");
    }
    function z() {
        var a = this, b = this.target, d = aa.ui.Tag.split(b.val()), e = c.tmpl(this.template, {
            tags: d,
            maxCount: this.options.maxCount
        }).insertBefore(b);
        b.hide(), this.container = e.click(function() {
            a.input[0].focus();
        }).delegate("span.close", "click", c.proxy(this.remove, this)), this.tagsContainer = c("ul.tags", e), 
        this.countContainer = c("span.count", e), this.input = c("input", e).bind("keypress keyup blur", c.proxy(this.update, this)), 
        this.tags = d;
    }
    function A(a) {
        var b, d, e = this.input.val(), f = a.altKey || a.ctrlKey || a.shiftKey, g = "keypress" === a.type && 13 === a.which && !f;
        return /[\s　]$/.test(e) || g || "blur" === a.type ? (e = aa.ui.Tag.trim(e), e && (b = e.split(/[\s　]+/), 
        this.input.val(""), this.recentValue = "", this.add(b))) : "keyup" !== a.type || "" !== this.recentValue || 8 !== a.which || f ? this.recentValue = e : (d = c("span", this.tagsContainer).get(-1), 
        d && this.remove({
            target: d
        })), g ? !1 : void 0;
    }
    function B() {
        var a = this.countContainer;
        if (a.length) {
            var b = this.tags.length;
            a.text(b), b > this.options.maxCount ? a.addClass("over") : a.removeClass("over");
        }
    }
    function C(a) {
        var b = !1;
        if (!a) return b;
        "string" === c.type(a) && (a = [ a ]);
        for (var d = 0, e = a.length; e > d; ++d) {
            var f = aa.ui.Tag.trim(a[d]);
            if (f) {
                var g = aa.ui.Tag.find(f, this.tags);
                -1 === g && (c.tmpl(this.itemTemplate, {
                    tag: f
                }).appendTo(this.tagsContainer), this.tags.push(f), b = !0);
            }
        }
        return b && (this.target.val(this.value()).trigger("uiTagUpdate"), this.updateCount()), 
        b;
    }
    function D(a) {
        var b = !1, d = c(a.target).parent(), e = d.attr("data-tag"), f = aa.ui.Tag.find(e, this.tags);
        return -1 !== f && (d.remove(), this.tags.splice(f, 1), this.target.val(this.value()).trigger("uiTagUpdate"), 
        this.updateCount(), b = !0), "undefined" != typeof a.stopPropagation && a.stopPropagation(), 
        b;
    }
    function E() {
        this.input = c("#input_tag"), this.input.length && (this.errorContainer = c("#bookmark_add_alert"), 
        this.countContainer = c("#bookmark_tag_count"), this.tagContainer = c(".bookmark_recommend_tag, .bookmark-recommend-tag"), 
        this.update());
    }
    function F(a) {
        return a = c.trim(a), a ? a.split(/\s+/) : [];
    }
    function G(a, b) {
        a = c.trim(a).toLowerCase();
        for (var d = 0, e = b.length; e > d; ++d) if (a === b[d].toLowerCase()) return d;
        return -1;
    }
    function H(a) {
        var b = this.parse(this.input.val()), c = this.inArray(a, b);
        -1 === c ? b.push(a) : b.splice(c, 1), this.input.val(b.join(" ")), this.update();
    }
    function I() {
        this.verify(), this.match();
    }
    function J() {
        var a = this, b = this.parse(this.input.val());
        c(".tag", this.tags).each(function() {
            var d = c(this);
            -1 !== a.inArray(d.attr("data-tag"), b) ? (d.addClass("on selected"), "checkbox" === d.attr("type") && d.attr("checked", !0)) : (d.removeClass("on selected"), 
            "checkbox" === d.attr("type") && d.attr("checked", !1));
        });
    }
    function K() {
        this.optionContainer = c("section#search-option"), this.sizeSelector("#size-selector"), 
        this.ratioSelector("#ratio-selector"), this.toolSelector("#tool-selector"), this.orderSelector("#order-date-selector", "date"), 
        this.orderSelector("#order-popular_d-selector", "popular_d"), c("form", this.optionContainer).submit(c.proxy(this.submit, this));
    }
    function L(a) {
        if (!a) return {
            wlt: null,
            wgt: null,
            hlt: null,
            hgt: null
        };
        var b = a.split("-"), c = b[0] || null, d = b[1] || null;
        return {
            wlt: c,
            wgt: d,
            hlt: c,
            hgt: d
        };
    }
    function M(a) {
        if (!a && 0 !== a) return {
            scd: null,
            ecd: null
        };
        var b = aa.formatNumber, c = new Date(), d = new Date(c - 864e5 * Math.max(a, 0)), e = [ b(d.getFullYear()), b(d.getMonth() + 1), b(d.getDate()) ].join("-");
        return {
            scd: e,
            ecd: null
        };
    }
    function N(a, b) {
        var d = this;
        c(a).change(function() {
            var a = this.value;
            "__other__" !== a && (p.updateQuery(c.extend(d.parseDateOption(a), {
                order: b,
                p: null
            })), c("#order-" + b + "-selector-current").text(this[this.selectedIndex].text));
        }).unbind("mouseenter");
    }
    function O(a) {
        var b = this;
        c(a).change(function() {
            var a = this.value;
            "__other__" !== a && (p.updateQuery(c.extend(b.parseDateOption(a), {
                p: null
            })), c("#date-selector-current").text(this[this.selectedIndex].text));
        }).unbind("mouseenter");
    }
    function P(a) {
        var b = this;
        c(a).change(function() {
            var a = this.value;
            "__other__" !== a && (p.updateQuery(c.extend(b.parseSizeOption(a), {
                p: null
            })), c("#size-selector-current").text(this[this.selectedIndex].text));
        });
    }
    function Q(a) {
        c(a).change(function() {
            var a = this.value;
            "__other__" !== a && (p.updateQuery({
                ratio: a || "0" === a ? a : null,
                p: null
            }), c("#ratio-selector-current").text(this[this.selectedIndex].text));
        });
    }
    function R(a) {
        var b = this, d = c(a);
        if (d.length) {
            var e = d[0].options.selectedIndex, f = aa.context.tools, g = {
                "2d": 10,
                "3d": 5,
                analog: 5
            }, h = [];
            for (var i in g) h = h.concat(f[i].slice(0, g[i]));
            c(p.template.apply("tool-select", {
                options: h,
                current: aa.context.queries.tool
            })).appendTo(d), d.change(function() {
                var a = this.value;
                return "__other__" === a ? (this.options.selectedIndex = e, void b.openOption()) : void p.updateQuery({
                    tool: a || null,
                    p: null
                });
            });
        }
    }
    function S() {
        var b, d, e, f, g = this.optionContainer, h = aa.context.tools, i = aa.context.queries.tool, j = [];
        if (!ma) {
            for (e in h) {
                for (d = h[e], j.push("<div>" + aa.text[e] + "</div><ul>"), f = 0; b = d[f]; ++f) b = colon.html.escape(b), 
                j.push('<li><label><input type="radio" name="tool" value="' + b + '"' + (b === i ? " checked" : "") + ">" + b + "</label></li>");
                j.push("</ul>");
            }
            c(".tools", g).append(j.join("")).find('input[type="radio"]').change(function() {
                c('input[name="' + ("tool" === this.name ? "toolcat" : "tool") + '"]:checked').prop("checked", !1);
            }), ma = !0;
        }
        a.setTimeout(function() {
            aa.ui.modal.open(g, {
                block: !0
            });
        }, 0);
    }
    function T() {
        var a = this.optionContainer, b = c.extend({
            s_mode: c('input[name="s_mode"]:checked', a).val(),
            word: "",
            tag: null,
            r18: Number((c('input[name="r18"]', a)[0] || {}).checked) || null,
            scd: null,
            ecd: null,
            wlt: null,
            wgt: null,
            hlt: null,
            hgt: null,
            ratio: c('input[name="ratio"]:checked', a).val() || null,
            tool: c('input[name="tool"]:checked', a).val() || null,
            toolcat: c('input[name="toolcat"]:checked', a).val() || null,
            p: null
        }, this.parseDateOption(c('input[name="date"]:checked', a).val()), this.parseSizeOption(c('input[name="size"]:checked', a).val())), d = aa.ui.Tag.trim(c("#word-and").val()), e = aa.ui.Tag.trim(c("#word-or").val()), f = aa.ui.Tag.trim(c("#word-not").val());
        return e && (e = "(" + aa.ui.Tag.split(e).join(" OR ") + ")"), f && (f = "-" + aa.ui.Tag.split(f).join(" -")), 
        b.word = c.trim([ d, e, f ].join(" ")), p.updateQuery("/search.php", b), !1;
    }
    function U(a, b) {
        c("#" + a)["slide" + (b ? "Down" : "Up")]("fast");
    }
    function V() {
        var a, b, d, e;
        a = c(".popular-introduction"), a.length && (d = c(".image-item"), d.length && (b = c(".user-ad-container"), 
        e = function() {
            var b = 5, c = d.height("").eq(Math.min(b, d.length - 1)), e = "100%";
            a.css({
                width: e,
                top: c.position().top + c.outerHeight(!0) + 10
            }), c.height(c.outerHeight(!0) + a.outerHeight());
        }, colon.w.on("resize.popularIntroduction", colon.throttle(e)), e()));
    }
    function W(a) {
        var b = c(a).dataset("infoid");
        return b ? void aa.api.post("/rpc_info_setting.php", {
            mode: "mark_as_read",
            id: b
        }, {
            ajaxSettings: {
                dataType: "text"
            }
        }) : !1;
    }
    function X(a) {
        this.remove(a), c(a).parent().parent().parent().slideUp("fast");
    }
    function Y(a, b) {
        a = aa.ui.Tag.trim(a).toLowerCase();
        for (var c = 0, d = b.length; d > c; ++c) {
            var e = b[c].split("-"), f = e[1];
            if (a === f.toLowerCase()) return c;
        }
        return -1;
    }
    function Z(a) {
        for (var b = [], c = 0, d = 0, e = a.length; e > d; ++d) {
            var f = a[d].split("-"), g = f[0];
            g > this.date - 100 && (b[c] = a[d], c++);
        }
        return b.join(";");
    }
    function $() {
        var a = c("._search-tutorial-modal");
        return colon.storage.localStorage("hideSearchTutorialModal") ? !1 : void a.show();
    }
    function _() {
        var a = c("._search-tutorial-modal");
        colon.storage.localStorage("hideSearchTutorialModal", new Date(), {
            cache: 31536e6
        }), a.hide();
    }
    var aa = a.pixiv = c.extend(!0, a.pixiv, {
        platform: null,
        user: {},
        context: {},
        text: {},
        templates: {},
        config: {
            pTlAPIKey: "18c61f5d457c2c15d866a8bf4f5a414b1d277b93"
        }
    });
    aa.secure = "https:" === a.location.protocol, aa.domain = (/[\-a-z]+\.[a-z]+$/.exec(a.location.hostname) || [])[0], 
    aa.context.type || (aa.context.type = "illust"), c.fn.selectbox = function(a) {
        return a = a || {}, this.each(function() {
            var b = c(this), d = a.current || c("div.current", this), e = a.item_container || c("ul.items", this), f = c("li", e), g = a.default_item || f.filter(".current"), h = a.callback, i = !1;
            b.hover(function() {
                i || (f.each(function() {
                    var a = c(this).click(function(c) {
                        return a.hasClass("current") ? !1 : (g.removeClass("current"), g = a.addClass("current"), 
                        d.text(g.text()), b.mouseleave(), h ? h.call(this, c) : void 0);
                    });
                }), i = !0), e.show();
            }, function() {
                e.hide();
            });
        });
    }, c.fn.boxHeight2 = function() {
        var a = 0;
        return this.each(function() {
            var b = c(this);
            a = Math.max(b.height(), a);
        }).height(a);
    }, c.fn.boxHeight = function() {
        var a = [], b = 0, d = 0;
        return this.each(function() {
            var e = c(this);
            e.position().top !== b && (a.length > 1 && c(a).height(d), a = [], d = 0, b = e.position().top), 
            a.push(this), d = Math.max(e.height(), d);
        }), a.length > 1 && c(a).height(d), this;
    }, c.fn.reverse = function() {
        return c(this.get().reverse());
    }, colon.ns("pixiv.pageModule"), aa.page = function(a) {
        var b, d, e, f, g, h = colon.dispatcher;
        for (b in a) {
            for (d = a[b], e = !!d, e || b === aa.context.page && (d = [ /.*/ ]), "array" !== c.type(d) && (d = [ d ]), 
            f = 0; g = d[f]; ++f) g && h.connect(g, aa.page[b]);
            e || h.and();
        }
        h.dispatch();
    };
    var ba = {};
    c.extend(aa, {
        setup: function() {
            c(aa.setupReady), a.onload = aa.setupLoad, a.onunload = aa.setupUnload, aa.context.queries = colon.query.base, 
            colon.query.replace({
                ref: null,
                uarea: null
            }, !0);
        },
        setupBeforeReady: function() {},
        setupReady: function() {
            colon.config({
                text: aa.text,
                templates: aa.templates
            }), aa.body = c("body"), aa.Document && new aa.Document();
            var a = c(".search-container");
            c(".ui-search, .search-form").each(function() {
                var b = c(this), d = c(".text", this), e = c(".clear", this);
                d.focus(function() {
                    a.addClass("focused");
                }).blur(function() {
                    a.removeClass("focused");
                }).keyup(function() {
                    d.val() ? b.addClass("has-text") : b.removeClass("has-text");
                }).keyup(), e.click(function() {
                    d.val("").keyup()[0].focus();
                });
            }), c(".selectbox").selectbox(), c(".ui-selectbox-container").each(function() {
                new aa.ui.Selectbox(this, {
                    sensitive: !0
                });
            }), aa.screen.setup(), aa.dialog.setup(), aa.context.userId && (new aa.Favorite().initialize(), 
            new aa.MyPixiv().initialize()), aa.Popup.setup(), aa.ui.setup(), aa.AutoView.setup(), 
            aa.suggest.setup(), aa.Notification.setup(), aa.toolbar.setup(), aa.thumbnailFilter.setup(), 
            colon.ga.setup(), aa.tracker.setup(), aa.EventTracker.setup(), aa.user.premium || colon.d.on("click", "a.require-premium", function() {
                var a = c(this), b = a.dataset(), d = a.attr("href"), e = aa.ui.modal.open("#premium-introduction-modal", {
                    block: !0
                });
                return b.width ? c(".introduction-modal", e).css("width", b.width) : c(".introduction-modal", e).css("width", "332px"), 
                c(".title", e).html(aa.text[b.title]), c(".caption", e).html(aa.text[b.caption]), 
                c(".button-container", e).each(function() {
                    "A" === this.tagName && c(this).attr("href", d);
                }), !1;
            }), aa.page({
                userRecommendation: null,
                userSearch: null,
                work: [ "/member_illust.php", "/novel/show.php" ],
                bookmark: "/bookmark.php",
                bookmark_detail: "/bookmark_detail.php",
                "*/bookmark_add": {
                    pathname: /\/bookmark_add\.php$/,
                    search: /.+/
                },
                search: /^(?:\/novel)?\/(?:tags(?:_r18)?|search)\.php$/,
                setting_user: "/setting_user.php",
                event_member: "/event_member.php",
                ranking: [ "/ranking.php", "/novel/ranking.php", {
                    pathname: "/ranking_area.php",
                    search: /(?:^|\?|&)type=detail(?:&|$)/
                } ],
                ranking_log: "/ranking_log.php",
                event: "/event.php",
                "novel/preview": "/novel/preview.php",
                "group/create": "/group/create.php",
                group: /^\/group\/.*/,
                notify_all: "/notify_all.php",
                content_upload: [ "/content_upload.php", "/manga_upload.php", "/member_illust_mod.php" ],
                novel_upload: "/novel/upload.php",
                setting_access_block: "/setting_access_block.php",
                authentication_request: "/authentication_request.php",
                welcome: "/welcome.php"
            }), aa.scrollView.setup();
            try {
                var d = function(a) {
                    aa.scrollView.add(".ui-scroll-view", a.target);
                };
                b.body.addEventListener("AutoPagerize_DOMNodeInserted", d, !1), b.body.addEventListener("AutoPatchWork.DOMNodeInserted", d, !1), 
                b.body.addEventListener("AutoPagerAfterInsert", d, !1);
            } catch (e) {}
        },
        setupLoad: function() {
            aa.ui.shareButton.setup();
            var a = aa.widget, b = colon.dispatcher.connect(/^\/user_event(?:_.+)?\.php$/, a.twitterWidget);
            b.dispatch();
        },
        setupUnload: function() {
            colon.storage.cleanup();
        },
        updateQuery: function(b, d, e) {
            "string" !== c.type(b) && (e = d, d = b, b = location.pathname);
            var f = p.queryString(c.extend(p.parseQuery(), d)), g = b + (f ? "?" + f : ""), h = location.pathname + location.search;
            h !== g && (location.hash && (g += location.hash), e ? a.history.replaceState && a.history.replaceState(null, "", g) : location.href = g);
        },
        getTemplate: function(a) {
            var b, d = c("#template-" + a);
            return d.length ? (b = c.trim(d.html()), "raw" !== d.dataset("format") && (b = b.replace(/[\r\n]/g, "")), 
            b) : null;
        },
        createTemplate: function(a, b) {
            var c, d = aa.getTemplate(a);
            if (d) return ba[a] && void 0 === b ? c = ba[a] : (c = Handlebars.compile(d), b && (ba[a] = c)), 
            c;
        },
        shuffle: function(a) {
            for (var b = a.length; --b; ) {
                var c = Math.floor(Math.random() * (b + 1));
                if (b !== c) {
                    var d = a[b];
                    a[b] = a[c], a[c] = d;
                }
            }
            return a;
        },
        camelize: function(a, b) {
            return a = a.replace(/-([a-z]|[0-9])/gi, function(a, b) {
                return b.toUpperCase();
            }), b ? a.charAt(0).toUpperCase() + a.slice(1) : a;
        },
        prefixFilter: function(a, b) {
            var c, d = {}, e = new RegExp("^(" + a + ")([A-Z].+)?$");
            for (var f in b) c = e.exec(f), c && c[1] === a && (c[2] ? d[c[2].charAt(0).toLowerCase() + c[2].slice(1)] = b[f] : d[c[1]] = b[f], 
            delete b[f]);
            return d;
        }
    }), aa.title = function(a) {
        a = "function" === c.type(a) ? a(b.title, aa.title.original) : a, a !== b.title && (b.title = null === a ? aa.title.original : a || "");
    }, aa.title.original = b.title, aa.iframe = function(a, b) {
        return b && (a += "?" + p.queryString(b, !0)), '<iframe src="' + a + '" marginwidth="0" marginheight="0" frameborder="0" allowtransparency="true" scrolling="no"></iframe>';
    }, aa.LoadingIndicator = function(a, b) {
        this.container = c(a), b && (this.type += "-" + b);
    }, aa.LoadingIndicator.prototype = {
        finished: !1,
        type: "loading-indicator",
        container: null,
        start: function() {
            return this.finished ? void 0 : (c("." + this.type, this.container).length || c('<div class="' + this.type + '"></div>').appendTo(this.container), 
            this.container.addClass("_loading"), this);
        },
        stop: function() {
            return this.container.removeClass("_loading"), this;
        },
        finish: function(a) {
            return this.stop(), c("." + this.type, this.container).remove(), this.finished = !0, 
            a && (a = null), this;
        }
    }, colon.ns("pixiv.get", {
        "jquery-ui": function() {
            var a;
            return c.ui ? colon.async() : (colon.get.css(aa.sourcePath + aa.libs["jquery-ui.min.css"]), 
            a = aa.sourcePath + aa.libs["jquery-ui.min.js"], colon.req.unite(colon.req.id(a), function() {
                return colon.get.script(a);
            }));
        }
    }), aa.widget = {
        facebookLikeBox: d,
        twitterWidget: e,
        openTwitter: f,
        openMixiCheck: g
    }, aa.userRecommend = {
        stash: null,
        offset: 0,
        indicator: null,
        thumbnailIndicator: null,
        debounceObject: null,
        canceled: !1,
        autoView: null,
        container: null,
        unitContainer: null,
        thumbnailContainer: null,
        thumbnailImage: null,
        setup: function(a, b) {
            return this.container = c(".user-recommendation-items"), this.unitContainer = c(a || ".user-recommendation-unit"), 
            this.thumbnailContainer = c(".thumbnail-popup"), this.indicator = new aa.LoadingIndicator(this.container), 
            this.thumbnailIndicator = new aa.LoadingIndicator(this.thumbnailContainer, "small"), 
            this.debounceObject = colon.debounce(this.openThumbnail, this, 200), colon.d.on({
                mouseenter: this.debounceObject,
                mouseleave: c.proxy(this.closeThumbnail, this)
            }, ".action-open-thumbnail").on("click", ".action-open-setting", c.proxy(aa.follow.setting.open, aa.follow.setting)).on("followed", ".action-open-setting", c.proxy(this.follow, this)).on("unfollowed", ".action-open-setting", this.unfollow), 
            this.autoView = new aa.AutoView(".more", {
                scrollContext: b ? this.unitContainer : null
            }), this.load();
        },
        load: function() {
            var a = this;
            return aa.api.userRecommendation(aa.context.userRecommendSampleUser, 100).always(function() {
                a.indicator.finish(a.indicator);
            }).pipe(function(a, b) {
                return a && !a.error && a.users && a.users.length ? c.Deferred().resolveWith(this, arguments) : c.Deferred().rejectWith(this, [ a, b, a && a.error ]);
            }).done(function(b) {
                a.stash = b.users, a.show(), c(".more", a.unitContainer).on("autoView", function() {
                    a.show();
                });
            }).fail(function(b, d, e) {
                var f = c("._no-item", a.unitContainer);
                e && f.text(e), f.removeClass("hidden");
            });
        },
        append: function(a, b) {
            aa.api.userRecommendation(b, 10).pipe(function(a, b) {
                return a && !a.error && a.users && a.users.length ? c.Deferred().resolveWith(this, arguments) : c.Deferred().rejectWith(this, [ a, b, a && a.error ]);
            }).done(function(b) {
                c(p.template.apply("user-recommendation-item", {
                    relatedUser: c(".title", a).text(),
                    items: b.users
                }, !0)).insertAfter(a), aa.scrollView.update();
            });
        },
        show: function() {
            var b = this.stash.splice(0, 20), d = b.length;
            d && (this.offset || c(".more", this.unitContainer).click(c.proxy(this.show, this)).removeClass("hidden"), 
            this.stash.length || c(".more", this.unitContainer).remove(), this.container.append(p.template.apply("user-recommendation-item", {
                items: b
            }, !0)), this.offset += d, aa.scrollView.update(), a.setTimeout(c.proxy(this.autoView.on, this.autoView)));
        },
        openThumbnail: function(a) {
            var b = this, d = c(a.currentTarget), e = d.offset(), f = d.data();
            return d.data("canceled", !1), f.width && f.height ? (this.showThumbnail(e), void this.showThumbnailImage(d, {
                opacity: 1,
                top: e.top + 128 + 12
            })) : (this.thumbnailIndicator.start(), this.showThumbnail(e).animate({
                opacity: 1,
                top: e.top + 128 + 12
            }, 200), void c("<img>").load(function() {
                d.data("canceled") || (b.thumbnailIndicator.stop(), d.data({
                    width: this.width,
                    height: this.height
                }), b.showThumbnailImage(d));
            }).attr("src", f.src));
        },
        showThumbnail: function(a) {
            var b = this.thumbnailContainer;
            return b.removeClass("hidden").stop(!0, !0).css({
                width: 32,
                height: 32
            }).css({
                opacity: 0,
                top: a.top + 128 + 2,
                left: a.left + 67 - b.outerWidth() / 2
            }), b;
        },
        showThumbnailImage: function(a, b) {
            var d = a.offset(), e = a.data(), f = Math.min(e.height, 480), g = Math.floor(e.width * f / e.height);
            b = c.extend({
                left: Math.floor(d.left + 67 - (g + 6) / 2),
                width: g,
                height: f
            }, b), this.thumbnailContainer.css({
                backgroundImage: "url(" + e.src + ")",
                backgroundSize: g + "px " + f + "px"
            }).stop(!0, !0).animate(b, 200);
        },
        closeThumbnail: function(a) {
            this.debounceObject.cancel(), c(a.currentTarget).data("canceled", !0), this.thumbnailContainer.addClass("hidden").stop(!0, !0), 
            this.thumbnailIndicator.stop();
        },
        follow: function(a) {
            var b = c(a.currentTarget), d = b.data("id");
            b.addClass("following").find("._icon").removeClass("sprites-follow").addClass("sprites-checked").end().find(".text").text(aa.text.following), 
            this.append(b.closest(".user-recommendation-item"), d);
        },
        unfollow: function() {
            var a = c(this);
            a.removeClass("following").find("._icon").removeClass("sprites-checked").addClass("sprites-follow").end().find(".text").text(aa.text.follow);
        }
    }, aa.userSearch = {
        stash: null,
        thumbnailIndicator: null,
        debounceObject: null,
        canceled: !1,
        autoView: null,
        container: null,
        unitContainer: null,
        thumbnailContainer: null,
        thumbnailImage: null,
        setup: function() {
            this.container = c(".user-recommendation-items"), this.unitContainer = c(".user-search-result-container"), 
            this.thumbnailContainer = c(".thumbnail-popup"), this.thumbnailIndicator = new aa.LoadingIndicator(this.thumbnailContainer, "small"), 
            this.debounceObject = colon.debounce(this.openThumbnail, this, 200), colon.d.on({
                mouseenter: this.debounceObject,
                mouseleave: c.proxy(this.closeThumbnail, this)
            }, ".action-open-thumbnail").on("click", ".action-open-setting", c.proxy(aa.follow.setting.open, aa.follow.setting)).on("followed", ".action-open-setting", c.proxy(this.follow, this)).on("unfollowed", ".action-open-setting", this.unfollow);
        },
        append: function(a, b) {
            aa.api.userRecommendation(b, 10).pipe(function(a, b) {
                return a && !a.error && a.users && a.users.length ? c.Deferred().resolveWith(this, arguments) : c.Deferred().rejectWith(this, [ a, b, a && a.error ]);
            }).done(function(b) {
                c(p.template.apply("user-recommendation-item", {
                    relatedUser: c(".title", a).text(),
                    items: b.users
                }, !0)).insertAfter(a), aa.scrollView.update();
            });
        },
        openThumbnail: function(a) {
            var b = this, d = c(a.currentTarget), e = d.offset(), f = d.data();
            return d.data("canceled", !1), f.width && f.height ? (this.showThumbnail(e), void this.showThumbnailImage(d, {
                opacity: 1,
                top: e.top + 128 + 12
            })) : (this.thumbnailIndicator.start(), this.showThumbnail(e).animate({
                opacity: 1,
                top: e.top + 128 + 12
            }, 200), void c("<img>").load(function() {
                d.data("canceled") || (b.thumbnailIndicator.stop(), d.data({
                    width: this.width,
                    height: this.height
                }), b.showThumbnailImage(d));
            }).attr("src", f.src));
        },
        showThumbnail: function(a) {
            var b = this.thumbnailContainer;
            return b.removeClass("hidden").stop(!0, !0).css({
                width: 32,
                height: 32
            }).css({
                opacity: 0,
                top: a.top + 128 + 2,
                left: a.left + 67 - b.outerWidth() / 2
            }), b;
        },
        showThumbnailImage: function(a, b) {
            var d = a.offset(), e = a.data(), f = Math.min(e.height, 480), g = Math.floor(e.width * f / e.height);
            b = c.extend({
                left: Math.floor(d.left + 67 - (g + 6) / 2),
                width: g,
                height: f
            }, b), this.thumbnailContainer.css({
                backgroundImage: "url(" + e.src + ")",
                backgroundSize: g + "px " + f + "px"
            }).stop(!0, !0).animate(b, 200);
        },
        closeThumbnail: function(a) {
            this.debounceObject.cancel(), c(a.currentTarget).data("canceled", !0), this.thumbnailContainer.addClass("hidden").stop(!0, !0), 
            this.thumbnailIndicator.stop();
        },
        follow: function(a) {
            var b = c(a.currentTarget), d = b.data("id");
            b.addClass("following").find("._icon").removeClass("sprites-follow").addClass("sprites-checked").end().find(".text").text(aa.text.following), 
            this.append(b.closest(".user-recommendation-item"), d);
        },
        unfollow: function() {
            var a = c(this);
            a.removeClass("following").find("._icon").removeClass("sprites-checked").addClass("sprites-follow").end().find(".text").text(aa.text.follow);
        }
    }, aa.illustRecommend = {
        filterName: "illust-recommend-load",
        options: {
            count: 12
        },
        recommendations: null,
        completed: !1,
        autoView: null,
        container: null,
        listContainer: null,
        statusContainer: null,
        loadingContainer: null,
        moreContainer: null,
        setup: function(a) {
            var b = this.container = c("#illust-recommend");
            if (b) {
                a && c.extend(this.options, a), this.listContainer = c("ul._image-items", b), this.statusContainer = c("._no-item", b), 
                this.loadingContainer = c(".loading-indicator", b);
                var d = c("#enable-auto-view"), e = c("#disable-auto-view");
                this.moreContainer = c("._button-lite-large", b).on("autoView", c.proxy(this.load, this)).on("autoViewOn", function() {
                    aa.toolbar.add(e), d.hide();
                }).on("autoViewOff", function() {
                    aa.toolbar.remove(e), d.slideDown();
                }), this.autoView = new aa.AutoView(this.moreContainer).apply();
            }
        },
        load: function() {
            var a = this, b = {
                cache: 864e5
            };
            this.loadingContainer.show(), this.autoView.pause(), (this.recommendations ? c.Deferred().resolve() : aa.api.get("/rpc/recommender.php", {
                type: "illust",
                sample_illusts: aa.context.illustRecommendSampleIllust,
                num_recommendations: aa.context.illustRecommendLimit
            }, b).then(function(b) {
                return b && b.error ? (a.showStatus(b.error), c.Deferred().reject()) : (a.recommendations = b ? b.recommendations : [], 
                a.recommendations.length ? void 0 : (a.showStatus(null), c.Deferred().reject()));
            }, function(b, c, d) {
                a.showStatus(c && d ? c + ": " + d : void 0);
            })).then(function() {
                var c = a.recommendations.splice(0, a.options.count);
                return c.length ? aa.api.get("/rpc/illust_list.php", {
                    illust_ids: c.join(),
                    verbosity: ""
                }, b) : void a.loadingContainer.hide();
            }).done(function(b) {
                return !b || b.error ? void (b && b.error && a.showStatus(b.error)) : (a.loadingContainer.hide(), 
                c(p.template.apply("illust-recommend-list-item", {
                    items: b
                })).appendTo(a.listContainer), aa.scrollView.update(), void (a.recommendations.length ? a.autoView.restart() : a.completed || (c(a.moreContainer).hide(), 
                a.autoView.complete(), a.completed = !0)));
            });
        },
        showStatus: function(a) {
            var b = null === a;
            this.statusContainer.text(a || this.statusContainer.dataset(b ? "textNoItem" : "textError")).show(), 
            b || this.statusContainer.addClass("_error"), this.loadingContainer.hide(), c(this.moreContainer).remove(), 
            aa.scrollView.unregisterFilter(this.filterName);
        }
    }, aa.illustRecommendOnMemberIllust = {
        options: {
            count: 12
        },
        recommendations: null,
        container: null,
        listContainer: null,
        setup: function(a) {
            var b = this.container = c("#illust-recommend");
            b && (a && c.extend(this.options, a), this.listContainer = c("ul._image-items", b), 
            this.load());
        },
        load: function() {
            var a = this, b = {
                cache: 864e5
            };
            (this.recommendations ? c.Deferred().resolve() : aa.api.get("/rpc/recommender.php", {
                type: "illust",
                sample_illusts: aa.context.illustRecommendSampleIllust,
                num_recommendations: aa.context.illustRecommendLimit
            }, b).then(function(b) {
                return b && b.error ? c.Deferred().reject() : (a.recommendations = b ? b.recommendations : [], 
                a.recommendations.length ? void 0 : c.Deferred().reject());
            })).then(function() {
                var c = a.recommendations.splice(0, a.options.count + 10);
                return c.length ? aa.api.get("/rpc/illust_list.php", {
                    illust_ids: c.join(),
                    verbosity: ""
                }, b) : void a.loadingContainer.hide();
            }).done(function(b) {
                if (b && !b.error) {
                    for (var d = b.length - 1; d > 0; d--) {
                        var e = Math.floor(Math.random() * (d + 1)), f = b[e];
                        b[e] = b[d], b[d] = f;
                    }
                    c(p.template.apply("illust-recommend-list-item", {
                        items: b.splice(0, a.options.count)
                    })).appendTo(a.listContainer), a.container.toggleClass("hide");
                }
            });
        }
    }, aa.rating = {
        rate: 0,
        width: 26,
        height: 26,
        offset: null,
        container: null,
        ratingContainer: null,
        statusContainer: null,
        setup: function() {
            var a = this;
            aa.context.rated || (this.container = c(".score"), this.ratingContainer = c(".rating", this.container).mousemove(function(b) {
                a.update(b.pageX, b.pageY);
            }).mouseleave(c.proxy(this.clear, this)), aa.user.loggedIn && this.ratingContainer.click(function() {
                a.apply();
            }), this.statusContainer = c(".status", this.container));
        },
        update: function(a, b) {
            var c = this.ratingContainer, d = this.width, e = this.offset || (this.offset = c.offset()), f = b - e.top + 1, g = Math.max(a - Math.ceil(e.left), 0) + 1, h = Math.ceil(g / d);
            if (aa.user.bitter) switch (g -= d * (h - 1), h) {
              case 1:
                h = this.slim(h, g, f, .45, .55);
                break;

              case 2:
                h = this.slim(h, g, f, .4, .6);
            }
            h !== this.rate && (c.removeClass("rate-" + this.rate).addClass("rate-" + h), this.rate = h);
        },
        clear: function() {
            this.ratingContainer.removeClass("rate-" + this.rate), this.rate = 0, this.offset = null;
        },
        slim: function(a, b, d, e, f, g, h) {
            "number" === c.type(g) || (g = e), "number" === c.type(h) || (h = f);
            var i = this.width, j = this.height;
            return i * e > b || b > i * f || j * g > d || d > j * h ? 0 : a;
        },
        apply: function(a) {
            var b, d, e, f;
            this.rate = a = a || this.rate, aa.context.rated || !a || a > 10 || (aa.api.rating(a), 
            b = this.container, d = c(".rated-count", b), e = c(".score-count", b), d.text(+d.text() + 1), 
            e.text(+e.text() + a), f = this.width, this.statusContainer.text("+" + a).css("left", f * a - f / 2).animate({
                marginTop: -20,
                opacity: 0
            }, "slow", function() {
                c(this).remove();
            }), this.ratingContainer.addClass("rated rate-" + a).unbind(), aa.context.rated = !0);
        }
    }, colon.ns("pixiv.ui", {
        updateProcesses: [ "fixed" ],
        setup: function() {
            aa.ui.tab.setup(), aa.ui.fixed.setup(), aa.ui.truncate.setup(), aa.ui.scroll.setup(), 
            aa.ui.focusSelect.setup(), aa.ui.selector.setup(), colon.ui.expander.setup(), colon.ui.Counter.setup(), 
            colon.ui.Tag.setup(), colon.ui.toggleSwitch.setup(), colon.ua.ie && c(".ui-autofocus:last").focus();
        },
        loadContextShareButton: function(a, b) {
            c("#template-ui-context-share-button").tmpl(b).appendTo(this).filter(".twitter-share-button").each(aa.ui.shareButton.twitter).end().filter(".share-button-facebook").each(aa.ui.shareButton.facebook);
        },
        update: function(a) {
            for (var b, c = this.updateProcesses, d = 0; b = c[d]; ++d) this[b](a);
        }
    }), aa.ui.focusSelect = function(b) {
        a.setTimeout(function() {
            b.select();
        }, 0);
    }, aa.ui.focusSelect.setup = function() {
        colon.d.on("focusin", ".ui-select-all", function(a) {
            aa.ui.focusSelect(a.target);
        });
    }, colon.ns("pixiv.ui.truncate", {
        setup: function() {
            this.update();
        },
        update: function() {
            c(".ui-truncate").each(function() {
                var a = c(this), b = a.dataset();
                a.text(colon.truncate(a.text(), b.maxlength || 140));
            });
        }
    }), colon.ns("pixiv.ui.tab", {
        setup: function() {
            colon.d.on("click", ".ui-tab", c.proxy(this.open, this)).on("click", ".ui-tab-prev", c.proxy(this.prev, this)).on("click", ".ui-tab-next", c.proxy(this.next, this)), 
            this.update();
        },
        update: function() {
            var a = this;
            c(".ui-tab-container.root").each(function() {
                a.restore(this);
            });
        },
        open: function(a) {
            var b = c(a.currentTarget), d = b.siblings().addBack(), e = b.hasClass("_current"), f = b.closest(".ui-tab-container"), g = f.find("> .ui-tab-content"), h = b.dataset("target"), i = g.filter("." + h);
            return d.removeClass("_current"), g.hide().addClass("_hidden"), e && "yes" === b.dataset("toggle") || (b.addClass("_current"), 
            i.show().removeClass("_hidden"), f.trigger("uiTabUpdate", [ b, d ])), colon.lazyImage(i.filter("._lazy-image-container")), 
            f.data("saveState") && colon.storage.localStorage(this.ns + "." + colon.storage.id(f.data("name")), h, 2592e6), 
            this.restore(i.find("> .ui-tab-container")), !1;
        },
        prev: function(a) {
            var b = c(a.currentTarget).closest(".ui-tab-container"), d = c("> .ui-tabs .ui-tab", b), e = d.filter("._current").prev();
            return e.length ? e.click() : b.trigger("uiTabUpdate", [ e, d ]), !1;
        },
        next: function(a) {
            var b = c(a.currentTarget).closest(".ui-tab-container"), d = c("> .ui-tabs .ui-tab", b), e = d.filter("._current").next();
            return e.length ? e.click() : b.trigger("uiTabUpdate", [ e, d ]), !1;
        },
        restore: function(a) {
            if (a = c(a), a.length) {
                var b, d, e = a.data(), f = e.name, g = c("> .ui-tabs .ui-tab", a);
                e.saveState && f && (b = colon.storage.localStorage(this.ns + "." + colon.storage.id(f))) && (d = g.filter('[data-target="' + b + '"]')).length ? d.click() : g.filter(".default").click();
            }
        }
    }), aa.ui.fixed = {
        target: null,
        setup: function() {
            colon.w.on("scroll.uifixed", c.proxy(this.check, this)).on("resize.uifixed", c.proxy(this.resize, this)), 
            this.update();
        },
        update: function(a) {
            this.target = c(".ui-fixed", a), this.check();
        },
        check: function() {
            if (this.target.length) {
                var b = this, d = colon.w.scrollTop(), e = 0;
                this.target.each(function() {
                    var f, g, h = c(this), i = h.data("status") || "off", j = h.data("position"), k = h.parent(), l = k.parent(), m = k.outerHeight(!0), n = l.offset().top + l.innerHeight() + parseInt(l.css("border-top-width"), 10);
                    j || (j = h.data("position", h.offset().top), c(a).width() >= 640 && k.height(m)), 
                    d + e >= j ? (g = d + e + m, g > n ? (f = n - g, -1 * f > m ? b.off(h) : "on:edge" === i ? h.css("top", f) : b.on(h, f, "on:edge"), 
                    m += f) : "on" !== i && b.on(h, e)) : "off" !== i && b.off(h), e += m;
                });
            }
        },
        resize: function() {
            var a = this;
            this.target.each(function() {
                a.position(this);
            });
        },
        position: function(a) {
            a = c(a);
            var b = a.parent();
            "off" !== a.data("status") && a.css({
                left: b.offset().left,
                width: b.width()
            });
        },
        setHeight: function(a) {
            a = c(a);
            var b = a.outerHeight(!0);
            a.parent().height(b);
        },
        on: function(a, b, c) {
            a.data("status", c || "on").addClass("ui-fixed-on").removeClass("ui-fixed-paused").css("top", b), 
            this.position(a);
        },
        pause: function(a) {
            a.data("status", "paused").addClass("ui-fixed-paused");
        },
        off: function(a) {
            a.data("status", "off").removeClass("ui-fixed-on ui-fixed-paused").css({
                top: "",
                left: "",
                width: ""
            });
        }
    }, aa.ui.selector = {
        container: null,
        actions: {},
        setup: function() {
            var a = ".ui-selector";
            this.container = c(a), c("select", this.container).on("change.uiSelector", c.proxy(this.change, this));
        },
        change: function(b) {
            var d = c(b.target.options[b.target.selectedIndex]), e = d.dataset();
            return c(".current", this.container).text(d.text()), e.url ? void (a.location.href = e.url) : void (e.action && this.actions[e.action] && this.actions[e.action](d, e));
        },
        register: function(a, b) {
            this.actions[a] = b;
        },
        unregister: function(a) {
            delete this.actions[a];
        }
    }, c.fn.counter = function() {
        return this.each(function() {
            new aa.ui.Counter(this);
        });
    }, aa.ui.Counter = function(a, b) {
        b ? (this.target = c(a), this.counter = c(b)) : (this.container = c(a), this.target = c("input, textarea", a).eq(0), 
        this.counter = c(".current-count", a)), this.data = c.extend({
            limit: 140
        }, this.target.dataset()), this.target.on("keyup blur", c.proxy(this.update, this)).keyup();
    }, aa.ui.Counter.prototype = {
        container: null,
        target: null,
        counter: null,
        data: null,
        over: !1,
        update: function() {
            var a = this.target.val().length;
            this.counter.text(a), !this.over && a > this.data.limit && (this.over = !0, this.container && this.container.trigger("uiCounterOK", a), 
            this.ng()), this.over && a <= this.data.limit && (this.over = !1, this.container && this.container.trigger("uiCounterNG", a), 
            this.ok());
        },
        ok: function() {
            this.counter.removeClass("over");
        },
        ng: function() {
            this.counter.addClass("over");
        }
    }, aa.ui.form = {
        setup: h
    };
    var ca = /\s+/;
    aa.scrollView = {
        targets: null,
        doneTargets: null,
        filters: {},
        selector: ".ui-scroll-view",
        setup: function() {
            this.update();
        },
        add: function(b, d) {
            if (b = c(b, d), !b.length) return this;
            var e = this.targets, f = !!e;
            return this.targets = (f ? e.add(b) : b).not(this.doneTargets), f || this.watch(), 
            a.setTimeout(c.proxy(this.process, this)), this;
        },
        remove: function(a, b) {
            return a = c(a, b), a.length && this.targets ? (this.targets = this.targets.not(a), 
            this.targets.length || this.clear(), this) : this;
        },
        done: function(a, b) {
            return a = c(a, b), this.remove(a), this.doneTargets = this.doneTargets ? this.doneTargets.add(a) : a, 
            this;
        },
        clear: function() {
            this.unwatch(), this.targets = null;
        },
        reset: function(a) {
            return a || (a = this.selector), this.doneTargets && (this.doneTargets = this.doneTargets.not(a)), 
            this.add(a);
        },
        update: function(a) {
            this.add(a || this.selector);
        },
        watch: function(a) {
            a ? c(a).on("scroll.scroll-view", colon.throttle(this.process, this)) : colon.w.on("scroll.scroll-view resize.scroll-view", colon.throttle(this.process, this));
        },
        unwatch: function(a) {
            a ? c(a).off(".scroll-view") : colon.w.on(".scroll-view");
        },
        process: function() {
            var a = this.targets;
            if (a) {
                for (var b, c, d, e, f, g, h, i = colon.w, j = i.scrollLeft(), k = j + i.width(), l = i.scrollTop(), m = l + i.height(), n = [], o = this.filters, p = 0, q = a.length; q > p; ++p) if (b = a.eq(p), 
                h = b.data(), h && (c = h.filter, c && (g = b.offset(), g.left >= j && g.left < k && g.top >= l - 200 && g.top < m + 500))) {
                    for (d = c.split(ca), f = 0; (e = d[f]) && (!o[e] || o[e](b) !== !0); ++f) ;
                    n.push(b[0]);
                }
                this.done(n);
            }
        },
        registerFilter: function(a, b, d) {
            return b ? this.filters[a] = d ? c.proxy(b, d) : b : this.filters[a] = function(b) {
                b.triggerHandler.call(b, colon.letterCase(a, "prop"));
            }, this;
        },
        unregisterFilter: function(a) {
            return delete this.filters[a], this;
        }
    }, aa.scrollView.registerFilter("lazy-image", function(a) {
        var b = a.dataset("src");
        b && ("IMG" === a[0].nodeName ? a.attr("src", b).load(function() {
            c(this).css("opacity", 1);
        }) : a.css("background-image", "url(" + b + ")"));
    }), aa.scrollView.registerFilter("thumbnail-filter", function(a) {
        var b, d, e, f, g, h, i, j, k, l = aa.thumbnailFilter;
        if (l.items && l.items.length && "IMG" === a[0].nodeName && (d = a.closest("a").removeClass("thumbnail-filter-positive thumbnail-filter-negative"), 
        !l.config("disabled"))) {
            for (e = a.dataset(), h = aa.tag.parse(e.tags), j = e.userId, f = [], g = [], k = 0; i = h[k]; ++k) l.findTag("positive", i) && f.push('<li class="positive">' + colon.html.escape(i) + "</li>"), 
            l.findTag("negative", i) && g.push('<li class="negative">' + colon.html.escape(i) + "</li>");
            return l.findUser("positive", j) && f.push('<li class="positive">id:' + colon.html.escape(j) + "</li>"), 
            l.findUser("negative", j) && g.push('<li class="negative">id:' + colon.html.escape(j) + "</li>"), 
            (f.length || g.length) && (b = c(".thumbnail-filter-items", d), b.length ? b.empty() : b = c('<ul class="thumbnail-filter-items"></ul>').insertBefore(a), 
            f.length && (d.addClass("thumbnail-filter-positive"), b.append(f.join(""))), g.length) ? (d.addClass("thumbnail-filter-negative"), 
            b.append(g.join("")), a.attr("src", a.dataset("srcFiltered") || aa.sourcePath + "images/filtered.png").css("opacity", 1), 
            !0) : void 0;
        }
    }), aa.AutoView = function(b, d) {
        this.options = d = d || {};
        var e = d.scrollContext = d.scrollContext && c(d.scrollContext);
        this.target = c(b, e), d.enable ? (a.setTimeout(c.proxy(this.on, this)), this.active = !0) : (!e && !d.config && (d.config = colon.storage.config("autoView")), 
        this.active = d.config ? d.config("enabled") : d.active !== !1, this.active && a.setTimeout(c.proxy(this.on, this)));
    }, aa.AutoView.setup = function() {
        aa.scrollView.registerFilter("auto-view");
    }, aa.AutoView.prototype = {
        target: null,
        options: null,
        active: !1,
        paused: !1,
        completed: !1,
        apply: function(a) {
            return this.active && !a ? this : (aa.scrollView.reset(this.target), this);
        },
        cancel: function() {
            return aa.scrollView.done(this.target), this;
        },
        on: function() {
            var a = this.options;
            return aa.scrollView.unwatch(a.scrollContext), aa.scrollView.watch(a.scrollContext), 
            aa.scrollView.reset(this.target), this.active = !0, a.config && a.config("enabled", 1), 
            this.target.triggerHandler("autoViewOn"), this;
        },
        off: function() {
            var a = this.options;
            return aa.scrollView.unwatch(a.scrollContext), aa.scrollView.done(this.target), 
            this.active = !1, a.config && a.config("enabled", null), this.target.triggerHandler("autoViewOff"), 
            this;
        },
        restart: function() {
            return this.active ? (aa.scrollView.reset(this.target), this.paused = !1, this) : this;
        },
        pause: function() {
            return aa.scrollView.done(this.target), this.paused = !0, this;
        },
        complete: function() {
            return this.completed = !0, this.target.triggerHandler("autoViewComplete"), aa.scrollView.unwatch(this.options.scrollContext), 
            this;
        }
    }, aa.autoView = {
        handler: null,
        config: null,
        enableContainer: null,
        disableContainer: null,
        setup: i,
        terminate: j,
        enabled: function() {
            return this.config("enabled");
        },
        update: k,
        enable: l,
        disable: m,
        complete: n
    };
    var da = p.script("https://apis.google.com/js/plusone.js"), ea = p.script("//platform.twitter.com/widgets.js"), fa = {
        ja: "ja_JP",
        en: "en_US",
        fr: "fr_FR",
        ko: "ko_KR",
        ru: "ru_RU",
        th: "th_TH",
        zh: "zh_CN",
        "zh-tw": "zh_TW",
        es: "es_ES"
    }[b.documentElement.lang || "ja"], ga = p.script("//connect.facebook.net/" + fa + "/sdk.js");
    aa.ui.shareButton = {
        container: [],
        template: null,
        setup: function() {
            c('<div id="fb-root"/>').appendTo("body"), this.update();
            var a = c("ul.share-button");
            a.length && (this.template = c("#template-ui-share-container"), a.find(".weibo-button").each(o).end().find(".qq-button").each(q).end().find(".ui-share-button").click(c.proxy(this.open, this)));
        },
        update: function() {
            c(".g-plus, .g-plusone").length && this.google(), c(".twitter-share-button").length && this.twitter(), 
            c(".fb-like").length && this.facebook(), c(".qq-button").length && this.qq();
        },
        google: function() {
            da.load().done(function(b, c) {
                a.gapi && "async" === c && a.gapi.plusone.go();
            });
        },
        twitter: function() {
            ea.load().done(function(b, c) {
                a.twttr && "forward" !== c && (a.twttr.widgets && a.twttr.widgets.load(), "success" === c && a.twttr.ready(function() {
                    a.twttr.events.bind("tweet", function(a) {
                        if (a) {
                            var b = a.target && "IFRAME" === a.target.nodeName ? a.target.src : void 0;
                            aa.tracking.track([ "_trackSocial", "twitter", "tweet", b ]);
                        }
                    }), a.twttr.events.bind("click", function(a) {
                        if (a) {
                            var b = a.target && "IFRAME" === a.target.nodeName ? a.target.src : void 0;
                            aa.tracking.track([ "_trackSocial", "twitter", aa.camelize("click-" + a.region), b ]);
                        }
                    });
                }));
            });
        },
        facebook: function() {
            ga.load().done(function(b, c) {
                a.FB && "forward" !== c && (a.FB.init({
                    appId: aa.config.facebookAppId,
                    version: "v2.3",
                    xfbml: !0
                }), "success" === c && (a.FB.Event.subscribe("edge.create", function(a) {
                    aa.tracking.track([ "_trackSocial", "facebook", "like", a ]);
                }), a.FB.Event.subscribe("edge.remove", function(a) {
                    aa.tracking.track([ "_trackSocial", "facebook", "unlike", a ]);
                }), a.FB.Event.subscribe("message.send", function(a) {
                    aa.tracking.track([ "_trackSocial", "facebook", "send", a ]);
                })));
            });
        },
        weibo: o,
        qq: q,
        open: r
    }, aa.ui.modal = {
        modals: [],
        latestTrigger: null,
        blockCount: 0,
        backgroundSelector: ".ad",
        initialized: !1,
        paused: !1,
        initialize: function() {
            colon.d.on("click.modal", c.proxy(this.click, this)), colon.ui.shortcut.bind("ESC", function() {
                return this.pop(), !1;
            }, this), this.initialized = !0;
        },
        terminate: function() {
            colon.d.off("click.modal"), colon.ui.shortcut.unbind("ESC"), this.initialized = !1;
        },
        current: function(a) {
            var b = this.modals[this.modals.length - 1];
            return a ? (b || {})[a] : b;
        },
        scrollTop: function() {
            var a, b, c;
            if (this.blockCount) for (a = this.modals, c = a.length - 1; b = a[c]; --c) if (b.block) return b.target.scrollTop() - colon.w.scrollTop();
            return null;
        },
        block: function() {
            ++this.blockCount, c(this.backgroundSelector).addClass("_invisible"), c("html").addClass("no-scroll");
        },
        unblock: function() {
            this.blockCount = 0, c(this.backgroundSelector).removeClass("_invisible"), c("html").removeClass("no-scroll");
        },
        pause: function() {
            this.paused = !0;
        },
        restart: function() {
            this.paused = !1;
        },
        click: function(a) {
            var b, d;
            this.paused || (b = c(a.target), d = b.closest(".ui-modal-trigger")[0], b.hasClass("ui-modal-close") || d && d === this.latestTrigger || this.modals.length && !d && !b.closest(this.current("target")).length ? this.pop() : d && (this.latestTrigger = d));
        },
        push: function(a, b) {
            return a = c(a), this.paused ? a : (this.initialized || this.initialize(), b || (b = {}), 
            this.current("block") || this.close(), this.modals.push(c.extend({
                target: a
            }, b)), b.block && (aa.scrollView.add(".ui-scroll-view", a), aa.scrollView.watch(a), 
            this.blockCount || this.block()), a.show().trigger("uimodalopen"));
        },
        pop: function() {
            if (!this.paused) {
                var a, b = this.modals.pop();
                this.latestTrigger = null, b && (a = b.target, b.block && (aa.scrollView.remove(".ui-scroll-view", a), 
                aa.scrollView.unwatch(a), this.blockCount <= 1 && this.unblock()), b.close && b.close(a), 
                b.disposable ? a.remove() : a.hide(), a.trigger("uimodalclose"), this.modals.length || this.terminate());
            }
        },
        clear: function() {
            for (var a = this.modals.length; a--; ) this.pop();
        }
    }, aa.ui.modal.open = aa.ui.modal.push, aa.ui.modal.close = aa.ui.modal.pop, aa.ad = {}, 
    aa.ui.scroll = function(a, b) {
        var d = 0;
        if ("number" === c.type(a) ? d = a : (a = c(a), a.length && (d = a.offset().top)), 
        d) {
            var e = c("#ceiling").outerHeight();
            e && (d -= e), d = Math.max(d, 0);
        }
        var f = c(colon.ua.webkit ? "body" : "html").stop(!0, !0);
        return null === b ? (aa.ui.scroll.scrolling = !1, colon.w.scrollTop(d).promise()) : (aa.ui.scroll.scrolling = !0, 
        colon.d.on("scroll.uiscroll DOMMouseScroll.uiscroll mousewheel.uiscroll", function() {
            return !1;
        }), f.animate({
            scrollTop: d
        }, b || 800, "easeOutExpo", function() {
            colon.d.off("scroll.uiscroll DOMMouseScroll.uiscroll mousewheel.uiscroll"), aa.ui.scroll.scrolling = !1;
        }).promise());
    }, aa.ui.scroll.scrolling = !1, aa.ui.scroll.setup = function() {
        colon.d.on("click.scroll", ".ui-scroll", function(d) {
            var e, f, g, h = c(this);
            if (!h.hasClass("off")) {
                if (e = h.dataset(), f = !!e.hashLink, g = e.target || h.attr("href"), f) {
                    d.preventDefault();
                    var i = a.location.hash;
                    if (i) {
                        if (i === g) return;
                        if (colon.ua.ie) {
                            var j = b.getElementById(i.slice(1));
                            j && c(j).removeClass("target"), c(g).addClass("target");
                        }
                    }
                    a.location.hash = g;
                }
                return aa.ui.scroll(g), h.trigger("uiScroll"), !1;
            }
        }), colon.w.load(function() {
            var c = a.location.hash;
            if (c) {
                var d = b.getElementById(c.slice(1));
                d && aa.ui.scroll(d);
            }
        });
    }, aa.hashParameter = function() {
        return decodeURIComponent((/#(.+)$/.exec(location.href) || [])[1] || "");
    }, aa.hashState = function(a) {
        var b;
        return null === a ? (location.hash = "#", null) : a ? (b = aa.hashState.stringify(a), 
        location.hash = b, b) : aa.hashState.parse(aa.hashParameter());
    }, aa.hashState.stringify = function(a) {
        var b, c, d = [];
        for (b in a) c = a[b], "number" != typeof c && !c || "function" == typeof c || (c === !0 ? d.push(encodeURIComponent(b)) : d.push([ encodeURIComponent(b), encodeURIComponent(a[b]) ].join("=")));
        return d.join("&");
    }, aa.hashState.parse = function(a) {
        for (var b, c, d, e, f = a.split("&"), g = 0, h = {}; b = f[g]; ++g) c = /^([^=]+)=?(.*)$/.exec(b) || [], 
        c[1] && (d = decodeURIComponent(c[1]), e = c[2] && decodeURIComponent(c[2]), e = e ? isNaN(Number(e)) ? e : Number(e) : !0, 
        h[d] = e);
        return h;
    }, aa.formatNumber = function(a, b) {
        b = b || 2;
        for (var c = a.toString().split(".")[0].length; c++ < b; ) a = "0" + a;
        return a;
    }, aa.supportedInlineSVG = function() {
        var a = b.createElement("div");
        return a.innerHTML = '<svg version="1.1" xmlns="http://www.w3.org/2000/svg"></svg>', 
        "http://www.w3.org/2000/svg" === a.childNodes[0].namespaceURI;
    }, aa.searchURL = function(a, b) {
        var d, e, f, g = /(https?:\/\/[-_.!~*\'()a-zA-Z0-9;\/?:\@&=+\$,%#]+)/g, h = 0;
        if (b) return b = c.makeArray(b), e = a.replace(g, function(a, c) {
            return b[h++] || c;
        });
        if (f = a.match(g), !f) return f;
        for (e = []; d = f[h]; ++h) -1 === c.inArray(d, e) && e.push(d);
        return e;
    };
    var ha = /^https?:\/\/(?:.*\.?pixiv\.net|p\.tl)(?:\/|$)/;
    aa.redirectURL = function(a) {
        return ha.test(a) ? encodeURI(a) : "/jump.php?" + encodeURIComponent(a);
    }, colon.ns("pixiv.api", {
        cache: {},
        pTl: function(a) {
            var b = {
                ajaxSettings: {
                    dataType: "jsonp"
                },
                cache: !0
            };
            return aa.api.get("http://p.tl/api/api_simple.php", {
                url: a,
                key: aa.config.pTlAPIKey
            }, b);
        },
        fetch: function(a, b) {
            return aa.api.get("/rpc/url_fetch.php", {
                url: a,
                size: b
            }, {
                cache: 864e5
            });
        },
        follow: function(a, b, c) {
            return aa.api.post("/bookmark_add.php", {
                mode: "add",
                type: "user",
                user_id: a,
                tag: c,
                restrict: +b || 0,
                format: "json"
            });
        },
        unfollow: function(a) {
            return aa.api.group_old.remove("bookuser", a);
        },
        user: function(a, b, c) {
            var d = isNaN(a) ? (/id=(\d+)/.exec(a) || [])[1] : a;
            return aa.api.get("/rpc/user_fetch.php", {
                id: d,
                size: b,
                options: c.join()
            }, {
                cache: 6e4
            });
        },
        suggest: function(a) {
            return aa.api.get("/rpc/cps.php", {
                keyword: a
            }, {
                cache: 864e5
            });
        },
        rating: function(a) {
            var b = {
                mode: "save",
                i_id: aa.context.illustId,
                u_id: aa.user.id,
                qr: +aa.context.hasQuestionnaire,
                score: a
            };
            return aa.api.post("./rpc_rating.php", b);
        },
        questionnaire: function(a) {
            var b = {
                mode: "save2",
                i_id: aa.context.illustId,
                u_id: aa.user.id,
                qr: +aa.context.hasQuestionnaire,
                num: a
            };
            return aa.api.post("./rpc_rating.php", b);
        },
        userRecommendation: function(a, b, c) {
            return aa.api.recommender.request("user", {
                sample_users: a,
                num_recommendations: b || 10,
                following_booster_model: c || 1
            });
        },
        recommender: {
            request: function(a, b) {
                return aa.api.get("/rpc/recommender.php", c.extend({
                    type: a
                }, b));
            },
            user: function(a, b, c) {
                return aa.api.recommender.request("user", {
                    sample_users: a,
                    num_recommendations: b || 10,
                    nc: Number(c) || 0
                });
            },
            hideUser: function(a) {
                return aa.api.post("/rpc/recommender.php", {
                    type: "user",
                    op: "hide",
                    ignore_user_id: a
                });
            }
        },
        group_old: {
            request: function(a, b, d, e) {
                return aa.api.post("/rpc_group_setting.php", c.extend({
                    mode: a,
                    type: b,
                    id: d
                }, e));
            },
            getMyPixivList: function() {
                return aa.api.group_old.getList("mypixiv");
            },
            getFavoriteList: function() {
                return aa.api.group_old.getList("bookuser");
            },
            getList: function(a, b) {
                return aa.api.get("/rpc_group_setting.php", c.extend({
                    mode: "get",
                    type: a,
                    id: aa.user.id
                }, b));
            },
            removeMyPixiv: function(a) {
                return aa.api.group_old.remove("mypixiv", a);
            },
            removeFavorite: function(a) {
                return aa.api.group_old.remove("bookuser", a);
            },
            remove: function(a, b) {
                return aa.api.group_old.request("del", a, b);
            }
        },
        event: {
            stash: {},
            request: function(a, b, c) {
                return aa.api.post("/event_add.php", {
                    mode: a,
                    type: b,
                    id: c
                });
            },
            deleteImage: function(a, b) {
                return aa.api.event.request("delete_img", a, b);
            },
            calendar: function(a, b) {
                return aa.api.post("/rpc_event_calendar.php", {
                    y: a,
                    m: colon.padding(b)
                }, {
                    cache: aa.api.event.stash
                });
            }
        },
        validation: {
            signup: function(a) {
                return "string" === c.type(a) && (a = p.parseQuery(a)), c.extend(a, {
                    mode: "validation"
                }), aa.api.get("/signup.php", a, {
                    cache: aa.api.cache
                });
            },
            email: function(a) {
                return aa.api.get("/setting_mail_address.php", {
                    mode: "validation",
                    mail_address: a
                }, {
                    cache: aa.api.cache
                });
            },
            illustId: function(a) {
                return aa.api.get("/rpc/setting_showcase_illust.php", {
                    action: "illust_check",
                    illust: a
                }, {
                    cache: aa.api.cache
                });
            }
        },
        bookmarkTag: function(a) {
            return a || (a = "illust"), aa.api.get("/rpc/" + a + "_bookmark_tags.php", {
                attributes: c.makeArray(arguments).slice(1).join().replace("level", "lev") || "none"
            }, {
                cache: aa.api.cache
            });
        }
    }), aa.Validator = function(a, b, d) {
        this.container = c(a).submit(c.proxy(this.submit, this)), this.done = b, this.fail = d;
        var e = c.proxy(this.validate, this), f = c('select.validation-target, .validation-target[type="radio"], .validation-target[type="checkbox"]', a).on("click change", e).first().change().end();
        c(".validation-target", a).not(f).keyup(c.proxy(this.clear, this)).keyup(colon.debounce(this.validate, this, 500)).blur(e);
    }, aa.Validator.prototype = {
        container: null,
        done: null,
        fail: null,
        validate: function(a) {
            var b = this;
            ("keyup" !== a.type || a.target.value) && aa.api.validation.signup(this.container.serialize()).done(function(c) {
                c && b.done && b.done.call(b, a, c.errors);
            }).fail(function(c, d, e) {
                b.fail && b.fail.call(b, a, c, d, e);
            });
        },
        ok: function(a) {
            c(a).closest("dd").removeClass("has-error").find(".validation-ok").show();
        },
        ng: function(a, b) {
            c(a).closest("dd").addClass("has-error").find(".validation-error p").text(b).end().find(".validation-ok").hide();
        },
        clear: function(a) {
            c(a.target).closest("dd").removeClass("has-error").find(".validation-ok").hide();
        },
        submit: function() {
            var a = c(".validation-error", this.container).filter(":visible").length;
            return a && alert(this.container.dataset("textFail")), !a;
        }
    }, aa.Validation = function(a) {
        a = this.container = c(a).submit(c.proxy(this.submit, this)), this.submitButton = c(".submit-container .submit", a);
        var b = c.proxy(this.validate, this), d = c('select.validation-target, .validation-target[type="radio"], .validation-target[type="checkbox"]', a).on("click change", b);
        c(".validation-target", a).not(d).keyup(colon.debounce(this.validate, this, 500)).blur(b).keypress(function(a) {
            13 === a.which && b(a);
        });
    }, aa.Validation.setup = function() {
        c(".validation-form").each(function() {
            new aa.Validation(this);
        });
    }, aa.Validation.prototype = {
        container: null,
        submitButton: null,
        frozen: !1,
        type: {
            required: function(a) {
                return !!c.trim(a.val()) || aa.text.validationFailRequired;
            },
            email: function(a) {
                return /^.+@.+\.\w+$/.test(a.val()) || aa.text.validationFailEmail;
            },
            emailAsync: function(a) {
                return aa.api.validation.email(a.val()).then(function(a) {
                    return a && a.errors && a.errors.mail_address ? a.errors.mail_address : null;
                });
            }
        },
        ok: function(a) {
            c(a).closest("dd").removeClass("has-error").find(".validation-ok").show(), this.ready() && this.enable();
        },
        ng: function(a, b) {
            c(a).closest("dd").addClass("has-error").find(".validation-error .text").text(b).end().find(".validation-ok").hide(), 
            this.disable();
        },
        enable: function() {
            this.submitButton.prop("disabled", !1);
        },
        disable: function() {
            this.submitButton.prop("disabled", !0);
        },
        clear: function(a) {
            c(a).closest("dd").removeClass("has-error").find(".validation-ok").hide();
        },
        validate: function(a) {
            var b, d, e, f, g = this, h = c(a.target);
            if ("keyup" !== a.type || c.trim(h.val())) {
                b = h.closest("dd"), d = (h.dataset("type") || "").split(/\s+/);
                for (var i = 0; (e = d[i]) && (f = this.type[aa.camelize(e)](h), f === !0); ++i) ;
                if (f && f.promise) return void f.done(function(a) {
                    a && !g.frozen ? g.ng(h, a) : g.ok(h);
                });
                switch (f) {
                  case void 0:
                    return;

                  case !0:
                    this.ok(h);
                    break;

                  default:
                    return void this.ng(h, f);
                }
            }
        },
        ready: function() {
            return !c(".has-error", this.container).length;
        },
        freeze: function() {
            this.container.off(), c("select, input, button", this.container).off(), this.frozen = !0;
        },
        submit: function() {
            return this.container.hasClass("require-password") && c("#password-confirm").is(":hidden") ? (aa.ui.modal.open("#password-confirm", {
                block: !0
            }), this.freeze(), !1) : void 0;
        }
    }, aa.toolbar = {
        container: null,
        timer: null,
        setup: function() {
            this.container = c("#toolbar-items");
        },
        add: function(a) {
            this.container || this.setup(), this.container.find(a).length || a.appendTo(this.container), 
            a.show();
        },
        remove: function(a) {
            this.container && a.animate({
                height: 0,
                marginTop: a.outerHeight(!0)
            }, function() {
                a.css({
                    display: "none",
                    height: "",
                    marginTop: ""
                });
            });
        },
        scroll: function() {
            this.debounce || (this.debounce = colon.debounce(function() {
                this.container.show(), this.debounce = null;
            }, this, 150), this.container.hide()), this.debounce();
        }
    }, aa.questionnaire = {
        container: null,
        listContainer: null,
        statsContainer: null,
        setup: function() {
            var a, b = this;
            if (aa.context.hasQuestionnaire) {
                a = this.container = c(".questionnaire");
                var d = this.listContainer = c(".list", a), e = this.statsContainer = c(".stats", a), f = a.closest(".ui-expander-container").on("collapse", function() {
                    e.add(d).removeClass("visible");
                }).find(".expand");
                a.on("click", ".toggle-stats", function() {
                    e.hasClass("visible") ? e.removeClass("visible") : (e.addClass("visible"), f.click());
                }), aa.context.answered === !1 && a.on("click", ".toggle-list", function() {
                    d.hasClass("visible") ? d.removeClass("visible") : (d.addClass("visible"), f.click());
                }).on("click", "input", function(a) {
                    b.answer(c(a.target).dataset("key")), b.listContainer.toggleClass("visible");
                });
            }
        },
        answer: function(a) {
            var b = this;
            aa.api.questionnaire(a).done(function(d) {
                c(".status", b.container).replaceWith(p.template.apply("questionnaire-result", d));
                var e = c(".answer-" + a, b.statsContainer);
                e.text(+e.text() + 1), b.listContainer.removeClass("visible");
            });
        }
    }, aa.ui.Selectbox = function(a, b) {
        this.container = a = c(a), this.labelContainer = c("> div, .label", a), this.itemContainer = c("> ul, .items", a), 
        this.options = b || {}, this.options.sensitive ? this.container.on("mouseenter mouseleave", c.proxy(this.toggle, this)) : this.labelContainer.click(c.proxy(this.toggle, this)), 
        this.container.on("click", "li:not(.selected)", c.proxy(this.select, this));
    }, aa.ui.Selectbox.prototype = {
        options: null,
        container: null,
        labelContainer: null,
        itemContainer: null,
        toggle: function() {
            this.itemContainer.is(":visible") ? aa.ui.modal.pop() : aa.ui.modal.push(this.itemContainer);
        },
        select: function(b) {
            if (!(b.isDefaultPrevented() || this.options.select && this.options.select(b) === !1)) {
                var d = c(b.target);
                aa.ui.modal.pop(), this.labelContainer.text(d.text() + " ▾");
                var e = d.dataset();
                e.url && (a.location.href = e.url), this.itemContainer.removeClass("selected"), 
                d.addClass("selected");
            }
        }
    }, aa.ui.Tag = x, aa.ui.Tag.split = s, aa.ui.Tag.find = t, aa.ui.Tag.match = u, 
    aa.ui.Tag.normalize = v, aa.ui.Tag.trim = w;
    var ia = /[\s\xA0　]+/, ja = /^"(.+)"$/, ka = /^[\s\xA0　]+/, la = /[\s\xA0　]+$/;
    aa.ui.Tag.prototype = {
        target: null,
        options: null,
        recentValue: "",
        container: null,
        tagsContainer: null,
        countContainer: null,
        input: null,
        tags: null,
        template: [ '<div class="ui-tag-container">', '<ul class="tags">', '{{each tags}}<li data-tag="{{= $value}}">{{= $value}}<span class="close">×</span></li>{{/each}}', "</ul>", '<input type="text" value="">', '<div class="count"><span class="count{{if tags.length > maxCount}} over{{/if}}">{{= tags.length}}</span>/{{= maxCount}}</div>', "</div>" ].join(""),
        itemTemplate: '<li data-tag="{{= tag}}">{{= tag}}<span class="close">×</span></li>',
        value: y,
        make: z,
        update: A,
        updateCount: B,
        add: C,
        remove: D
    }, aa.tag = {
        maxCount: 10,
        over: !1,
        input: null,
        tags: null,
        errorContainer: null,
        countContainer: null,
        setup: E,
        parse: F,
        inArray: G,
        toggle: H,
        update: I,
        verify: function() {
            var a = this.parse(this.input.val()), b = a.length;
            b > this.maxCount ? this.over || (this.over = !0, this.errorContainer.show(), this.countContainer.css("color", "#ff0000")) : this.over && (this.over = !1, 
            this.errorContainer.hide(), this.countContainer.css("color", "")), this.countContainer && this.countContainer.text(b);
        },
        match: J
    }, aa.follow = {}, aa.follow.setting = {
        target: null,
        id: null,
        initialized: !1,
        container: null,
        initialize: function() {
            var a, b, d = this;
            return this.initialized ? !1 : (this.initialized = !0, a = this.container.on("submit", ".action-follow", c.proxy(this.follow, this)).on("click", ".action-unfollow", c.proxy(this.unfollow, this)), 
            void (aa.user.premium && (b = new aa.LoadingIndicator(a), aa.api.userFolder(aa.user.id).done(function(a) {
                var c, e = [];
                for (c in a.tag_a) e.push(c);
                d.folders = e, d.updateFolder(), b.finish();
            }))));
        },
        newFolder: function() {
            var b, d = a.prompt(aa.text.specifyFolderName);
            d && (d = d.replace(/\s+/g, ""), d && (this.folders.push(d), this.folders.sort(), 
            b = c.inArray(d, this.folders), b = -1 === b ? 1 : b + 1, c(this.folderItem(d)).insertAfter(c("option", this.container).eq(b)).prop("selected", !0)));
        },
        folderItem: function(a) {
            "array" !== c.type(a) && (a = [ a ]);
            for (var b, d = [], e = 0; b = a[e]; ++e) b = colon.html.escape(b), d[e] = '<option value="' + b + '">' + b + "</option>";
            return d.join("");
        },
        updateFolder: function() {
            var a = this;
            c("select", this.container).append(this.folderItem(this.folders)).change(function() {
                "new" === this.value && 1 === this.selectedIndex && a.newFolder();
            }).prop("disabled", !1);
        },
        follow: function(a) {
            var b = c(a.target);
            return aa.api.follow(this.id, c('input[name="restrict"]:checked', b).val(), c("select", b).val()).done(function() {
                aa.ProfileCard.folderCache && aa.ProfileCard.folderCache(null);
            }), this.target.trigger("followed"), this.close(), !1;
        },
        unfollow: function() {
            aa.api.unfollow(this.id), this.target.trigger("unfollowed"), this.close();
        },
        open: function(a) {
            var b = this.target = c(a.currentTarget), d = b.offset(), e = colon.ui.modal.scrollTop() || 0, f = this.initialized;
            this.id = b.dataset("id"), this.initialized || (this.container = c(".follow-setting-modal"), 
            this.initialize()), colon.ui.modal.push(this.container), c(this.container).css({
                top: e + d.top + b.outerHeight() + 2,
                left: d.left
            }).find(".contents").html(p.template.apply("follow-setting", {
                following: b.hasClass("following")
            })), f && this.updateFolder();
        },
        close: function() {
            colon.ui.modal.pop();
        }
    }, aa.Favorite = function() {}, aa.Favorite.prototype = {
        _name: "group_old",
        name: "favorite",
        type: "bookuser",
        preference: null,
        button: null,
        groups: null,
        initialize: function() {
            this.preference = c("#favorite-preference"), this.button = c("#favorite-button").click(c.proxy(this.toggle, this));
        },
        toggle: function() {
            return this.preference.is(":visible") ? this.close() : this.open(), !1;
        },
        open: function() {
            aa.screen.close(this), this.groups || this.initializePreferenceContainer(), this.preference.show();
            var a = this.button;
            a.hasClass("added") && this.button.addClass("open");
        },
        initializePreferenceContainer: function() {
            var a = this, b = this.preference;
            aa.screen.register(this), c("div.close", b).click(c.proxy(this.close, this)), c("input.remove", b).click(c.proxy(this.remove, this)), 
            aa.user.premium && (c("select", b).change(function() {
                "new" === this.value && 1 === this.selectedIndex && a.addGroup();
            }), aa.api[this._name].getList(a.type).done(function(d) {
                var e, f = d.tag_a;
                if (c.isArray(f)) e = f; else {
                    e = [];
                    for (var g in f) e.push(g);
                }
                a.groups = e, c("select", b).append(a.makeGroup(e)).parent().removeClass("loading").end().prop("disabled", !1);
            }));
        },
        makeGroup: function(a) {
            c.isArray(a) || (a = [ a ]);
            for (var b, d = [], e = 0; b = a[e]; ++e) b = colon.html.escape(b), d[e] = '<option value="' + b + '">' + b + "</option>";
            return d.join("");
        },
        addGroup: function() {
            var b = a.prompt("新規フォルダ名を指定してください");
            if (b && (b = c.trim(b.replace(/ +/g, "")))) {
                this.groups.push(b), this.groups.sort();
                var d = c.inArray(b, this.groups);
                d = -1 === d ? 1 : d + 1, c(this.makeGroup(b)).insertAfter(c("option", this.preference).eq(d)).prop("selected", !0);
            }
        },
        close: function() {
            return this.preference.hide(), this.button.removeClass("open"), !1;
        },
        add: function() {},
        remove: function() {
            aa.api[this._name].remove(this.type, aa.context.userId), this.removed();
        },
        removed: function() {
            var a = this.button;
            a.removeClass("following").addClass("follow").find(".text").text(this.button.dataset("textFollow")), 
            c("form", this.preference).attr("action", "/bookmark_add.php").append('<input type="hidden" name="mode" value="add">').find("input.remove").remove(), 
            this.close();
        }
    }, aa.search = {
        optionContainer: null,
        setup: K,
        parseSizeOption: L,
        parseDateOption: M,
        dateSelector: O,
        sizeSelector: P,
        ratioSelector: Q,
        toolSelector: R,
        orderSelector: N,
        openOption: S,
        submit: T
    };
    var ma = !1;
    aa.MyPixiv = function() {}, aa.MyPixiv.prototype = c.extend(new aa.Favorite(), {
        name: "mypixiv",
        type: "mypixiv",
        initialize: function() {
            this.preference = c("#mypixiv-preference"), this.button = c("#mypixiv-button"), 
            aa.context.myPixiv && this.button.click(c.proxy(this.toggle, this));
        },
        removed: function() {
            c("#mypixiv-button").removeClass("added").attr("title", "マイピク申請"), this.button.unbind("click"), 
            this.close();
        }
    }), aa.Popup = function(a) {
        this.context = a, c(".trigger", a).click(c.proxy(this.toggle, this));
    }, aa.Popup.setup = function() {
        c(".popup").each(function() {
            new aa.Popup(this);
        });
    }, aa.Popup.prototype = {
        context: null,
        container: null,
        load: function() {
            this.container = c(".container", this.context).find(".close").click(c.proxy(this.close, this)).end(), 
            aa.screen.register(this);
        },
        toggle: function() {
            return this.container || this.load(), this.container.is(":visible") ? this.close() : this.open();
        },
        open: function() {
            aa.screen.close(this);
            var a = this.container.show().find(":text, textarea")[0];
            return a && a.focus(), "function" == typeof this.openComplete && this.openComplete(), 
            !1;
        },
        openComplete: null,
        close: function() {
            return this.container.hide(), "function" == typeof this.closeComplete && this.closeComplete(), 
            !1;
        },
        closeComplete: null
    }, aa.verification = function(a, b, d) {
        if (a) {
            b || (b = ".verification"), d = d ? c(d) : colon.d;
            var e = aa.camelize("verification-" + a);
            return aa.verification.add(a), {
                assign: function(f) {
                    d.on("click." + e, b, function() {
                        var b = {};
                        b[a] = "function" === c.type(f) ? f() : f, p.updateURL(this, b);
                    });
                },
                cancel: function() {
                    d.off("click." + e);
                }
            };
        }
    }, c.extend(aa.verification, {
        keys: [],
        add: function() {
            var a, b, d, e = aa.verification, f = c.makeArray(arguments);
            for (b = 0, d = f.length; d > b; ++b) a = f[b], -1 === c.inArray(a, e.keys) && e.keys.push(a);
            return e;
        },
        clear: function() {
            var a, b, c, d = aa.verification, e = d.keys;
            if (e.length) {
                for (a = {}, b = 0, c = e.length; c > b; ++b) a[e[b]] = null;
                return p.updateQuery(a, !0), d;
            }
        }
    }), aa.setting = {
        toggle: U
    }, aa.logOutLanguage = {
        set: function(a) {
            colon.storage.cookie("user_language", a, {
                expires: 5184e6,
                domain: ".pixiv.net"
            });
        }
    }, aa.logOnLanguage = {
        set: function(a) {
            return aa.api.post("/rpc_language_setting.php", {
                mode: "set",
                user_language: a
            }), !0;
        },
        reload: function(b) {
            this.set(b), a.setTimeout(function c() {
                p.logOnLanguage.set(b) ? location.reload() : a.setTimeout(c, 100);
            }, 100);
        }
    }, aa.hideTopInfo = {
        remove: W,
        hide: X,
        find: Y,
        update: Z
    }, aa.searchTutorialModal = {
        show: $,
        hide: _
    }, colon.ns("pixiv.tagEditor", {
        tags: null,
        container: "#tag-editor",
        tagContainer: ".work-tags",
        show: function(a) {
            this.tags = a.tags;
            var b = c(this.container).html(a.html);
            b.is(":hidden") && (c(this.tagContainer).slideUp("fast"), b.slideDown("fast"));
        },
        update: function() {
            this.tags && c(this.tagContainer + " .tags-container").html(p.template.apply("work-tags", {
                tags: this.tags
            })), this.tags = null;
        }
    }), c.extend(aa.page, {
        signup: function() {
            var a = [ "pixiv_id", "user_name", "mail_address", "password", "password_again", "sex", "birthday_year", "birthday_month", "birthday_day", "user_language" ];
            new aa.Validator("#signupForm1", function(b, d) {
                var e, f = b.target, g = f.name;
                if (g) {
                    0 === g.indexOf("birthday") && c(f).nextAll(".validation-ok").is(":visible") && d && d.birthday && this.ng(f, d.birthday);
                    for (var h, i = 0; h = a[i]; ++i) e = 0 === h.indexOf("birthday") ? "birthday" : h, 
                    e === g && d && d[e] && this.ng(f, d[e]), (!d || !d[e]) && this.ok(c('*[name="' + h + '"]', this.container));
                }
            });
        },
        work: function() {
            aa.rating.setup(), aa.questionnaire.setup(), c("._comment-form").length ? aa.comment.setup() : aa.comments.setup(), 
            aa.embed.setup(), aa.illustRecommendOnMemberIllust.setup({
                count: 3
            }), "bookmark" === aa.context.queries.action && aa.bookmarkModal.open();
            var a = c(".tag-container .tag-cloud"), b = a.find(".tag-orig");
            b.remove();
            var d = b.dataset("tag");
            a.find("li").each(function() {
                var a = c(this);
                return a.children("span").dataset("tag") === d ? (b = a, a.remove(), !1) : void 0;
            }), a.prepend(b);
        },
        search: function() {
            aa.search.setup(), V();
        },
        content_upload: function() {
            var b = c(".settings");
            b.find(".has-options input").click(function() {
                aa.ui.toggleState(c(this).closest(".has-options").next());
            }).each(function() {
                var a = c(this);
                a.is(":checked") && a.triggerHandler("click");
            }).end().find("input").click(function() {
                var a = c(this), d = c(".rating-explicit-target", b), e = d[0].disabled;
                a.hasClass("rating-explicit") ? !e && c(".rating-explicit", b).filter(":checked").length && d.prop("disabled", !0).last().prop("checked", !0).end().parent().addClass("disabled") : e && a.hasClass("rating-general") && d.prop({
                    disabled: !1,
                    checked: !1
                }).parent().removeClass("disabled");
            }), c("#form-upload").submit(function() {
                return c('*[name="tag[]"]', this).length && !aa.ui.Tag.trim(c('*[name="tag[]"]', this).val()) || !c("*[name=x_restrict_sexual]", this).filter(":checked").length || c("*[name=sexual]", this).not(":disabled").length && !c("*[name=sexual]", this).filter(":checked").length ? (a.alert(aa.text.requiredError), 
                !1) : a.confirm(aa.text.uploadConfirm) ? void c(".submit", this).prop("disabled", !0).addClass("disabled") : !1;
            });
            var d = c(".files tbody");
            d.length && c(".add-file-input").click(function() {
                var a, b = +c("tr:last-child input", d).attr("name").slice(4), e = [];
                for (a = 1; 5 >= a; ++a) e[a] = p.template.apply("file", {
                    page: b + a
                });
                d.append(e.join(""));
            });
        },
        novel_upload: function() {
            aa.tag.setup(), c("#view_tag0, #category_tags").on("click", ".tag", function() {
                return aa.tag.toggle(c(this).dataset("tag")), !0;
            });
        },
        ranking: function() {
            aa.ranking.setup(), colon.d.on("click", ".rank h1 a", function() {
                aa.tracking.event("ranking", "rank-3", c(this).attr("href").slice(1));
            }).on("uimodalopen", ".share ul", function() {
                aa.tracking.event("ranking", "openShare", c(this).dataset("rank"));
            }).on("uimodalopen", ".info-modal", function() {
                aa.tracking.event("ranking", "openShare-3", c(this).dataset("rank"));
            });
        },
        bookmark: function() {
            aa.illustRecommend.setup();
        },
        bookmark_detail: function() {
            aa.illustRecommend.setup({
                count: 15
            });
        },
        "*/bookmark_add": function() {
            aa.illustRecommend.setup({
                count: 15
            }), aa.bookmarkTag.setup(".tag-cloud-container"), c(".ui-counter").counter();
            var a = c(".tag-container .tag-cloud"), b = a.find(".tag-orig");
            b.remove();
            var d = b.dataset("tag");
            a.find("li").each(function() {
                var a = c(this);
                return a.children("span").dataset("tag") === d ? (b = a, a.remove(), !1) : void 0;
            }), a.prepend(b), c(".layout-body").on("click", ".tag", function() {
                return aa.tag.toggle(c(this).dataset("tag")), !1;
            }), aa.tag.setup();
        },
        setting_user: function() {
            c("input.ui-tag").each(function() {
                new aa.ui.Tag(this, {
                    maxCount: 20
                });
            });
            var a = c("#over-18"), b = c("#enable-thumbnail-filter");
            a.prop("checked") && a.click(), b.prop("checked") && b.click();
        },
        event_member: function() {
            aa.myList.setup();
        },
        ranking_log: function() {
            aa.rankingCalendar.setup();
        },
        event: function() {
            a.load_calendar(aa.context.year, aa.context.month);
        },
        "novel/preview": function() {
            if (!a.opener || !a.opener.document || !a.opener.document.getElementById("novel_text")) return void c("#preview_area").html("本文が取得できませんでした。<br />このウィンドウを閉じて、本文入力ページからもう一度プレビューを実行してください。<br />");
            c("#preview_area")[0].style.display = "";
            var b = a.opener.document, d = b.getElementById("novel_text").value, e = b.getElementsByName("id");
            if (e && e[0]) {
                var f = e[0].value;
                aa.context.illustId = f;
            }
            var g = b.getElementsByName("restrict");
            if (g && g[0]) {
                var h = g[0].value;
                aa.context.permission = h;
            }
            var i = b.getElementsByName("x_restrict");
            if (i && i[0]) {
                var j = i[0].value;
                aa.context.explicit = j;
            }
            a.parseNovel(d);
        },
        "group/create": function() {
            new aa.group.Create();
        },
        group: function() {
            aa.group && aa.group.setup();
        },
        setting_access_block: function() {
            var a = c("#add-user-container");
            a.length && c(".input-block-user").focus(function() {
                c(this).keydown();
            }).click(function() {
                return !1;
            }).keydown(colon.debounce(function() {
                var b = aa.ui.Tag.trim(c(this).val());
                b && aa.api.user(b, "s", [ "access_blocking" ]).done(function(b) {
                    return b ? (a.is(":hidden") && aa.ui.modal.open(a), void c("ul", a).empty().html(p.template.apply("block-user", b))) : void a.hide();
                }).fail(function() {
                    a.hide();
                });
            }, null, 500));
        },
        authentication_request: function() {
            colon.storage.cookie("show_welcome_modal", "1", {
                expires: 864e5
            });
            var a = ".one_column>div";
            c(a).css({
                "background-color": "#ffffcc"
            }), setTimeout(function() {
                c(a).css({
                    "background-color": "#ffffff"
                }), setTimeout(function() {
                    c(a).css({
                        "background-color": "#ffffcc"
                    }), setTimeout(function() {
                        c(a).css({
                            "background-color": "#ffffff"
                        });
                    }, 200);
                }, 200);
            }, 200);
        },
        welcome: function() {
            colon.storage.cookie("show_welcome_modal", "1", {
                expires: 864e5
            });
        },
        notify_all: function() {
            var a = aa.context.notificationItems;
            a && new aa.Notification("all").create(a, !0);
        },
        userRecommendation: function() {
            aa.userRecommend.setup();
        },
        userSearch: function() {
            aa.userSearch.setup();
        }
    }), aa.setup();
}(this, document, jQuery), function() {
    "use strict";
    colon.ns("pixiv", {
        transparentImage: pixiv.sourcePath + "images/common/transparent.gif"
    });
}.call(this), jQuery(function(a) {
    "use strict";
    function b(a, b, c) {
        throw "undefined" == typeof b && (b = ""), "undefined" == typeof c && (c = ""), 
        new Error("Assertion Failed: " + a + ", " + b + ", " + c);
    }
    function c(a, b, c) {
        throw new Error("Assertion Failed: " + a + ", " + b + " != " + c);
    }
    function d() {
        var c = [];
        return a('iframe[src^="http://d.pixiv.org/show"]').each(function() {
            var d, e, f = a(this).attr("src");
            /zone_id=([^&]+)/.test(f) ? d = RegExp.$1 : b("zone_idが取得できない"), /segments=([^&]+)/.test(f) ? e = RegExp.$1 : b("segmentが取得できない"), 
            c.push({
                zone: d,
                segment: e
            });
        }), c;
    }
    setTimeout(function() {
        function e(b, c) {
            var d = a.isArray(c) ? -1 !== a.inArray(b, c) : b === c;
            return d;
        }
        function f(d, f, g, h) {
            var i = " (" + f + ")";
            g.length !== h.length && b("アサーションコード異常: zonesとsegmentsの定義数が一致しない" + i, g, h);
            var j = 0;
            a.each(d, function(a, b) {
                e(b.zone, g[a]) || (e(q, g[a]) && (g.splice(a, 1), h.splice(a, 1), j++), e(b.zone, g[a]) || c("zoneが不正" + i + " " + a, g[a], b.zone)), 
                e(b.segment, h[a]) || c("segmentが不正" + i + " " + a, h[a], b.segment);
            }), d.length < g.length - j.length && c("広告の数が不正" + i, g.length - j.length, d.length);
        }
        function g(a) {
            n ? (a += ":abroad", f(E, a, [ [ x, q ], u, [ r, w ], [ y, q ], [ s, v, q ], [ t, q ] ], [ z, B, z, z, A, A ])) : o && p ? (a += ":female", 
            f(E, a, [ [ x, q ], u, [ r, w ], [ y, q ], [ s, v, q ], [ t, q ] ], [ z, B, z, z, D, z ])) : f(E, a, [ [ x, q ], u, [ r, w ], [ y, q ], [ s, v, q ], [ t, q ] ], [ z, B, z, z, z, z ]);
        }
        function h(a) {
            f(E, a, [ u, [ r, w ], [ s, v, q ], [ t, q ] ], [ B, z, C, C ]);
        }
        function i(b) {
            a('script[data-name="info-layout"][data-value="spotlight"]').length || f(E, b, [ [ r, w ], u, [ s, v, q ], [ t, q ] ], [ z, B, C, C ]);
        }
        function j() {
            var a = "mypage";
            g(a);
        }
        function k() {
            var a = "novel_index";
            h(a);
        }
        function l() {
            var a = "info";
            i(a);
        }
        if ("pixiv" in window) {
            var m = function() {
                return "user" in pixiv && "loggedIn" in pixiv.user || b("ログイン状態が取得できない"), pixiv.user.loggedIn;
            }(), n = function() {
                var c = a("html").attr("lang");
                return c || b("言語設定が取得できない"), "ja" !== c;
            }(), o = function() {
                return "user" in pixiv && "gender" in pixiv.user && "female" === pixiv.user.gender;
            }(), p = function() {
                return !!a('noscript[data-female-ad-term="running"]').get(0);
            }(), q = {
                toString: function() {
                    return "NONE";
                }
            }, r = "branding", s = "header", t = "footer", u = "click", v = "abtest", w = "abtest_branding", x = "logo_side", y = "branding_under", z = "noseg", A = "abroad", B = "jack1", C = "gray", D = "female", E = d();
            a("one_column_body .errorArea").get(0) || ("/mypage.php" === location.pathname ? j() : "/novel/" === location.pathname || "/novel/index.php" === location.pathname ? m && k() : 0 === location.pathname.indexOf("/info.php") && l());
        }
    }, 500);
}), function(a, b, c) {
    "use strict";
    pixiv.bookmarkTag = {
        config: null,
        data: null,
        type: "count",
        order: "desc",
        tagsName: null,
        tagsCount: null,
        container: null,
        tagContainer: null,
        inputContainer: null,
        setup: function(a, b) {
            if (a) {
                var d = this;
                this.container = c(a), this.inputContainer = c(b), this.tagContainer = c(".tag-cloud", a), 
                this.load(), this.container.on("click", ".tag-order li", function() {
                    return d.toggle(c(this).dataset("type")), !1;
                });
            }
        },
        show: function() {
            if (this.container) {
                for (var a, b = this.get().tags, d = this.data, e = [], f = 0; a = b[f]; ++f) e[f] = {
                    name: a,
                    cloud: d[a].lev
                };
                this.tagContainer.html(colon.template("tag-items", {
                    tags: e
                })), c(".tag-order", this.container).html(colon.template("tag-order", {
                    type: this.type,
                    order: this.order
                })), pixiv.tag.update();
            }
        },
        get: function(a, b) {
            a || (a = this.type), b || (b = this.order);
            var d, e, f = this[pixiv.camelize("tags-" + a)];
            return f ? (f.tags || (f.tags = c.extend([], this.tagsName.tags), e = this.data, 
            d = "asc" === b ? function(a, b) {
                return e[a].total - e[b].total;
            } : function(a, b) {
                return e[b].total - e[a].total;
            }, f.tags.sort(d), f.order = b), b !== f.order && (f.order = b, f.tags.reverse()), 
            this.config("type", a), this.type = a, this.config("order", b), this.order = b, 
            f) : null;
        },
        load: function() {
            var a = this;
            this.tagContainer.show();
            var b = pixiv.context.tags ? colon.async(JSON.parse(pixiv.context.tags)) : pixiv.api.bookmarkTag(pixiv.context.type, "level", "total");
            return b.always(function() {
                a.tagContainer.removeClass("loading-indicator");
            }).done(function(b) {
                a.data = b, a.initialize(), a.show();
            }).fail(function() {});
        },
        initialize: function() {
            var a, b, c = this.data, d = [];
            for (var e in c) d.push(e);
            d.sort(), this.tagsCount = {
                order: null,
                tags: null
            }, this.tagsName = {
                order: "asc",
                tags: d
            }, this.config = colon.storage.config("bookmark_tag"), a = this.config("type"), 
            a && (this.type = a), b = this.config("order"), b && (this.order = b);
        },
        toggle: function(a) {
            a === this.type ? this.order = "desc" === this.order ? "asc" : "desc" : this.type = a, 
            this.show();
        }
    };
}(this, document, jQuery), function(a, b, c) {
    "use strict";
    function d(a, b) {
        this.container = a, this.update(b);
    }
    function e(a) {
        for (var b = this.positionsTop, c = this.positionsLeft, d = b[0] || 0, e = 0, f = 0, g = b.length - 1; g >= 0; --g) {
            var h = b[g] || 0;
            d >= h && (d = h, e = c[g], f = g);
        }
        return this.positionsTop[f] = d + 30 + a, {
            top: d,
            left: e
        };
    }
    function f(a) {
        a && this.updateOption(a), this.positionsTop = new Array(this.columnCount);
        for (var b, c = this.container.childNodes, d = 0; b = c[d]; ++d) 1 === b.nodeType && this.addPosition(b);
        this.updateHeight();
    }
    function g(a) {
        for (var b, d = c.createDocumentFragment(), e = 0; b = a[e]; ++e) this.addPosition(b), 
        d.appendChild(b);
        this.updateHeight(), this.container.appendChild(d);
    }
    function h() {
        var a = Math.max.apply(Math, this.positionsTop);
        a && (this.container.style.height = a + "px");
    }
    function i(a) {
        for (var b = this.columnWidth = a.columnWidth || this.columnWidth, c = this.columnMargin = a.columnMargin || this.columnMargin, d = this.columnCount = Math.max(a.columnCount || this.columnCount, 1), e = [ 0 ], f = 1; d > f; ++f) e[f] = b * f + c * f;
        this.positionsLeft = e;
    }
    function j(a) {
        var b = a.style, c = $(a).dataset(), d = c.width ? Math.min(c.height / c.width * 320, 640) : $(a).height(), e = this.position(d);
        b.top = e.top + "px", b.left = e.left + "px";
    }
    a.Brickmaker = d, a.Brickmaker.prototype = {
        container: null,
        positionsTop: null,
        positionsLeft: null,
        columnCount: 1,
        columnWidth: 320,
        columnMargin: 40,
        position: e,
        update: f,
        add: g,
        updateHeight: h,
        updateOption: i,
        addPosition: j
    };
}(this, this, document), function(a, b, c) {
    "use strict";
    a.countStrlen = function(a, c, d) {
        if (!a || !c || !d) return !1;
        var e = b("#" + a).val().replace(/\r\n?/, "\n").length;
        e > d ? b("#" + c).html('<span class="error">' + e + "</span>") : b("#" + c).html(e);
    }, a.countTags = function(a, c, d) {
        if (!a || !c || !d) return !1;
        var e = b.trim(b("#" + a).val()), f = e.split(/\s+|　+/);
        if (!f) return !1;
        var g = f.length;
        b("#" + c).html(g > d ? '<span class="error">' + g + "</span>" : g);
    }, function(a) {
        function b(b) {
            return b.replace(d, function(b) {
                var c = pixiv.redirectURL(colon.html.unescape(b));
                return c = a(c), '<a href="' + c + '" target="_blank">' + b + "</a>";
            });
        }
        function c(b) {
            return b.replace(e, function(b, c, d) {
                var e = encodeURIComponent(colon.html.unescape(d));
                return e = a(e), c + '<a href="http://twitter.com/search?q=' + e + '" target="_blank">' + d + "</a>";
            });
        }
        pixiv.addURLLink = b, pixiv.addHashTagLink = c;
        var d = new RegExp("https?://[^/@\\s]+\\.([,.]?[-_!~*a-zA-Z0-9;/?:&=+$%#])+", "g"), e = /(^|[^a-zA-Z0-9])(#[a-zA-Z0-9_]*[a-zA-Z_]+[a-zA-Z0-9_]*)/g;
    }(colon.html.escape), pixiv.screen = {
        stash: [],
        setup: function() {
            b(a).click(function(a) {
                b(a.target).parents(".dialog").length || pixiv.screen.close();
            });
        },
        register: function(a) {
            "object" == typeof a && "function" == typeof a.close && pixiv.screen.stash.push(a);
        },
        unregister: function(a) {
            for (var b, c = pixiv.screen.stash, d = 0; b = c[d]; ++d) a === b && c.splice(d, 1);
        },
        close: function(a) {
            for (var b, c = pixiv.screen.stash, d = 0; b = c[d]; ++d) b !== a && b.close();
        }
    }, pixiv.applyTemplate = function() {
        var a = /#\{([^|}]+)(?:\|(.*?)\|)?\}/g;
        return function(b, c, d) {
            return b && c ? b.replace(a, function(a, b, e) {
                return b = c[b], b || "" === b || 0 === b || (b = e || ""), d === !1 ? b : colon.html.escape(b);
            }) : b;
        };
    }(), pixiv.dialog = {
        template: [ '<div id="dialog">', '<div class="background" onclick="pixiv.dialog.close()"></div>', '<div class="main">', '<div class="close" onclick="pixiv.dialog.close()"></div>', "#{content}", "</div>", "</div>" ].join(""),
        contents: {
            "mail-authentication": [ "<p>メール認証が必要です</p>", '<form method="post" action="/mail_authentication.php">', '<input type="submit" value="認証用メールを送る">', "</form>" ].join("")
        },
        setup: function() {
            pixiv.user.noAuthenticated && b(".dialog").click(function() {
                var a = pixiv.dialog, b = (/\s?dialog-(.+)\s?/.exec(this.className) || [])[1], c = a.contents[b] || pixiv.getTemplate(b);
                return c && a.open(c), !1;
            });
        },
        open: function(c) {
            if (!c) return null;
            var d = pixiv.dialog, e = b(pixiv.applyTemplate(d.template, {
                content: c
            }, !1)).appendTo("body").find(".main"), f = colon.w.scrollTop();
            return e.css("top", Math.max(f + 10, f + a.height() / 2 - e.outerHeight(!0) / 2));
        },
        close: function() {
            return b("#dialog").remove(), !1;
        }
    }, pixiv.tracking = {
        setup: function() {
            colon.d.on("click.tracking ", ".click-tracking", this.event).on("focusin.tracking", ".focus-tracking", this.event);
        },
        track: function(a) {
            try {
                _gaq.push(a);
            } catch (b) {}
        },
        event: function(a) {
            "object" === b.type(a) ? (a = b(this).dataset(), a.category && a.action && pixiv.tracking.track([ "_trackEvent", a.category, a.action, a.label, a.value ? +a.value : c ])) : (a = b.makeArray(arguments), 
            a.unshift("_trackEvent"), pixiv.tracking.track(a));
        },
        pageview: function() {
            var a = b.makeArray(arguments);
            a.unshift("_trackPageview"), pixiv.tracking.track(a);
        }
    }, pixiv.tracker = {
        categories: {},
        category: null,
        config: {},
        setup: function() {
            var a = this;
            colon.d.on("click submit", ".ae", function(c) {
                var d, e = b(this).dataset(), f = e.aeCategory || a.category;
                f && (d = [ f, e.aeAction + (pixiv.context.self ? "Self" : "") ], "submit" === c.type || "click" === c.type && "A" === this.tagName && "_blank" !== this.target ? a.add(d) : pixiv.tracking.event.apply(null, d));
            });
        },
        pageCategory: function() {
            var a, c, d, e, f = this.categories;
            for (a in f) {
                c = f[a], e = !0, "object" !== b.type(c) && (c = {
                    pathname: c
                });
                for (d in c) if (!c[d].test(location[d])) {
                    e = !1;
                    break;
                }
                if (e) return void (this.category = a);
            }
        },
        send: function() {
            var a = colon.storage.localStorage("refs");
            if (a) {
                for (var b, c = 0; b = a[c]; ++c) pixiv.tracking.event.apply(null, b);
                colon.storage.localStorage("refs", null);
            }
        },
        add: function(a) {
            var b = colon.storage.localStorage("refs") || [];
            b.push(a), colon.storage.localStorage("refs", b);
        },
        on: function(a) {
            var c, d, e, f, g, h = this, i = location.pathname + location.search;
            a || (a = this.config), g = function(a) {
                var c = a.data.option[2];
                "function" === b.type(c) && (c = c.apply(this, arguments)), "array" === b.type(c) && ("submit" === a.type || "change" === a.type || "click" === a.type && "A" === this.tagName && "_blank" !== this.target ? h.add(c) : pixiv.tracking.event.apply(null, c));
            };
            for (c in a) if (new RegExp(c).test(i)) for (e = "function" === b.type(a[c]) ? a[c]() : a[c], 
            d = 0; f = e[d]; ++d) colon.d.on(f[1] + ".tracker", f[0], {
                option: f
            }, g);
        },
        off: function() {
            colon.d.off(".tracker");
        }
    }, pixiv.EventTracker = {
        setup: function() {
            "/bookmark.php" === location.pathname && location.search.match(/type=user/) && b('.column-action-menu input[type="submit"]').click(function() {
                try {
                    _gaq.push([ "_trackEvent", "pixiv", "ModBookmarkUser", b(this).attr("name"), b(".list_box input:checked").length ]);
                } catch (a) {}
            }), "/mypixiv_all.php" === location.pathname && b('.column-action-menu input[type="submit"]').click(function() {
                try {
                    _gaq.push([ "_trackEvent", "pixiv", "ModMypixivUser", b(this).attr("name"), b(".list_box input:checked").length ]);
                } catch (a) {}
            });
        }
    }, colon.ns("pixiv.ui", {
        toggleState: function(a) {
            var c = b(a).hasClass("disabled");
            return c ? this.enable(a) : this.disable(a), c;
        },
        enable: function(a) {
            b(a).removeClass("disabled").find("input").each(function() {
                var a = b(this);
                a.closest(".disabled").length || a.prop("disabled", !1);
            });
        },
        disable: function(a) {
            b(a).addClass("disabled").find("input button").prop("disabled", !0);
        }
    });
}(this, jQuery), function(a, b, c) {
    "use strict";
    pixiv.embed = {
        url: "http://source.pixiv.net/source/",
        input: null,
        select: null,
        setup: function() {
            var a = pixiv.embed;
            pixiv.context.embedId && (a.input = c("#embed-input"), a.select = c("#embed-select").change(a.change).change());
        },
        focus: function(b) {
            a.setTimeout(function() {
                b.target.select();
            }, 0);
        },
        change: function(a) {
            var b, d, e, f, g, h, i, j = pixiv.embed, k = pixiv.context;
            e = c(this).val().split("|"), f = k.embedId, g = e[0], h = e[1], "v1" === g ? i = '<iframe src="http://embed.pixiv.net/code.php?id=' + f + '" width="380" height="168" style="background:transparent" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"></iframe>' : (b = colon.html.escape("http://www.pixiv.net/member_illust.php?mode=medium&illust_id=" + k.illustId), 
            d = colon.html.escape("http://www.pixiv.net/member.php?id=" + k.userId), i = [ '<script src="' + j.url + 'embed.js" data-id="' + f + '" data-size="' + g + '" data-border="' + h + '" charset="utf-8"></script>', "<noscript>", "<p>", '<a href="' + b + '" target="_blank">' + k.illustTitle + "</a> ", 'by <a href="' + d + '" target="_blank">' + k.userName + "</a> ", 'on <a href="http://www.pixiv.net/" target="_blank">pixiv</a>', "</p>", "</noscript>" ].join("")), 
            j.input.val(i), a.originalEvent && j.input[0].focus();
        },
        showSample: function() {
            c("#embed-sample").length || (c(p.template.get("embed-sample")).appendTo("body"), 
            c.getScript(pixiv.embed.url + "embed.js?20110525").done(function() {
                __pixiv__.embed();
            })), pixiv.ui.modal.open("#embed-sample", {
                block: !0
            });
        }
    };
}(this, document, jQuery), function(a, b, c) {
    "use strict";
    c.fn.findBy = function(a, b) {
        return this.closest(b).find(a);
    };
    var d = function() {}, e = function(a) {
        var b = this, e = function() {
            return b.apply(this, arguments);
        };
        return c.extend(e, this), d.prototype = this.prototype, e.prototype = new d(), c.extend(e.prototype, a), 
        e.prototype.constructor = e, e;
    }, f = function(a) {
        return function() {
            return a++;
        };
    }(0), g = function(a) {
        return a || (a = {}), function(b, c, d) {
            return a[b] || (a[b] = c.call(d)), a[b];
        };
    }, h = a.View = function(a) {
        this.container = a || this.container || "<div/>", this.compile("container"), this.container.length && (this.addEvent(), 
        this.parent && this.parent.register(this), this.loadOnce = g(), this.initialize && this.initialize.apply(this, arguments));
    };
    h.extend = e, h.template = function(a) {
        return Handlebars.compile(a);
    }, h.confirm = function(b, c) {
        var d = a.confirm(b), e = d && c && c();
        return e || d;
    };
    var i = {
        tab: function() {
            var a = function(a) {
                a.container = a.element.closest(".ui-tab-container");
            };
            return {
                events: [ [ "click", ".ui-tab", "select-tab", {
                    container: a
                } ] ],
                selectTab: function(a) {
                    var b = a.data.target, d = c.camelCase(b);
                    this[d] ? this[d](a) : c("." + b, a.container).show(), a.elements.not(a.element).removeClass("active"), 
                    a.element.addClass("active"), c(".ui-tab-content", a.container).not("." + b).hide();
                },
                clear: function(a) {
                    c(a).empty();
                }
            };
        }
    };
    h.prototype = {
        parent: null,
        container: "body",
        contents: null,
        stash: null,
        events: null,
        initialize: null,
        include: function() {
            for (var a = arguments.length ? [ c.makeArray(arguments) ] : this.mixins, b = 0, d = a.length; d > b; ++b) {
                var e = a[b], f = c.extend(!0, {}, i[e]);
                if (this[e] || (this[e] = {}), f.events) {
                    for (var g = 0, h = f.events.length; h > g; ++g) {
                        var j = c.extend(f.events[g][3], {
                            mixinContext: this[e]
                        });
                        this.addEvent(j);
                    }
                    delete f.events;
                }
                c.extend(this[e], f);
            }
        },
        register: function(a) {
            this.contents = this.contents ? this.contents.add(a) : c(a);
        },
        unregister: function(a) {
            this.contents && (this.contents = this.contents.not(a));
        },
        trigger: function(a, b) {
            return b ? c(b, this.container).trigger(a) : this.container.trigger(a);
        },
        compile: function() {
            for (var a, b = 0, d = arguments.length; d > b; ++b) a = arguments[b], a && (this[a] = c(this[a]));
        },
        addEvent: function() {
            function a(b, d) {
                return function(e) {
                    var f = c(this), g = f.dataset(f), h = pixiv.prefixFilter("text", g);
                    a.call(j, {
                        name: b,
                        element: f,
                        elements: j.find(d),
                        data: g,
                        text: h,
                        event: e
                    });
                };
            }
            var b, d, e, g, h, i, j = this, k = this.container, l = arguments.length ? [ c.makeArray(arguments) ] : this.events;
            if (l) {
                arguments.length && this.events.push(l[0]);
                for (var m = 0, n = l.length; n > m; ++m) b = l[m], d = b[0], e = b[1], g = b[2], 
                h = b[3], i = b[4], "function" === c.type(g) ? k.on(d + "." + f(), e, a(g, e)) : k.on(d + "." + g, e, this.handler(g, e, h)), 
                b[4] = !0;
            }
        },
        removeEvent: function(a) {
            return this.container.off("." + a);
        },
        handler: function(a, b, d) {
            var e = this, f = pixiv.camelize(a), g = 0 === a.indexOf("toggle-");
            d || (d = {});
            var i = function(b, c, d) {
                return e.template(a, b, c, d);
            }, j = function(b, c) {
                return e.storage(a, b, c);
            }, k = function(a) {
                var k = c(this);
                if (k.hasClass("ui-loading")) return !1;
                var l = k.dataset(), m = pixiv.prefixFilter("text", l), n = e.find(b), o = (e.handlers || {})[f], p = e[f], q = function(a) {
                    return h.confirm(m.confirm, a && c.proxy(a, e));
                };
                if (o ? p && g && (o = function() {
                    var a = e.handlers[f].apply(e, arguments);
                    return a && p.apply(e, arguments), a;
                }) : o = p, o) {
                    if (o = o.call(e, {
                        element: k,
                        elements: n,
                        data: l,
                        text: m,
                        template: i,
                        storage: j,
                        confirm: q,
                        event: a
                    }), "boolean" === c.type(o)) return o;
                    o && (k.addClass("ui-loading"), c.when(o).always(function() {
                        k.removeClass("ui-loading");
                    }).done(function() {
                        var b = c.makeArray(arguments), d = k.dataset(), f = pixiv.prefixFilter("text", d);
                        b.unshift({
                            element: k,
                            elements: n,
                            data: d,
                            text: f,
                            template: i,
                            storage: j,
                            confirm: q,
                            event: a
                        }), g || p && p.apply(e, b);
                    }).fail(function() {
                        if (g) {
                            var b = k.dataset(), c = pixiv.prefixFilter("text", b);
                            p.call(e, {
                                element: k,
                                elements: n,
                                data: b,
                                text: c,
                                template: i,
                                storage: j,
                                confirm: q,
                                event: a
                            });
                        }
                    }));
                }
                return d.cancel === !1;
            };
            return d.debounce ? colon.debounce(k, null, "number" === c.type(d.debounce) ? d.debounce : void 0) : k;
        },
        storage: function(a, b, c) {
            if (a) {
                if (this.stash || (this.stash = {}), this.stash[a] || (this.stash[a] = {}), !b) return this.stash[a];
                switch (c) {
                  case null:
                    delete this.stash[a][b];
                    break;

                  case void 0:
                    return this.stash[a][b] || (this.stash[a][b] = {}), this.stash[a][b];

                  default:
                    return this.stash[a][b] = c, c;
                }
            }
        },
        template: function(a, b, d, e) {
            var f, g = this.templates[a], i = "";
            return g && "string" !== c.type(g) || (i = g || c("#template-" + a).html() || "", 
            e && e.pre || (i = i.replace(/[\n\r]+/g, "")), this.templates[a] = g = h.template(i)), 
            f = g(b), d ? d.html(f) : f;
        },
        find: function(a) {
            return c(a, this.container);
        },
        remove: function(a) {
            return (a ? this.find(a) : this.container).remove();
        }
    };
}(this, this.document, this.jQuery || this.Zepto), function(a, b, c) {
    "use strict";
    var d = a.pixiv;
    d.group = {
        setup: function() {
            new d.group.Header(), new d.group.Timeline(), new d.group.Edit(), new d.group.GroupList(), 
            new d.group.MemberList(), new d.group.ImageList(), new d.group.Invite(), d.ui.painter.setup();
        }
    }, d.group.Header = a.View.extend({
        container: "#contents header",
        width: 782,
        height: null,
        events: [ [ "click", ".action-leave-group", "leave-group" ], [ "click", ".action-select-cover", "select-cover" ], [ "change", ".input-cover", "submit-cover" ], [ "click", ".action-reposition-cover", "reposition-cover" ], [ "click", ".action-apply-reposition", "apply-reposition" ], [ "click", ".action-cancel-reposition", "cancel-reposition" ] ],
        handlers: {
            applyReposition: function() {
                var b = this, e = this.find(".cover"), f = e.css("background-position"), g = parseInt(f.split(" ")[1], 10);
                return "%" !== f.slice(-1) && (g = g / (160 - this.height) * 100, e.css("background-position", "0 " + g + "%")), 
                e.off("mousedown").removeClass("dragging"), d.body.addClass("unselectable"), d.api.post("/group/edit.php", {
                    mode: "slide_cover",
                    position_y: g,
                    format: "json",
                    group_id: d.context.groupId
                }).fail(function(d, e, f) {
                    var g = c.parseJSON(d.responseText);
                    a.alert(g && g.error + (g.hint ? "\n\n" + g.hint : "") || e + ": " + (f || "error")), 
                    b.trigger("click.reposition-cover", ".action-reposition-cover");
                });
            }
        },
        leaveGroup: function(a) {
            return a.confirm(function() {
                c("#leave-group").submit();
            });
        },
        selectCover: function(a) {
            return colon.ua.ie ? void (location.href = "/group/edit.php?mode=cover&id=" + d.context.groupId) : void a.element.findBy('input[type="file"]', "form").val("").click();
        },
        submitCover: function() {
            this.find("form").submit();
        },
        repositionCover: function(a) {
            var b, c, e = this, f = a.element.closest(".cover");
            return this.height ? void this.addRepositionEvent(a, f) : (b = d.context.coverImage, 
            void (b && (c = new Image(), c.onload = function() {
                e.height = e.width * c.height / c.width, e.addRepositionEvent(a, f);
            }, c.src = b)));
        },
        addRepositionEvent: function(a, b) {
            var c = this, e = !1;
            b.addClass("dragging").find(".menu").addClass("hidden"), this.find(".edit-cover").show(), 
            this.storage("cover", "background-position", b.css("background-position")), b.on("mousedown", function(a) {
                var f = parseFloat(b.css("background-position").split(" ")[1]), g = a.clientY, h = c.height;
                e || (f = (160 - h) * (f / 100), e = !0), d.body.addClass("unselectable"), colon.d.on("mousemove", function(a) {
                    var c = f + (a.clientY - g), d = h > 160 ? Math.min(0, Math.max(c, 160 - h)) : Math.max(0, Math.min(c, 160 - h));
                    b.css("background-position", "0 " + d + "px");
                }).on("mouseup", function() {
                    colon.d.off("mousemove mouseup"), d.body.removeClass("unselectable");
                });
            });
        },
        applyReposition: function() {
            this.find(".cover .menu").removeClass("hidden"), this.find(".edit-cover").hide();
        },
        cancelReposition: function() {
            this.find(".cover").off("mousedown").removeClass("dragging").css("background-position", this.storage("cover", "background-position")).find(".menu").removeClass("hidden"), 
            this.find(".edit-cover").hide();
        }
    }), d.group.Invite = a.View.extend({
        container: "#contents div.invite",
        events: [ [ "click", ".action-enable-invite", "enable-invite" ], [ "click", ".toggle-action", "toggle" ] ],
        handlers: {
            enableInvite: function() {
                return d.api.post("/group/edit.php", {
                    group_id: d.context.groupId,
                    mode: "reset_invite_key",
                    format: "json"
                });
            }
        },
        templates: {
            "enable-invite": null
        },
        enableInvite: function(a, b) {
            a.template(b, this.container), this.removeEvent("enable-invite");
        },
        toggle: function() {
            this.find(".action-box").toggle();
        }
    }), d.group.Timeline = a.View.extend({
        container: "#timeline",
        listContainer: null,
        config: null,
        initialize: function() {
            this.listContainer = this.find("> ul"), this.config = colon.storage.config("group"), 
            this.config("no_hint") || this.addEvent("click", ".hint .close", "close-hint");
        },
        mixins: [ "tab" ],
        events: [ [ "click", ".imgadd", "toggle-add-image" ], [ "click", ".imgpaint", "toggle-paint" ], [ "focus", ".inputbox textarea", "focus-form" ], [ "keydown", "textarea", "work-detail", {
            debounce: 500
        } ], [ "submit", "form.action-post", "post" ], [ "submit", "form.action-comment", "comment" ], [ "click", "#more a", "more" ], [ "click", ".action-like", "toggle-like" ], [ "click", ".action-reply", "reply" ], [ "click", ".action-cancel-reply", "cancel-reply" ], [ "click", ".action-likes", "likes", {
            cancel: !1
        } ], [ "click", ".action-remove", "toggle-remove" ], [ "click", ".comment a.more", "more-comment" ], [ "click", ".action-add-comment", "show-comment-panel" ], [ "click", ".action-report-spam", "report-spam" ], [ "click", ".toggle-context-menu", "toggle-context-menu" ], [ "click", ".action-open-image", "open-image" ] ],
        templates: {
            "toggle-like": null,
            likes: null,
            post: null,
            "open-image": null,
            "work-detail": null
        },
        handlers: {
            post: function(b) {
                var e = b.element[0];
                return e.image.value ? !0 : d.api.post("/group/comment.php", {
                    group_id: d.context.groupId,
                    format: "partial_html",
                    mode: "post",
                    body: d.ui.Tag.trim(e.body.value),
                    paint: c(".imgpaint.active", b.element).length ? e.paint.value : void 0
                }).fail(function(b, d, e) {
                    var f = c.parseJSON(b.responseText);
                    a.alert(f && f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                });
            },
            comment: function(b) {
                var e = b.element[0];
                return e.image.value ? !0 : d.api.post("/group/comment.php", {
                    group_id: d.context.groupId,
                    format: "partial_html",
                    mode: "post_child",
                    parent_id: e.parent_id.value,
                    reply_id: !e.reply_id.disabled && e.reply_id.value || void 0,
                    body: d.ui.Tag.trim(e.body.value),
                    paint: c(".imgpaint.active", b.element).length ? e.paint.value : void 0
                }).fail(function(b, d, e) {
                    var f = c.parseJSON(b.responseText);
                    a.alert(f && f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                });
            },
            more: function(a) {
                return d.api.get("/group/?format=partial_html", a.data);
            },
            toggleLike: function(a) {
                return d.api.post("/group/comment.php?format=json", a.data);
            },
            reply: function(a) {
                var b = a.element.closest("li.post"), d = a.element.findBy(".user", ".meta").text();
                this.trigger("click", c(".action-add-comment", b)), c('input[name="reply_id"]', b).val(a.data.reply_id).prop("disabled", !1), 
                c(".reply-to", b).removeClass("hidden").find(".user").text(d);
            },
            cancelReply: function(a) {
                a.element.closest(".reply-to").addClass("hidden"), a.element.findBy('input[name="reply_id"]', "li.post").prop("disabled", !0);
            },
            likes: function(a) {
                return d.api.get("/group/rpc/like_users.php", {
                    type: a.data.type,
                    comment_id: a.data.comment_id,
                    format: "json"
                }, {
                    cache: a.storage("cache")
                });
            },
            toggleRemove: function(b) {
                return a.confirm(b.text.confirm) && d.api.post("/group/comment.php?format=json", b.data).done(function() {
                    colon.dispatcher.connect("/group/comment.php", function() {
                        location.href = "/group/?id=" + d.context.groupId;
                    }).dispatch();
                });
            },
            moreComment: function(a) {
                return d.api.get("/group/comment.php?format=partial_html", a.data);
            },
            reportSpam: function(b) {
                return b.confirm(function() {
                    return d.api.post("/group/comment.php?format=json", b.data).fail(function(b, d, e) {
                        var f = c.parseJSON(b.responseText);
                        a.alert(f && f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                    });
                });
            }
        },
        toggleAddImage: function(a) {
            var b = a.element, c = b.siblings().removeClass("active");
            b.closest("form").find(".paintcontainer").hide().find("input").prop("disabled", !0);
            var d = b.toggleClass("active").findBy(".filecontainer", "form").toggle().find("input");
            d.prop("disabled", !d.prop("disabled"));
            var e = a.element.findBy(".work-detail-container", "form");
            c.addBack().filter(".active").length ? e.slideUp("fast") : e.show();
        },
        togglePaint: function(a) {
            var b, e = a.element, f = e.siblings().removeClass("active");
            if (e.closest("form").find(".filecontainer").hide().find("input").prop("disabled", !0), 
            !e.hasClass("active") && (b = c(".drawr-paint", e.closest("form")), !b.hasClass("parsed"))) {
                var g = d.ui.painter.painterList;
                b.dataset("paintid", g.length), g.push(new d.ui.DrawrPainter(b));
            }
            var h = e.toggleClass("active").closest("form").find(".paintcontainer").toggle().find("input");
            h.prop("disabled", !h.prop("disabled"));
            var i = a.element.findBy(".work-detail-container", "form");
            f.addBack().filter(".active").length ? i.slideUp("fast") : i.show();
        },
        focusForm: function(a) {
            var b = this, e = a.element.closest("form");
            if (!e.hasClass("focus")) {
                this.find("form.focus").each(function() {
                    b.unfocusForm({
                        element: c(this)
                    });
                }), e.addClass("focus").find(".attachmentbar").show().closest("li.post div.inputbox").find("img.usericon, div.controller").show();
                var f = e.find(".recently-viewed");
                if (!f.children().length && window.localStorage && window.JSON) {
                    var g;
                    try {
                        g = JSON.parse(localStorage["recently_viewed" + d.user.id]), g.length || (g = []);
                    } catch (h) {
                        g = [];
                    }
                    var i = Date.now ? Date.now() : +new Date();
                    c.each(g.slice(-8).reverse(), function(b, d) {
                        i - d.time > 72e5 || c('<div class="recently-viewed-item"></div>').append(c(new Image()).attr("src", d.img)).appendTo(f).on("click", function() {
                            var b = null;
                            "illust" === d.type ? b = "http://www.pixiv.net/member_illust.php?mode=medium&illust_id=" + d.id : "novel" === d.type && (b = "http://www.pixiv.net/novel/show.php?id=" + d.id), 
                            b && (a.element.val(b + " " + a.element.val()), a.element.focus().trigger("keydown"));
                        });
                    }), 0 === f.children().length && (e.find(".recently-viewed-header").hide(), e.find(".recently-viewed").hide());
                }
            }
        },
        unfocusForm: function(a) {
            a.element.removeClass("focus").find(".attachmentbar").hide().closest("li.post div.inputbox").find("img.usericon, div.controller").hide();
        },
        workDetailLoading: !1,
        workDetail: function(a) {
            var b = this, c = (d.searchURL(a.element.val()) || [])[0], e = a.element.findBy(".work-detail-container", "form"), f = this.workDetailLoading;
            return c ? void (f || (this.workDetailLoading = !0, d.api.fetch(c).always(function(c, d) {
                b.workDetailLoading = !1, e.find(".work-detail").remove(), "success" !== d && "cache" !== d || "pixiv_illust" !== c.urlType && "pixiv_novel" !== c.urlType || (c.detail.url = c.detail.url, 
                e.append(a.template(c.detail)));
            }))) : void e.find(".work-detail").remove();
        },
        post: function(a, b) {
            if (d.context.max) return location.href = "/group/?id=" + d.context.groupId, !1;
            var e = c(b.html);
            this.listContainer.prepend(e), colon.ui.expander.add(e), c("#post-body").val(""), 
            a.element.find(".imgpaint.active").removeClass("active").end().find(".paintcontainer").hide().find("input").prop("disabled", !0), 
            c(".work-detail-container", a.element).empty().show();
            var f = c(".drawr-paint", a.element).dataset("paintid");
            return d.ui.painter.painterList[f] && d.ui.painter.painterList[f].clearCanvas(), 
            !1;
        },
        comment: function(a, b) {
            var e = c("#post-" + a.element[0].parent_id.value), f = c(b.html), g = c("> .comment", e);
            g.length || (g = c('<div class="comment"/>').insertBefore(c(".inputbox", e))), g.append(f), 
            colon.ui.expander.add(f), c("textarea", a.element).val(""), a.element.find(".imgpaint.active").removeClass("active").end().find(".paintcontainer").hide(), 
            c(".work-detail-container", a.element).empty().show();
            var h = c(".drawr-paint", a.element).dataset("paintid");
            d.ui.painter.painterList[h] && d.ui.painter.painterList[h].clearCanvas();
        },
        more: function(b, e) {
            var f = c(e.html), g = "/group/?id=" + b.data.id + "&max=" + b.data.max;
            this.listContainer.append(f), colon.ui.expander.add(f), null !== e.max ? (b.element.dataset("max", e.max), 
            a.history.replaceState && a.history.replaceState(null, b.data.max, g)) : (b.element.remove(), 
            this.removeEvent("more")), d.tracking.pageview("group", "more", g);
        },
        toggleLike: function(a) {
            var b = a.data.mode;
            if (b) {
                var c = a.element.parent(), e = +c.dataset("total") || 0, f = {
                    liked: 0 === b.indexOf("add"),
                    comment_id: a.data.comment_id,
                    suffix: (/_child$/.exec(b) || [ "" ])[0]
                };
                f.type = f.suffix ? "comment" : "post", f.total = f.liked ? e + 1 : e - 1, a.template(f, c), 
                c.dataset("total", f.total);
                var g = c.closest("li.post").getId(), h = "post" === f.type ? "" : "#comment-" + f.comment_id, i = "/group/comment.php?id=" + g + h;
                d.tracking.event("group", f.liked ? "like" : "unlike", i);
            }
        },
        likes: function(a, b) {
            if (b.likeUsers.length) {
                var e = a.element, f = c(a.template({
                    users: b.likeUsers
                })).appendTo(e);
                d.ui.modal.open(f, {
                    disposable: !0
                }), f.width(24 * Math.min(b.likeUsers.length, 5)).css("left", 6 - f.outerWidth() / 2), 
                d.tracking.event("group", "openLikes");
            }
        },
        toggleRemove: function(a) {
            -1 === a.data.mode.indexOf("_child") ? c("#post-" + a.data.comment_id).slideToggle() : c("#comment-" + a.data.comment_id).slideToggle();
        },
        moreComment: function(a, b) {
            var d = a.element, e = c(b.html).insertAfter(d);
            colon.ui.expander.add(e), null !== b.max_id ? d.dataset("max_id", b.max_id) : d.remove();
        },
        showCommentPanel: function(a) {
            var b = a.element.closest("li.post").find(".inputbox").show(), e = c("textarea", b).focus();
            d.ui.scroll(Math.max(b.offset().top, colon.w.scrollTop()) - 100, "normal").done(function() {
                e[0].focus();
            });
        },
        reportSpam: function(a) {
            a.element.siblings().length > 1 ? a.element.remove() : a.element.closest(".action").remove();
        },
        toggleContextMenu: function(a) {
            a.element.closest(".action").find(".action-box").toggle();
        },
        openImage: function(a) {
            var b = c("#image-modal"), e = c(".content", b).empty();
            d.ui.modal.open(b, {
                block: !0
            });
            var f = new Image();
            f.onload = function() {
                var d = !!a.data.title;
                c(".ui-modal", b).animate({
                    width: d ? Math.max(f.width, 200) : f.width,
                    height: d ? Math.max(f.height, 150) : f.height
                }, 300, function() {
                    a.data.original = a.data.src.replace(/_m\.(jpg|png|gif)$/, ".$1"), e.html(a.template(a.data));
                });
            }, f.src = a.data.src;
            var g = a.element.closest("li.post").getId(), h = a.element.closest("div.post"), i = h.length ? "#" + h[0].id : "";
            d.tracking.event("group", "openImage", "/group/comment.php?id=" + g + i);
        },
        closeHint: function(a) {
            var b = this.find(".hint");
            a.element.closest(".hint").slideUp("fast", function() {
                b.remove();
            }), this.config("no_hint", 1);
        }
    }), d.group.Edit = a.View.extend({
        container: "#page-group-edit #contents",
        initialize: function() {
            new d.ui.Tag(this.find(".ui-tag")), new d.ui.Counter(this.find(".ui-count-target"), this.find(".ui-count-counter"));
        },
        events: [ [ "click", ".action-delete-icon", "delete-icon" ], [ "click", 'input[name="publish_status"]', "toggle-accept-checkbox", {
            cancel: !1
        } ], [ "click", 'input[name="age_limit"]', "toggle-warning", {
            cancel: !1
        } ] ],
        handlers: {
            deleteIcon: function(a) {
                return confirm(a.text.confirm) && d.api.post("/group/edit.php", c.extend({
                    mode: "delete_icon",
                    format: "json"
                }, a.data));
            }
        },
        deleteIcon: function(a) {
            var b = a.element.closest("dd").find("img");
            b.attr("src", b.dataset("noIcon")), a.element.remove();
        },
        toggleAcceptCheckbox: function(a) {
            var b = a.element.findBy(".notes:last", "dd");
            a.elements.last().prop("checked") ? (this.find(".accept-status").addClass("ui-disabled"), 
            this.find('input[name="accept_status"]').prop({
                checked: !1,
                disabled: !0
            }), b.addClass("warning")) : (this.find(".accept-status").removeClass("ui-disabled"), 
            this.find('input[name="accept_status"]').prop("disabled", !1), b.removeClass("warning"));
        },
        toggleWarning: function(a) {
            a.element.findBy(".notes", "dd").toggleClass("warning");
        }
    }), d.group.GroupList = a.View.extend({
        container: "#group-list",
        listContainer: null,
        initialize: function() {
            this.listContainer = this.find(".group-items");
        },
        events: [ [ "click", "._more a", "more" ] ],
        handlers: {
            more: function(a) {
                return d.api.get("/group/group_list.php?format=partial_html", a.data);
            }
        },
        more: function(a, b) {
            this.listContainer.append(b.html), null !== b.max_id ? (a.element.dataset("max_id", b.max_id), 
            d.tracking.pageview("group", "group_list", "more")) : (a.element.remove(), this.removeEvent("more"));
        }
    }), d.group.ImageList = a.View.extend({
        container: "#page-group #images",
        listContainer: null,
        initialize: function() {
            this.listContainer = this.find("> ul");
        },
        events: [ [ "click", ".more a", "more" ] ],
        handlers: {
            more: function(a) {
                return d.api.get("/group/images.php?format=partial_html", a.data);
            }
        },
        more: function(a, b) {
            this.listContainer.append(b.html), null !== b.max_id ? (a.element.dataset("max_id", b.max_id), 
            d.tracking.pageview("group", "images", "more")) : (a.element.remove(), this.removeEvent("more"));
        }
    }), d.group.MemberList = a.View.extend({
        container: "#page-group .members",
        listContainer: null,
        initialize: function() {
            this.listContainer = this.find("> ul");
        },
        events: [ [ "click", ".action-remove", "toggle-remove" ], [ "click", ".action-toggle-permission", "toggle-permission" ], [ "click", ".more a", "more" ] ],
        handlers: {
            toggleRemove: function(a) {
                return confirm(a.text.confirm) && d.api.post("/group/members.php", c.extend({
                    group_id: d.context.groupId,
                    format: "json",
                    mode: "unjoin"
                }, a.data));
            },
            togglePermission: function(b) {
                var e = b.data.user_id === d.user.id;
                return (e ? a.confirm(b.text.confirmSelf) : !0) && d.api.post("/group/members.php", c.extend({
                    group_id: d.context.groupId,
                    format: "json",
                    mode: "change_permission"
                }, b.data)).done(function() {
                    e && location.reload();
                }).fail(function(b, d, e) {
                    var f = c.parseJSON(b.responseText);
                    a.alert(f && f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                });
            },
            more: function(a) {
                return d.api.get("/group/members.php?format=partial_html", a.data);
            }
        },
        toggleRemove: function(a) {
            a.element.closest("li").toggle();
        },
        togglePermission: function(a) {
            var b = {};
            a.data.permission === d.context.GROUP_USER_PERMISSION_MEMBER ? (b.text = a.text.toAdmin, 
            b.permission = d.context.GROUP_USER_PERMISSION_ADMIN) : (b.text = a.text.toMember, 
            b.permission = d.context.GROUP_USER_PERMISSION_MEMBER), a.element.val(b.text).dataset("permission", b.permission);
        },
        more: function(a, b) {
            this.listContainer.append(b.html), null !== b.max_id ? (a.element.dataset("max_id", b.max_id), 
            d.tracking.pageview("group", "members", "more")) : (a.element.remove(), this.removeEvent("more"));
        }
    }), d.Document = a.View.extend({
        cache: {},
        events: [ [ "click", ".action-show-create-group-modal", "show-create-group-modal" ], [ "click", ".action-show-join-group-modal", "show-join-group-modal" ], [ "click", ".open-add-pickup-modal", "open-add-pickup-modal" ], [ "click", ".open-edit-pickup-modal", "open-edit-pickup-modal" ], [ "focus", ".ui-auto-select", "auto-select" ], [ "click", ".ui-selectbox li", "selectbox-select", {
            cancel: !1
        } ] ],
        showCreateGroupModal: function() {
            var a = this;
            d.api.get("/group/create.php", {
                format: "partial_html"
            }, {
                cache: this.cache
            }).done(function(b) {
                a.loadOnce("create-group-modal", function() {
                    d.body.append(d.createTemplate("create-group")(b)), new d.group.Create();
                }), d.ui.modal.open(".create-group-modal", {
                    block: !0
                }), c('.create-group-modal input[type="text"]').focus(), d.tracking.event("group", "showCreateGroupModal", location.href);
            });
        },
        showJoinGroupModal: function() {
            var a = this;
            d.api.get("/group/", {
                id: d.context.groupId,
                section: "join_rule",
                format: "partial_html"
            }, {
                cache: this.cache
            }).done(function(b) {
                a.loadOnce("join-group-modal", function() {
                    d.body.append(d.createTemplate("join-group")(b)), d.ui.modal.open(".join-group-modal", {
                        block: !0
                    });
                }), c('.join-group-modal input[type="checkbox"]').focus(), c(".join-group-modal .terms-check").on("change", function(a) {
                    c('.join-group-modal input[type="submit"]').prop("disabled", !a.target.checked);
                });
            });
        },
        openAddPickupModal: function(a) {
            d.api.get("/group/comment.php", {
                format: "json",
                mode: "show_pickup_post",
                group_id: d.context.groupId,
                comment_id: a.data.commentId
            }).done(function(b) {
                for (var e, f, g = "object" === c.type(b.group.pickupPosts) ? b.group.pickupPosts.detail.posts : [], h = a.data.commentId, i = 0; f = g[i]; ++i) if (f.id === h) {
                    e = f.title, g.splice(i, 1);
                    break;
                }
                c.extend(b, {
                    full: g.length >= 10,
                    id: h,
                    title: e
                });
                var j = c(p.template.apply("add-pickup-modal", b)).appendTo(d.body);
                new d.group.PickupPost(j, b), d.ui.modal.open(j, {
                    block: !0,
                    disposable: !0
                }).find(".ui-focus").focus(), c('input[type="text"]', j).focus();
            });
        },
        openEditPickupModal: function() {
            d.api.get("/group/comment.php", {
                format: "json",
                mode: "show_pickup_post",
                group_id: d.context.groupId
            }).done(function(a) {
                var b = c(p.template.apply("edit-pickup-modal", a)).appendTo(d.body);
                new d.group.PickupPost(b, a), d.ui.modal.open(b, {
                    block: !0,
                    disposable: !0
                });
            });
        },
        autoSelect: function(a) {
            setTimeout(function() {
                a.element.select();
            });
        },
        selectboxSelect: function(a) {
            a.element.findBy("> span", ".ui-selectbox").text(a.element.text());
        }
    }), d.group.Create = a.View.extend({
        container: ".create-group-container",
        initialize: function() {
            new d.ui.Counter(this.find(".ui-count-target"), this.find(".ui-count-counter"));
        },
        events: [ [ "submit", ".action-create-group", "create-group" ], [ "click", 'input[name="publish_status"]', "toggle-accept-checkbox", {
            cancel: !1
        } ], [ "click", 'input[name="age_limit"]', "toggle-warning", {
            cancel: !1
        } ] ],
        handlers: {
            createGroup: function(b) {
                if (!b.element[0].title.value) return alert("グループ名を入力してください"), !1;
                var e = b.element.serializeArray();
                return e.push({
                    name: "format",
                    value: "json"
                }), d.api.post("/group/create.php", e).fail(function(b, d, e) {
                    try {
                        var f = c.parseJSON(b.responseText);
                        if (f.error) return void a.alert(f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                        var g = f.inputGroup.error, h = [];
                        for (var i in g) h.push(g[i]);
                        a.alert(h.join("\n"));
                    } catch (j) {
                        a.alert("エラーが発生しました");
                    }
                });
            }
        },
        createGroup: function(a, b) {
            location.href = "/group/?id=" + b.group_id, d.ui.modal.close();
        },
        toggleAcceptCheckbox: function(a) {
            var b = a.element.findBy(".notes:last", "dd");
            a.elements.last().prop("checked") ? (this.find(".accept-status").addClass("ui-disabled"), 
            this.find('input[name="accept_status"]').prop({
                checked: !1,
                disabled: !0
            }), b.addClass("warning")) : (this.find(".accept-status").removeClass("ui-disabled"), 
            this.find('input[name="accept_status"]').prop("disabled", !1), b.removeClass("warning"));
        },
        toggleWarning: function(a) {
            a.element.findBy(".notes", "dd").toggleClass("warning");
        }
    });
    var e = p.script("//ajax.googleapis.com/ajax/libs/jqueryui/1.10.3/jquery-ui.min.js");
    d.group.PickupPost = a.View.extend({
        data: null,
        changed: !1,
        initialize: function(a, b) {
            var d, f = this;
            this.container = c(a), this.data = b, d = "object" === c.type(b.group.pickupPosts) ? b.group.pickupPosts.detail.posts : [], 
            d.length > 1 && e.load().done(function(d, e) {
                if ("forward" !== e) {
                    var g = c(".handle", a);
                    if (g.length) {
                        var h, i = "object" === c.type(b.group.pickupPosts) ? b.group.pickupPosts.detail.posts : [];
                        g.show(), c(".items", a).sortable({
                            axis: "y",
                            handle: g,
                            start: function(a, b) {
                                h = c(".item", this).index(b.item);
                            },
                            update: function(a, b) {
                                var d = c(".item", this).index(b.item), e = i.splice(h, 1)[0];
                                i.splice(d, 0, e), f.changed = !0;
                            }
                        });
                    }
                }
            });
        },
        events: [ [ "submit", ".add", "add" ], [ "submit", ".apply", "apply" ], [ "change", ".item-title", "rename" ], [ "click", ".remove", "remove" ], [ "click", ".cancel", "cancel" ] ],
        handlers: {
            add: function(b) {
                for (var e, f = "object" === c.type(this.data.group.pickupPosts) ? this.data.group.pickupPosts.detail.posts : [], g = [], h = 0; e = f[h]; ++h) e.id !== this.data.id && g.push({
                    name: "posts[" + h + "][id]",
                    value: e.id
                }, {
                    name: "posts[" + h + "][title]",
                    value: e.title
                });
                return g.push({
                    name: "posts[" + h + "][id]",
                    value: this.data.id
                }, {
                    name: "posts[" + h + "][title]",
                    value: c(".input-title", b.element).val()
                }, {
                    name: "mode",
                    value: "set_pickup_post"
                }, {
                    name: "group_id",
                    value: this.data.group.id
                }, {
                    name: "update_time",
                    value: f.length ? this.data.group.pickupPosts.update_time_unix : ""
                }), d.api.post("/group/comment.php", g).done(function() {
                    location.reload();
                }).fail(function(b, d, e) {
                    try {
                        var f = c.parseJSON(b.responseText);
                        if (f.error) return void a.alert(f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                        var g = f.inputs.error, h = [];
                        for (var i in g) h.push(g[i]);
                        a.alert(h.join("\n"));
                    } catch (j) {
                        a.alert("エラーが発生しました");
                    }
                });
            },
            apply: function() {
                for (var b, e = "object" === c.type(this.data.group.pickupPosts) ? this.data.group.pickupPosts.detail.posts : [], f = [], g = 0; b = e[g]; ++g) f.push({
                    name: "posts[" + g + "][id]",
                    value: b.id
                }, {
                    name: "posts[" + g + "][title]",
                    value: b.title
                });
                return f.push({
                    name: "mode",
                    value: "set_pickup_post"
                }, {
                    name: "group_id",
                    value: this.data.group.id
                }, {
                    name: "update_time",
                    value: e.length ? this.data.group.pickupPosts.update_time_unix : ""
                }), d.api.post("/group/comment.php", f).done(function() {
                    location.reload();
                }).fail(function(b, d, e) {
                    try {
                        var f = c.parseJSON(b.responseText);
                        if (f.error) return void a.alert(f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                        var g = f.inputs.error, h = [];
                        for (var i in g) h.push(g[i]);
                        a.alert(h.join("\n"));
                    } catch (j) {
                        a.alert("エラーが発生しました");
                    }
                });
            },
            pickupPost: function(b) {
                var e = b.element.serializeArray();
                return e.push({
                    name: "format",
                    value: "partial_html"
                }), d.api.post("/group/comment.php", e).done(function() {
                    location.reload();
                }).fail(function(b, d, e) {
                    try {
                        var f = c.parseJSON(b.responseText);
                        if (f.error) return void a.alert(f.error + (f.hint ? "\n\n" + f.hint : "") || d + ": " + (e || "error"));
                        var g = f.inputs.error, h = [];
                        for (var i in g) h.push(g[i]);
                        a.alert(h.join("\n"));
                    } catch (j) {
                        a.alert("エラーが発生しました");
                    }
                });
            }
        },
        openRenameModal: function(a) {
            var b = this;
            c.extend(a.data, {
                rename: !0
            });
            var e = c(p.template.apply("add-pickup-modal", a.data)).appendTo(d.body).on("submit", ".add", function() {
                for (var f, g = "object" === c.type(b.data.group.pickupPosts) ? b.data.group.pickupPosts.detail.posts : [], h = 0; f = g[h]; ++h) if (f.id === a.data.id) {
                    f.title = c(".input-title", e).val(), a.element.findBy(".item-title", ".item").text(f.title);
                    break;
                }
                return d.ui.modal.close(), !1;
            });
            d.ui.modal.open(e, {
                block: !0,
                disposable: !0
            }).find(".ui-focus").focus();
        },
        index: function(a, b) {
            for (var c, d = -1, e = 0; c = b[e]; ++e) if (a === c.id) {
                d = e;
                break;
            }
            return d;
        },
        remove: function(a) {
            c(a.element).closest(".item").slideUp("fast");
            var b = this.data.group.pickupPosts.detail.posts, d = this.index(a.data.id, b);
            d > -1 && b.splice(d, 1), b.length < 10 && c(".submit", this.container).prop("disabled", !1), 
            this.changed = !0;
        },
        rename: function(a) {
            var b = a.element.val();
            if (d.ui.Tag.trim(b)) {
                var c = this.data.group.pickupPosts.detail.posts, e = this.index(a.data.id, c);
                c[e].title = b, this.changed = !0;
            }
        },
        cancel: function() {
            this.changed ? a.confirm(d.text.cancelConfirm) && d.ui.modal.close() : d.ui.modal.close();
        }
    });
}(this, document, jQuery), function(window, $) {
    window.ef1 = function() {
        $("#tag_area").slideUp("fast", window.ef2);
    }, window.ef2 = function() {
        $("#tag_edit").slideDown("fast");
    }, window.ef3 = function() {
        $("#tag_edit").slideUp("fast", window.ef4);
    }, window.ef4 = function() {
        $("#tag_area").slideDown("fast");
    }, window.ef5 = function() {
        $("#tag_history").slideDown("fast");
    }, window.ef6 = function() {
        $("#tag_history").slideUp("fast");
    }, pixiv.comments = {
        setup: function() {
            $(".comment-show-button").on("click", function() {
                var a = $(this).closest(".comment-area");
                pixiv.api.post("rpc_comment_history.php", {
                    i_id: pixiv.context.illustId,
                    u_id: pixiv.context.userId
                }, {
                    ajaxSettings: {
                        dataType: "json"
                    }
                }).done(function(b) {
                    b.error || (a.addClass("comment-open"), b.data.html_array && (b.data.html_array.length ? a.find(".comment-list").append(b.data.html_array.join("")) : a.addClass("comment-none")), 
                    b.data.more ? a.addClass("comment-more") : a.removeClass("comment-more"));
                });
            });
            var a = 1;
            $(".comment-more-button").on("click", function() {
                var b = $(this).closest(".comment-area");
                pixiv.api.post("rpc_comment_history.php", {
                    i_id: pixiv.context.illustId,
                    u_id: pixiv.context.userId,
                    p: ++a
                }, {
                    ajaxSettings: {
                        dataType: "json"
                    }
                }).done(function(a) {
                    a.error || (a.data.html_array && a.data.html_array.length && b.find(".comment-list").append(a.data.html_array.join("")), 
                    a.data.more ? b.addClass("comment-more") : b.removeClass("comment-more"));
                });
            }), $(".comment-area").on("click", ".comment-delete-icon", function() {
                if (confirm("コメントを削除しますか？")) {
                    var a = $(this).closest(".comment-item");
                    pixiv.api.post("rpc_delete_comment.php", {
                        i_id: pixiv.context.illustId,
                        del_id: a.dataset("commentId")
                    }, {
                        ajaxSettings: {
                            dataType: "json"
                        }
                    }).done(function(b) {
                        b.error || a.remove();
                    });
                }
            });
        }
    }, window.select_illust = function(a) {
        var b = $("#i_" + a)[0], c = $("#li_" + a);
        b.checked ? c.addClass("display_works_edited selected") : c.removeClass("display_works_edited selected");
    }, window.showHide = function(a, b) {
        document.getElementById(a) && ("none" === document.getElementById(a).style.display ? (document.getElementById(b).style.display = "none", 
        document.getElementById(a).style.display = "block") : (document.getElementById(a).style.display = "none", 
        document.getElementById(b).style.display = "block"));
    }, window.startTagEdit = function() {
        pixiv.api.post("rpc_tag_edit.php", {
            mode: "first",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id
        }).done(function(a) {
            pixiv.tagEditor.show(a);
        });
    }, window.startTagHistory = function() {
        pixiv.api.post("rpc_tag_edit.php", {
            mode: "history",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id
        }, {
            ajaxSettings: {
                dataType: "text"
            }
        }).done(function(a, b, c) {
            window.on_loaded_history(c);
        });
    }, window.addTag = function() {
        var a = $("#add_tag").val();
        a && ($("#add_tag_area").html("Loading ..."), pixiv.api.post("rpc_tag_edit.php", {
            mode: "add_tag",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id,
            value: a
        }).done(function(a) {
            pixiv.tagEditor.show(a);
        }));
    }, window.delTag = function(a) {
        var b = jQuery("#tag" + a).text();
        if (b) {
            if ("novel" !== jQuery("#rpc_t_id").text() && !confirm("このタグを削除しますか？\n*投稿者にユーザーIDが通知されます。")) return;
            jQuery("#del_btn_" + a).text("Loading ..."), window.form_disabled(), pixiv.api.post("rpc_tag_edit.php", {
                mode: "del_tag",
                i_id: pixiv.context.illustId,
                u_id: pixiv.context.userId,
                e_id: pixiv.user.id,
                tag: b
            }).done(function(a) {
                pixiv.tagEditor.show(a);
            });
        }
    }, window.getBackTag = function(a) {
        var b = jQuery("#h_tag" + a).text();
        b && (jQuery("#getback_btn_" + a).text("Loading ..."), window.form_disabled(), pixiv.api.post("rpc_tag_edit.php", {
            mode: "add_tag",
            type: "getback",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id,
            tag: b
        }).done(function(a) {
            pixiv.tagEditor.show(a);
        }));
    }, window.history_clear = function() {
        jQuery("#history_clear_btn").text("Loading ..."), window.form_disabled(), pixiv.api.post("rpc_tag_edit.php", {
            mode: "clear",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id
        }).done(function(a) {
            pixiv.tagEditor.show(a);
        });
    }, window.lockTag = function(a) {
        var b = Number(jQuery("#lock_tag" + a).prop("checked")), c = jQuery("#tag" + a).text();
        pixiv.api.post("rpc_tag_edit.php", {
            mode: "lock_tag",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id,
            lock: b,
            tag: c
        }, {
            ajaxSettings: {
                dataType: "text"
            }
        }).done(function(a, b, c) {
            window.on_loaded_tag2(c);
        });
    }, window.infoTag = function() {
        var a = jQuery("#infotag").val(), b = jQuery("#tag" + a).text(), c = jQuery("#info_tag_result");
        a ? b && (c.css("display", "block").text("Loading ..."), window.form_disabled(), 
        pixiv.api.post("rpc_tag_edit.php", {
            mode: "info_tag",
            i_id: pixiv.context.illustId,
            u_id: pixiv.context.userId,
            e_id: pixiv.user.id,
            num: a,
            tag: b
        }, {
            ajaxSettings: {
                dataType: "text"
            }
        }).done(function(a, b, c) {
            window.on_loaded_tag3(c);
        })) : c.css("display", "block").text("選択してください");
    }, window.on_loaded_tag2 = function() {}, window.on_loaded_tag3 = function(a) {
        var b = new window.ShowTags2();
        b.display(a);
    }, window.on_loaded_history = function(a) {
        var b = new window.ShowHistory();
        b.display(a);
    }, window.showTags = function() {
        this.display = function(a) {
            for (var b = "", c = 0; c < a.html.length; c++) b += a.html[c];
            if (jQuery("#tag_edit").html(b), jQuery("#tag_edit").is(":hidden") && window.ef1(), 
            "add_tag" === a.mode || "del_tag" === a.mode) {
                for (b = "", c = 0; c < a.tag_a.length; c++) b += a.tag_a[c];
                jQuery("#tags").html(b);
            }
        };
    }, window.ShowHistory = function() {
        this.display = function(a) {
            for (var b = JSON.parse(a.responseText), c = "", d = 0; d < b.html.length; d++) c += b.html[d];
            jQuery("#tag_history").html(c), jQuery("#tag_history").is(":hidden") && window.ef5(), 
            jQuery("#tag_history_btn").html('<a href="javascript:void(0);" onclick="endTagHistory(' + b.i_id + "," + b.u_id + "," + b.e_id + ')">閉じる</a>');
        };
    }, window.ShowTags2 = function() {
        this.decode = function(oj) {
            eval("var res = " + oj.responseText);
        }, this.display = function() {
            jQuery("#info_tag_result").text("報告しました"), window.form_undisabled();
        };
    }, window.endTagEdit = function() {
        var a = jQuery("#tag-editor");
        a.is(":visible") && (pixiv.tagEditor.update(), a.slideUp("fast"), jQuery(".work-tags").slideDown("fast"));
    }, window.endTagHistory = function(a, b, c) {
        jQuery("#tag_history").is(":visible") && window.ef6(), jQuery("#tag_history_btn").html('<a href="javascript:void(0);" onclick="startTagHistory(' + a + "," + b + "," + c + ')">表示する</a>');
    }, window.form_disabled = function() {
        var a, b, c = document.getElementById("rpc").getElementsByTagName("tr");
        document.getElementById("add_tag_area").getElementsByTagName("input").length > 0 && (document.getElementById("add_tag_area").getElementsByTagName("input")[0].disabled = !0, 
        document.getElementById("add_tag_area").getElementsByTagName("input")[1].disabled = !0), 
        document.getElementById("infoTagArea") && document.getElementById("infoTagArea").getElementsByTagName("input")[0] && (document.getElementById("infoTagArea").getElementsByTagName("input")[0].disabled = !0), 
        document.getElementById("info_tag_btn") && document.getElementById("info_tag_btn").getElementsByTagName("input")[0] && (document.getElementById("info_tag_btn").getElementsByTagName("input")[0].disabled = !0);
        for (var d = 0; d < c.length; d++) {
            a = c[d].getElementsByTagName("input").length;
            for (var e = 0; a > e; e++) b = c[d].getElementsByTagName("input")[e], !b || "checkbox" !== b.type && "radio" !== b.type && "button" !== b.type && "submit" !== b.type || (b.disabled = !0);
        }
        return !0;
    }, window.form_undisabled = function() {
        var a, b, c = jQuery("#rpc tr");
        jQuery("#add_tag_area input").prop("disabled", !1), jQuery("#history_clear_btn input").prop("disabled", !1);
        for (var d = 0; d < c.length; d++) {
            a = c[d].getElementsByTagName("input").length;
            for (var e = 0; a > e; e++) b = c[d].getElementsByTagName("input")[e], !b || "checkbox" !== b.type && "radio" !== b.type && "button" !== b.type && "submit" !== b.type || (b.disabled = !1);
        }
        return !0;
    }, window.bookmarkToggle = function(a, b) {
        var c, d, e, f, g, h, i = document.getElementById(a).getElementsByTagName("ul");
        if ("flat" === b) {
            if ("" !== i[0].className) {
                c = document.getElementById(a).getElementsByTagName("li");
                var j;
                for (e = 0, d; d = c[e]; ++e) j = e % 2 === 0 ? "bg_white" : "bg_gray", "level0" === d.className ? d.style.display = "list-item" : d.getElementsByTagName("a")[0].getElementsByTagName("span")[0].className = "", 
                $(d).removeClass("bg_white bg_gray").addClass(j);
                "none" === document.getElementById(a).style.display && (document.getElementById(a).style.display = "block"), 
                i[0].className = "", document.getElementById(a).style.padding = "0", document.getElementById("book_outlist").style.display = "none", 
                f = document.getElementById("bookmark_toggle_btn").getElementsByTagName("a"), f[0].getElementsByTagName("span")[0].className = "book_flat_on", 
                f[1].getElementsByTagName("span")[0].className = "book_cloud_off", g = "." + location.hostname.replace(/(\w+)\./, ""), 
                h = new Date(), h.setTime(h.getTime() + 2592e6), h = h.toGMTString(), document.cookie = "bookToggle=flat; expires=" + h + "; domain=" + g + "; path=/";
            }
        } else if ("cloud" === b && "tagCloud" !== i[0].className) {
            for (c = document.getElementById(a).getElementsByTagName("li"), e = 0; e < c.length; e++) c[e].className = c[e].className.replace(/bg_white|bg_gray/g, ""), 
            c[e].className = c[e].className.replace(/ /g, ""), "level0" === c[e].className ? c[e].style.display = "none" : c[e].getElementsByTagName("a")[0].getElementsByTagName("span")[0].className = "cnt";
            i[0].className = "tagCloud", document.getElementById("book_outlist").style.display = "block", 
            f = document.getElementById("bookmark_toggle_btn").getElementsByTagName("a"), f[0].getElementsByTagName("span")[0].className = "book_flat_off", 
            f[1].getElementsByTagName("span")[0].className = "book_cloud_on", g = "." + location.hostname.replace(/(\w+)\./, ""), 
            h = new Date(), h.setTime(h.getTime() + 2592e6), h = h.toGMTString(), document.cookie = "bookToggle=cloud; expires=" + h + "; domain=" + g + "; path=/";
        }
    }, window.markAllUser = function(a) {
        return jQuery("#" + a).find('*[id^="li_"]').each(function() {
            var a = jQuery('input[type="checkbox"]', this);
            a.length && (a.prop("checked", !0), jQuery(this).addClass("display_works_edited selected"));
        }), !0;
    }, window.unmarkAllUser = function(a) {
        return jQuery("#" + a).find('*[id^="li_"]').each(function() {
            var a = jQuery('input[type="checkbox"]', this);
            a.length && (a.prop("checked", !1), jQuery(this).removeClass("display_works_edited selected"));
        }), !0;
    }, window.group_add = function(a) {
        var b;
        if ("new" === a.value && 1 === a.selectedIndex) {
            var c = prompt("新規フォルダ名を指定してください", "");
            if (null !== c && (c = c.replace(/ +/g, ""), c = c.replace(/　+/g, ""), "" !== c)) {
                var d = a.length;
                "未分類" === c && (c = "");
                var e = encodeURIComponent(c), f = c, g = [], h = [], i = 0;
                for (b = 0; d > b; b++) {
                    if (e === a.options[b].value) {
                        i = 1, a.options[b].selected = !0;
                        break;
                    }
                    g[b] = a.options[b].value, h[b] = a.options[b].text;
                }
                if (0 === i) {
                    for (i = 0, d = g.length, b = 0; d > b; b++) 2 !== b ? 0 === i ? a.options[b] = new Option(h[b], g[b]) : a.options[b + 1] = new Option(h[b], g[b]) : (a.options[b] = new Option(f, e), 
                    a.options[b + 1] = new Option(h[b], g[b]), i = 1);
                    2 === d && (a.options[2] = new Option(f, e)), a.options[2].selected = !0;
                }
            }
        }
    }, window.markAllCheckboxByName = function(a) {
        for (var b = document.getElementsByName(a), c = 0; c < b.length; c++) "checkbox" === b[c].type && (b[c].checked = !0);
        return !0;
    }, window.unmarkAllCheckboxByName = function(a) {
        for (var b = document.getElementsByName(a), c = 0; c < b.length; c++) "checkbox" === b[c].type && (b[c].checked = !1);
        return !0;
    }, window.add_input = function() {
        var a = $("#normalUpLoad")[0], b = a.getElementsByTagName("li"), c = b.length - 1, d = document.createElement("li"), e = document.createElement("span"), f = document.createElement("input");
        d.setAttribute("class", "selectFile"), d.className = "selectFile", e.appendChild(document.createTextNode("　　　" + c + "ページ　")), 
        f.setAttribute("type", "file"), f.setAttribute("name", "page" + c), f.setAttribute("size", "40"), 
        f.setAttribute("onchange", "input_check(" + c + ")"), f.setAttribute("class", "upload_input"), 
        f.className = "upload_input", d.appendChild(e), d.appendChild(f);
        var g = b[c - 2];
        g.appendChild(d);
    }, window.input_check = function(a) {
        $(".upload_input")[a + 1] || window.add_input();
    }, window.upload = function() {
        $("#form_area").hide(), $("#uploading").show();
    }, window.show_tag_area = function(a) {
        var b = $("#view_tag" + a), c = $("#btn_show" + a), d = $("#btn_hide" + a);
        "none" === b.css("display") ? (b.show(), c.hide(), d.show()) : (b.hide(), c.show(), 
        d.hide());
    }, $(function() {
        $(".content_upload_tags .tagCloud").each(function() {
            function a() {
                clearTimeout(l), l = setTimeout(function() {
                    c.animate({
                        "max-height": c.get(0).scrollHeight
                    }, 150);
                }, 200);
            }
            function b() {
                clearTimeout(l), l = setTimeout(function() {
                    c.animate({
                        "max-height": "150"
                    }, 150);
                }, 400);
            }
            var c = $(this), d = [];
            if (colon.test.storage && window.JSON) try {
                d = JSON.parse(localStorage["recent_tags" + pixiv.user.id]), d.length || (d = []);
            } catch (e) {
                d = [];
            }
            var f = c.find(".tag_orig");
            f.remove();
            for (var g = function() {
                return $(this).text() === i ? (c.prepend(this), j = !0, !1) : void 0;
            }, h = d.length; --h >= 0; ) {
                var i = d[h], j = !1;
                c.find("li").each(g), j || d.splice(h, 1);
            }
            var k = f.text();
            c.find("li").each(function() {
                return $(this).text() === k ? (f = $(this), $(this).remove(), !1) : void 0;
            }), c.prepend(f), colon.test.storage && window.JSON && c.parents("form").on("submit", function() {
                var a = $.trim($(this).find('input[name="tag[]"]').prop("value")).split(/ +/).reverse();
                $(a).each(function(a, b) {
                    var c = $.inArray(b, d);
                    c >= 0 && d.splice(c, 1), d.unshift(b);
                }), d = d.slice(0, 30), localStorage["recent_tags" + pixiv.user.id] = JSON.stringify(d);
            });
            var l = null;
            c.hover(a, b), c.css({
                "max-height": c.get(0).scrollHeight
            }), b(), c.css("overflow-y", "hidden");
        });
    }), window.add_form = function(a, b) {
        var c = $("#tag" + a + "-" + b).text(), d = $("#input_tag" + a), e = d.val().split(/\s+/), f = $.inArray(c, e), g = -1 !== f;
        e.splice(g ? f : e.length, g ? 1 : 0, g ? void 0 : c), d.val($.trim(e.join(" "))), 
        window.tag_chk(e);
    }, window.openClose = function(a, b) {
        a = $("string" === $.type(a) ? "#" + a : a), b = $("string" === $.type(b) ? "#" + b : b), 
        a[0].checked && b.is(":hidden") ? b.stop(!0, !0).slideDown("fast") : b.stop(!0, !0).slideUp("fast");
    }, window.update_input_tag = function() {
        window.tag_chk($("#input_tag0").val().split(/\s+|　+/));
    }, window.tag_chk = function(a) {
        a = $.grep(a, function(a) {
            return a;
        });
        var b = $("#bookmark_add_alert")[0], c = $("#bookmark_tag_count")[0], d = a.length;
        d > 10 ? (b.style.display = "block", c.style.color = "#ff0000") : (b.style.display = "none", 
        c.style.color = "#666666"), c.innerHTML = d;
    }, $(function() {
        var a = $("#input_tag0");
        if (a.length) {
            var b = a.val(), c = b.split(/\s+|　+/);
            window.tag_chk(c);
        }
    }), window.delete_img = function(a, b) {
        pixiv.api.event.deleteImage(b, a).done(function(a) {
            "ok" === a.result && ("big" === a.type ? jQuery("#big_img").html('<input name="big" type="file" size="30">') : jQuery("#small_img").html('<input name="small" type="file" size="30">'));
        });
    }, window.load_calendar = function(a, b) {
        jQuery("#calendar").text("Loading..."), pixiv.api.event.calendar(a, b).done(function(a) {
            var b = a.year, c = a.month;
            jQuery("#calendar_now").text(b + "/" + c).attr("href", "?d=" + b + c), jQuery("#calendar_prev")[0].onclick = function() {
                window.load_calendar(a.prev_year, a.prev_month);
            }, jQuery("#calendar_next")[0].onclick = function() {
                window.load_calendar(a.next_year, a.next_month);
            }, jQuery("#calendar").html(a.calendar);
        });
    }, pixiv.api.myList = function(a, b) {
        b = b || {};
        var c = {
            e_id: pixiv.context.eventId,
            u_id: pixiv.user.id,
            d_id: b.day || pixiv.context.day,
            f_id: b.floor || pixiv.context.floor
        };
        return b.hall && (c.h_id = b.hall), "array" === $.type(a) ? (c.mode = "save", c.value = a.join()) : (c.mode = "delete", 
        c.id = a), pixiv.api.post("/rpc_event_map.php", c);
    }, pixiv.myList = {
        setup: function() {
            $("input.add-my-list").click(pixiv.myList.add), $("input.remove-my-list").click(pixiv.myList.remove);
        },
        add: function() {
            var a = $(this), b = $.makeArray(a.dataset("circle-id")), c = {
                hall: a.dataset("hall"),
                day: a.dataset("day")
            };
            pixiv.api.myList(b, c).done($.proxy(pixiv.myList.addHandler, this));
        },
        addHandler: function() {
            var a = $(this);
            a.replaceWith([ '<a href="/event_member.php?event_id=' + pixiv.context.eventId + '&amp;mode=mylist">', a.dataset("complete"), "</a>" ].join(""));
        },
        remove: function() {
            var a = $(this), b = a.dataset("circle-id"), c = {
                hall: a.dataset("hall"),
                day: a.dataset("day")
            };
            pixiv.api.myList(b, c).done($.proxy(pixiv.myList.removeHandler, this));
        },
        removeHandler: function() {
            var a = $(this);
            a.replaceWith(a.dataset("complete"));
        }
    }, window.formatStr = function(a, b) {
        a = $("#" + a)[0];
        var c = window.getSelected(a);
        if (c) return window.setSelection(a, "<" + b + ">" + c + "</" + b + ">"), !1;
    }, window.inertColor = function(a, b) {
        a = $("#" + a)[0];
        var c = window.getSelected(a);
        if (c) return window.setSelection(a, '<span style="color:' + b + ';">' + c + "</span>"), 
        window.paletteClose(), !1;
    }, window.getSelected = function(a) {
        if (document.selection) {
            a.focus();
            var b = document.selection.createRange();
            return b.text;
        }
        a.focus();
        var c = a.textLength, d = a.selectionStart, e = a.selectionEnd;
        return (1 === e || 2 === e) && (e = c), a.value.substring(d, e);
    }, window.setSelection = function(a, b) {
        if (document.selection) {
            a.focus();
            var c = document.selection.createRange();
            c.text = b;
        } else {
            var d = a.textLength, e = a.selectionStart, f = a.selectionEnd;
            (1 === f || 2 === f) && (f = d), a.value = a.value.substring(0, e) + b + a.value.substr(f, d), 
            a.selectionStart = e + b.length, a.selectionEnd = e + b.length;
        }
        a.focus();
    }, window.insertLink = function(a, b) {
        a = document.getElementById(a);
        var c = window.getSelected(a), d = "";
        b ? c.match(/@/) && (d = c) : d = c.match(/^https?:/) ? c : c.match(/^(\w+\.)+\w{2,5}\/?/) ? "http://" + c : c.match(/ /) ? "http://" : "http://" + c;
        var e = prompt(b ? "メールアドレスを入力してください。" : "リンク先URLを入力してください。", d);
        return null !== e && ("" === c && (c = e), b && (e = "mailto:" + e), window.setSelection(a, '<a href="' + e + '">' + c + "</a>")), 
        !1;
    }, window.chkTextarea = function(a, b) {
        var c, d = 66;
        "big" === b ? c = 32 : "small" === b && (c = -32), a = document.getElementById(a);
        var e = parseInt(a.style.height, 10);
        if (a && e) {
            var f;
            e && (f = e + c), f >= d ? e && (a.style.height = f + "px") : e && (a.style.height = d + "px");
        }
        return !1;
    }, window.makePalette = function(a) {
        for (var b = "http://source.pixiv.net/source/images/spacer.gif", c = "http://source.pixiv.net/source/images/close3.gif", d = [ "#000000", "#7f7f7f", "#bfbfbf", "#fe3a20", "#febc15", "#bfbd00", "#53c900", "#00c1ff", "#f97ff8", "#8d0000", "#d9944f", "#867c2f", "#008e46", "#303acc", "#bf2d96", "#3e027d" ], e = 0, f = 0, g = 0, h = ""; 4 > e; ) {
            for (;4 > f; ) h += '<div class="color">', h += '<a href="javascript:void(0);" onclick="inertColor(\'' + a + "', '" + d[g] + "')\">", 
            h += '<img src="' + b + '" border="0" width="14" height="14" style="background-color:' + d[g] + '">', 
            h += "</a></div>", g++, f++;
            h += '<div class="clear"></div>', f = 0, e++;
        }
        h += "</table>";
        var i = "";
        i += '<div class="title" onClick="paletteClose();">パレット</div>', i += '<div class="close"><a href="javascript:void(0)" onclick="paletteClose()"><img src="' + c + '"></a></div>', 
        i += '<div class="clear"></div>', i += '<div class="palette">' + h + "</div>", $("#color_palette").html(i);
    }, window.paletteToggle = function() {
        var a = $("#color_palette");
        "none" === a.css("display") ? (a.css("left", 30), a.show()) : a.hide();
    }, window.paletteOpen = function() {
        var a = $("#color_palette");
        a.css("left", 30), a.show();
    }, window.paletteClose = function() {
        var a = $("#color_palette");
        a.hide();
    }, pixiv.rankingCalendar = {
        year: null,
        prev: !0,
        next: !0,
        container: null,
        selectorContainer: null,
        lastYearContainer: null,
        nextYearContainer: null,
        setup: function() {
            var a = pixiv.rankingCalendar, b = a.container = $("div.calender_ranking_navi");
            a.selectorContainer = $("div.calendar-selector", b), a.year = pixiv.context.currentYear, 
            a.lastYearContainer = $("a.last-year", b).click(a.showLastYearList), a.nextYearContainer = $("a.next-year", b).click(a.showNextYearList), 
            a.showList();
        },
        showLastYearList: function() {
            var a = pixiv.rankingCalendar;
            return a.prev && a.showList(a.year - 1), !1;
        },
        showNextYearList: function() {
            var a = pixiv.rankingCalendar;
            return a.next && a.showList(a.year + 1), !1;
        },
        showList: function(a) {
            var b = pixiv.rankingCalendar;
            a = a || b.year;
            var c = $("#calendar-selector-" + a, b.container);
            c.length && (b.selectorContainer.hide(), c.show(), b.year = a, 2007 >= a ? (b.prev = !1, 
            b.lastYearContainer.addClass("disabled")) : (b.prev = !0, b.lastYearContainer.removeClass("disabled")), 
            a >= new Date().getFullYear() ? (b.next = !1, b.nextYearContainer.addClass("disabled")) : (b.next = !0, 
            b.nextYearContainer.removeClass("disabled")));
        }
    }, window.markAllRows = function(a) {
        for (var b, c = document.getElementById(a).getElementsByTagName("tr"), d = 0; d < c.length; d++) b = c[d].getElementsByTagName("input")[0], 
        b && "checkbox" === b.type && (b.checked || (b.checked = !0));
        return !0;
    }, window.unmarkAllRows = function(a) {
        for (var b, c = document.getElementById(a).getElementsByTagName("tr"), d = 0; d < c.length; d++) b = c[d].getElementsByTagName("input")[0], 
        b && "checkbox" === b.type && b.checked && (b.checked = !1);
        return !0;
    }, colon.test.storage && window.JSON && ("/member_illust.php" === location.pathname && location.search.indexOf("illust_id=") >= 0 || "/novel/show.php" === location.pathname) && location.search.indexOf("id=") >= 0 && $(function() {
        if (pixiv.user.id) {
            var a, b;
            try {
                a = JSON.parse(localStorage["recently_viewed" + pixiv.user.id]), a.length || (b = []);
            } catch (c) {
                a = [];
            }
            for (var d = pixiv.context.illustId, e = Date.now ? Date.now() : +new Date(), f = a.length; --f >= 0; ) {
                var g = a[f];
                (g.id === d || e - g.time > 864e5) && (a.splice(f, 1), f--);
            }
            var h;
            if ("/member_illust.php" === location.pathname) h = $('meta[property="og:image"]').attr("content"), 
            h && a.push({
                type: "illust",
                img: h,
                time: e,
                id: d,
                author: pixiv.context.userName
            }); else if ("/novel/show.php" === location.pathname) try {
                h = document.querySelector('a[href$="mode=cover"] img').src, h && a.push({
                    type: "novel",
                    img: h,
                    time: e,
                    id: d,
                    author: pixiv.context.userName
                });
            } catch (c) {}
            a = a.slice(-20), colon.storage.localStorage("recently_viewed" + pixiv.user.id, a);
        }
    }), window.impLtad = function(a, b) {
        var c = document.createElement("script");
        c.type = "text/javascript", c.async = !0, c.src = "http://d.pixiv.org/show?zone_id=" + a + "&segments=" + b + "&_=" + Math.round(1e10 * Math.random());
        var d = document.getElementsByTagName("script")[0];
        d.parentNode.insertBefore(c, d);
    }, $(function() {
        function a() {
            var a = colon.storage.cookie(d);
            if (!a) return null;
            var b = a.split("_"), c = +b[0], e = b[1], f = +b[2];
            return isFinite(c) ? {
                time: c,
                blob: e,
                status: f
            } : null;
        }
        function b(a) {
            a ? colon.storage.cookie(d, a.time + "_" + a.blob + "_" + a.status, {
                expires: 2592e6
            }) : colon.storage.cookie(d, "", {
                expires: -1
            });
        }
        function c() {
            pixiv.ui.modal.open("#popular-search-trial-end-introduction-modal");
        }
        var d = pixiv.context.popular_search_trial_cookie_name, e = {
            "/tags.php": !0,
            "/search.php": !0,
            "/novel/search.php": !0,
            "/novel/tags.php": !0,
            "/mypage.php": !0
        };
        if (pixiv.context.popular_search_trial_is_target_user && e[location.pathname]) {
            $(".popular-search-trial-start").on("click", function() {
                pixiv.api.post("/rpc/popular_search_trial.php", {
                    mode: "start"
                }).done(function(a) {
                    a.success ? window.location.reload() : alert(a.message);
                });
            });
            var f = a();
            if (f && 0 === f.status) {
                var g = Math.floor(f.time - new Date() / 1e3);
                g >= 0 ? $(".popular-search-trial-time-left").each(function() {
                    $(this).text(Math.floor(g / 60));
                }) : (f.status = 1, b(f), c(), colon.ga.trackEvent([ "premium_introduction", "modal", "popular_search" ]));
            }
        }
    });
}(this, jQuery), function() {
    "use strict";
    pixiv.api.booth = {
        get: function(a) {
            return pixiv.api.get("https://api.booth.pm/items.json", a);
        },
        item: function(a, b, c) {
            return pixiv.api.booth.get({
                tag: a,
                page: b,
                adult: c || null
            }, {
                cache: 18e4
            });
        },
        userItem: function(a) {
            return pixiv.api.booth.get({
                pixiv_user_id: a,
                r18: +pixiv.user.explicit
            });
        }
    }, pixiv.createPager = function(a) {
        var b, c = a.current_page, d = [], e = 4, f = Math.max(c - e, 1), g = Math.min(f + 2 * e, a.total_pages);
        for (e > g - c && (f = Math.max(g - 2 * e, 1)), b = f; g >= f; ++f) d.push({
            current: f === c,
            page: f,
            url: colon.query.replace({
                p: 1 === f ? null : f
            })
        });
        return colon.template("pager", {
            pages: d,
            prev: 2 > c ? !1 : d[c - b - 1],
            next: c >= a.total_pages ? !1 : d[c - b + 1]
        });
    };
}(), function(a, b, c) {
    "use strict";
    function d() {
        var a = pixiv.ui.Tag.trim(this.inputContainer.val());
        return a ? void this.inputContainer.val(a) : !1;
    }
    function e(a) {
        if (a.target) {
            var b = this.inputContainer, d = pixiv.ui.Tag.split(b.val());
            d[d.length - 1] = c(a.target).text(), b.val(d.join(" "))[0].focus(), this.hide();
        }
    }
    function f() {
        this.stop(), this.timer = a.setInterval(c.proxy(this.request, this), 500);
    }
    function g() {
        a.clearInterval(this.timer), a.setTimeout(c.proxy(this.hide, this), 100);
    }
    function h(a, b) {
        var c = (a | {}).candidates, d = [];
        if (c && c.length) for (var e, f = 0; e = c[f]; ++f) 0 === e.tag_name.indexOf(b) && d.push(e);
        return {
            candidates: d
        };
    }
    function i(a) {
        var b = (a || {}).candidates;
        if (b && b.length) {
            var d = [];
            this.listLength = b.length;
            for (var e, f = 0; e = b[f]; ++f) d[f] = "<li>" + colon.html.escape(e.tag_name) + "</li>";
            this.listItem = c(d.join("")).appendTo(this.listContainer.empty().show()), this.listPosition = -1;
        } else this.hide();
    }
    function j() {
        this.listContainer.hide(), this.listPosition = -1, this.keyword = null, this._keyword = null;
    }
    pixiv.suggest = {
        container: null,
        inputContainer: null,
        listContainer: null,
        listItem: null,
        keyword: null,
        _keyword: null,
        stash: {},
        listPosition: -1,
        listLength: 0,
        effectiveCount: 5,
        setup: function() {
            if (this.inputContainer = c("#suggest-input"), this.inputContainer.length) {
                if (!pixiv.user.premium) return void c(".ui-search, .search-form").submit(c.proxy(this.submit, this));
                this.container = c("#suggest-container"), this.container.length && (this.listContainer = c("#suggest-list"), 
                this.inputContainer.focus(c.proxy(this.start, this)).blur(c.proxy(this.stop, this)).keydown(c.proxy(this.select, this)), 
                this.container.submit(c.proxy(this.submit, this)), this.listContainer.click(c.proxy(this.click, this)));
            }
        },
        select: function(a) {
            var b = a.which, c = this.listPosition;
            switch (b) {
              case 38:
              case 40:
                if (a.shiftKey || a.ctrlKey || a.altKey || a.metaKey) break;
                if (a.preventDefault(), this.listItem) {
                    var d = this.listLength;
                    c = this.listPosition = 38 === b ? c - 1 >= -1 ? c - 1 : d - 1 : d > c + 1 ? c + 1 : -1, 
                    this.listItem.removeClass("current"), -1 !== c && this.listItem.eq(c).addClass("current");
                }
                break;

              case 13:
                this.listItem && -1 !== c && (a.preventDefault(), this.click({
                    target: this.listItem[c]
                }));
            }
        },
        submit: d,
        click: e,
        start: f,
        stop: g,
        request: function() {
            var a, b, c, d = this, e = pixiv.ui.Tag.trim(pixiv.ui.Tag.split(this.inputContainer.val()).pop());
            if (!e) return void this.hide();
            if (e !== this.keyword && e !== this._keyword) {
                if (e.length > this.effectiveCount) {
                    if (a = e.slice(0, this.effectiveCount), b = this.stash[a]) return b = this.stash[e] || this.filter(b, e), 
                    void (b && (this._keyword = e, this.stash[e] = b, this.show(b)));
                    e = a, c = !0;
                } else b = this.stash[e], this._keyword = null;
                this.keyword = e, b ? this.show(b) : (this.stash[e] = {}, pixiv.api.suggest(e).done(function(a) {
                    d.stash[e] = a, !c && d.show(a);
                }).fail(function(a) {
                    d.stash[e] = a, d.hide();
                }));
            }
        },
        filter: h,
        show: i,
        hide: j
    };
}(this, document, jQuery), function(a, b, c) {
    "use strict";
    pixiv.thumbnailFilter = {
        container: null,
        popupContainer: null,
        positiveContainer: null,
        negativeContainer: null,
        positiveInput: null,
        negativeInput: null,
        config: null,
        initialize: null,
        items: null,
        setup: function() {
            pixiv.user.loggedIn && b("#template-thumbnail-filter").length && (this.config = colon.storage.config("thumbnail-filter"), 
            pixiv.user.premium ? this.activate() : this.guide(), this.initialize = p.once(function() {
                var a = this, c = this.container;
                this.popupContainer = b(".toolbar-menu", c), this.positiveContainer = b(".positive", c), 
                this.negativeContainer = b(".negative", c), this.positiveInput = b("#thumbnail-filter-add-positive"), 
                this.negativeInput = b("#thumbnail-filter-add-negative"), b(".item-name", c).on("keyup blur", function() {
                    var c = b(this);
                    c.siblings(".submit-options")[a.userItem(c.val()) ? "show" : "hide"]();
                }), c.on("click", ".remove-button", function() {
                    var c = b(this), d = c.dataset();
                    a.removeItem(d.type, d.label, c.parent());
                }).on("click", ".submit-options input", function() {
                    b(this).closest(".submit-form").find(".item-name").focus();
                }).on("click", ".sprites-help", function() {
                    pixiv.ui.modal.push("#thumbnail-filter-help");
                }), b(".submit-form").submit(function() {
                    var c = b(this).dataset("type"), d = a[c + "Input"], e = pixiv.ui.Tag.split(d.val()), f = e.shift();
                    return a.addItem(c, f) && d.val(e.join(" ")), !1;
                });
            }, this));
        },
        activate: function() {
            var a = this;
            if (pixiv.user.filteringItems) {
                "array" !== b.type(pixiv.user.filteringItems) && (pixiv.user.filteringItems = []), 
                this.items = pixiv.user.filteringItems, this.parse();
                var c = b.map(this.positiveItems, function(b) {
                    return {
                        label: b,
                        user_item: a.userId(b),
                        value: a.strip(b)
                    };
                }), d = b.map(this.negativeItems, function(b) {
                    return {
                        label: b,
                        user_item: a.userId(b),
                        value: a.strip(b)
                    };
                });
                this.addContainer({
                    checked: this.config("disabled"),
                    positiveItems: c,
                    negativeItems: d
                }), colon.d.on("mouseenter mouseleave", ".thumbnail-filter-negative", function(a) {
                    var c = b("img", this), d = c.dataset();
                    switch (a.type) {
                      case "mouseenter":
                        c.attr("src", d.src);
                        break;

                      case "mouseleave":
                        c.attr("src", d.srcFiltered || pixiv.sourcePath + "images/filtered.png");
                    }
                });
            }
        },
        guide: function() {
            colon.storage.localStorage("thumbnailFilterHidden") || this.addContainer({
                checked: !1,
                positiveItems: [],
                negativeItems: []
            });
        },
        addContainer: function(a) {
            this.container = b(colon.template("thumbnail-filter", a)), pixiv.toolbar.add(this.container);
        },
        strip: function(a) {
            return a.replace(/^"(.+?)"$/, "$1").replace(/^id:(\d+)$/, "$1");
        },
        parse: function() {
            for (var a, b = this.items, c = 0, d = [], e = []; a = b[c]; ++c) this.positive(a) ? d.push(a.slice(1)) : e.push(a);
            this.positiveItems = d, this.negativeItems = e;
        },
        positive: function(a) {
            return 0 === a.indexOf("+");
        },
        userId: function(a) {
            return /^id:[1-9]\d+$/.test(a);
        },
        userItem: function(a) {
            return /^\d+$/.test(a) && +a > 10;
        },
        findTag: function(a, b) {
            var c, d, e, f = /^"(.+?)"$/;
            for (b = b.toLowerCase(), c = 0; d = this[a + "Items"][c]; ++c) if (d = d.toLowerCase(), 
            e = f.exec(d), e && b === e[1] || b.indexOf(d) >= 0) return !0;
            return !1;
        },
        findUser: function(a, b) {
            for (var c, d = 0; c = this[a + "Items"][d]; ++d) if (this.userId(c) && b === c.slice(3)) return !0;
            return !1;
        },
        toggle: function() {
            this.container.hasClass("popup") ? this.close() : this.open();
        },
        open: function() {
            this.initialize(), this.container.addClass("popup"), this.popupContainer.show(), 
            this.positiveInput.prop("disabled") || this.positiveInput.focus();
        },
        close: function() {
            this.container.removeClass("popup"), this.popupContainer.hide();
        },
        hide: function() {
            colon.storage.localStorage("thumbnailFilterHidden", !0, 2592e6), pixiv.toolbar.remove(this.container);
        },
        addItem: function(c, d, e) {
            if (d || (d = ""), d = d.replace(/^\++/, ""), this.userId(d) && (d = d.replace(/^id:/, "")), 
            !d) return !1;
            var f, g, h, i = this, j = this.userId(d) || this.userItem(d) && "user" === this[c + "Input"].parent().find('input[name="filter-type"]:checked').val(), k = j ? "id:" + +d : d, l = "positive" === c ? "+" + k : k;
            return -1 !== pixiv.ui.Tag.find(l, this.items) ? !1 : (f = this[c + "Container"], 
            g = this[c + "Items"], this.items.push(l), g.push(k), g.length && b("._notes", f).stop().slideUp("fast"), 
            h = b(colon.template("thumbnail-filter-list-item", {
                type: c,
                label: k,
                user_item: j,
                value: pixiv.ui.Tag.normalize(d)
            })).appendTo(b(".items", f)).stop(!0, !0).slideDown("fast"), this.update(), e !== !1 && pixiv.api.filter.add(l).pipe(function(a) {
                return a && a.error ? b.Deferred().rejectWith(this, [ a, a.error ]) : void 0;
            }).fail(function(b, d, e) {
                a.alert(e || "error"), i.removeItem(c, k, h, !1);
            }), !0);
        },
        removeItem: function(c, d, e, f) {
            if (!d) return !1;
            var g, h, i = this, j = "positive" === c ? "+" + d : d, k = pixiv.ui.Tag.find(j, this.items);
            return -1 === k ? !1 : (g = this[c + "Container"], h = this[c + "Items"], this.items.splice(k, 1), 
            h.splice(b.inArray(d, h), 1), h.length || b("._notes", g).stop().slideDown("fast"), 
            e && e.stop().slideUp("fast", function() {
                e.remove();
            }), this.update(), f !== !1 && pixiv.api.filter.remove(j).pipe(function(a) {
                return a && a.error ? b.Deferred().rejectWith(this, [ a, a.error ]) : void 0;
            }).fail(function(b, e, f) {
                a.alert(f || "error"), i.addItem(c, d, !1);
            }), !0);
        },
        update: function() {
            b('input[type="checkbox"]', this.container).is(":checked") ? this.disable() : this.enable();
        },
        enable: function() {
            this.config("disabled", null), pixiv.scrollView.reset(), this.container.filter(".toolbar-item").removeClass("off");
        },
        disable: function() {
            this.config("disabled", 1), pixiv.scrollView.reset(), this.container.filter(".toolbar-item").addClass("off");
        }
    };
}(this, jQuery), function(a, b, c) {
    "use strict";
    function d() {
        var a = this;
        colon.ui.shortcut.bind("A", function() {
            return a.applyMethod("toggleLineAlpha");
        }).bind("Z", function() {
            return a.applyMethod("undo");
        }).bind("Y", function() {
            return a.applyMethod("redo");
        }).bind("J", function() {
            return a.applyMethod("zoomin");
        }).bind("K", function() {
            return a.applyMethod("zoomout");
        }).bind(",", function() {
            return a.applyMethod("setLineWidthIndex", "-1");
        }).bind(".", function() {
            return a.applyMethod("setLineWidthIndex", "+1");
        });
    }
    function e(a, c) {
        var d = b("form.focus .drawr-paint").first().dataset("paintid");
        return this.painterList[d] && this.painterList[d][a](c), !1;
    }
    var f;
    pixiv.ui.DrawrPainter = function(c) {
        var d = this;
        this.container = b(c).addClass("parsed"), f || (f = Handlebars.compile(b("#template-drawr-paint-ui").html()));
        var e = colon.ua.ie && colon.ua.v <= 8;
        if (this.container.append(f({
            outdated: e
        })), !e) {
            this.toolbar = this.container.find(".drawr-tools"), this.funcbar = this.container.find(".drawr-functions"), 
            this.width = Math.min(Number(this.container.data("width")), this._maxWidth), this.height = Math.min(Number(this.container.data("height")), this._maxHeight), 
            this.bgColor = this.container.data("bgcolor") || this.bgColor, this.outputTarget = b("#" + this.container.data("outputid"));
            var g = this.outputTarget.parents("form");
            g && g.bind("submit", {
                self: this
            }, this.convert), this.baseCanvas = b("<canvas>").css("position", "absolute").attr("width", this.width).attr("height", this.height), 
            this.strokeCanvas = this.baseCanvas.clone().css("opacity", "" + this.lineAlpha), 
            this.baseCanvas.addClass("base"), this.historyCanvas = b("<canvas>").attr("width", this._maxWidth).attr("height", this._maxHeight * (this.historyMax + 1)), 
            this.canvases = b(".drawr-canvases", this.container).append(this.baseCanvas).append(this.strokeCanvas).append(b("<div>").width(this.width).height(this.height)).css("position", "relative"), 
            this.baseContext = this.baseCanvas[0].getContext("2d"), this.baseContext.fillStyle = this.bgColor, 
            this.strokeContext = this.strokeCanvas[0].getContext("2d"), this.strokeContext.lineCap = "round", 
            this.strokeContext.lineJoin = "round", this.historyContext = this.historyCanvas[0].getContext("2d"), 
            this.historyContext.fillStyle = this.bgColor, this.historyContext.fillRect(0, 0, this.historyContext.canvas.width, this.historyContext.canvas.height), 
            this.clearCanvas(), d.addHistory(), this.bindStrokeCanvas("brush"), this.strokeCanvas.bind("contextmenu", {
                self: this
            }, this.oncontextmenu), b(a).bind("beforeunload", function() {
                return "ページを移動すると、お絵かきデータは破棄されます。";
            }), this.initToolbar(), this.initFuncbar();
        }
    }, pixiv.ui.DrawrPainter.prototype = {
        _mode: null,
        width: 400,
        height: 300,
        _maxWidth: 600,
        _maxHeight: 600,
        zoomScale: 1,
        maxZoomScale: 2,
        minZoomScale: .5,
        mouseX: null,
        mouseY: null,
        _isMouseDown: !1,
        _bPrevX: 0,
        _bPrevY: 0,
        container: null,
        toolbar: null,
        canvases: null,
        funcbar: null,
        baseCanvas: null,
        baseContext: null,
        strokeCanvas: null,
        strokeContext: null,
        historyCanvas: null,
        historyContext: null,
        outputTarget: null,
        lineAlpha: null,
        lineWidth: null,
        lineColor: "#000000",
        curColorBlock: null,
        widthSlider: null,
        alphaToggle: null,
        bgColor: "#ffffff",
        colorList: [ "#000000", "#808080", "#C0C0C0", "#FFFFFF", "#FF3B21", "#FFBD16", "#F5F30F", "#A5E975", "#71DBFB", "#FA80F9", "#8E0000", "#FFCC99", "#877D30", "#008F47", "#313BCD", "#C02E97", "#3F037E" ],
        widthList: [ 1, 2, 4, 6, 10, 15, 30 ],
        historyMax: 5,
        _historyIndex: null,
        _historyUndo: null,
        _historyRedo: null,
        _strokeRect: {},
        bindStrokeCanvas: function(a) {
            var b = "mousedown mouseup mousemove mouseout mouseover";
            this._isMouseDown || this._mode !== a && (this._mode = a, this.strokeCanvas.unbind(b), 
            this.strokeCanvas.bind(b, {
                self: this
            }, this["on" + this._mode]));
        },
        sliderMouseDown: function(a) {
            var c = a.data.self;
            c.setUserSelect("none"), b(document).bind("mousemove", {
                self: c,
                slider: this
            }, c.sliderMouseMove), b(document).bind("mouseup", {
                self: c,
                slider: this
            }, c.sliderMouseUp), c.sliderMouseMove(a);
        },
        sliderMouseMove: function(a) {
            var c = a.data.self, d = b(a.data.slider), e = d.outerWidth(!1) - 1, f = d.width() - 1, g = c.widthList.length - 1, h = a.pageX - (e - f) / 2 - d.offset().left, i = Math.round(Math.min(Math.max(h, 0), f) * g / f), j = c.widthList[i];
            c.setLineWidth(j), d.find(".nob").trigger("mouseleave").trigger("mouseenter");
        },
        sliderMouseUp: function(a) {
            var c = a.data.self, d = b(a.data.slider).find(".nob");
            c.setUserSelect("text"), b(document).unbind("mousemove", c.sliderMouseMove).unbind("mouseup", c.sliderMouseUp), 
            a.target !== d[0] && d.trigger("mouseleave");
        },
        canvasResizeMouseMove: function(a) {
            var c = b(".resize-preview div:first-child"), d = 10 * Math.round(Math.min(600, Math.max(180, a.pageY - c.offset().top)) / 10);
            c.height() !== d && (c.height(d).css("lineHeight", d + "px"), c.text(c.width() + " x " + c.height()));
        },
        canvasResizeMouseDown: function(a) {
            var c = a.data.self, d = b(".resize-preview div:first-child");
            b(document).unbind("mousemove", c.canvasResizeMouseMove).unbind("mousedown", c.canvasResizeMouseDown), 
            c.resizeCanvas(d.height()), d.parent().remove();
        },
        beginResize: function() {
            this.container.find(".resize-preview").remove(), b('<div class="resize-preview" style="position:absolute; z-index: 999;">').append('<div style="width:420px; height:180px; background-color:rgba(80,80,80,0.75); text-align:center; font-weight:bold; font-size:200%; color:#ffffff;">').append('<div style="width:420px; height:40px;">').insertAfter(this.canvases).css("top", this.canvases.position().top), 
            b(document).bind("mousemove", {
                self: this
            }, this.canvasResizeMouseMove).bind("mousedown", {
                self: this
            }, this.canvasResizeMouseDown);
        },
        resizeCanvas: function(a) {
            this.height = a, this.baseCanvas[0].height = this.strokeCanvas[0].height = this.height, 
            this.baseContext.fillStyle = this.bgColor, this.strokeContext.lineCap = this.strokeContext.lineJoin = "round", 
            this.strokeCanvas.next().height(this.height), this.clearCanvas(), this._doHistory(0), 
            this._doZoom(1);
        },
        saveBackup: function() {
            try {
                var a = confirm("一時保存します。すでにこのブラウザに一時保存されているキャンバスは上書きされます。よろしいですか？");
                if (!a) return;
                localStorage["canvas_backup" + pixiv.user.id] = JSON.stringify({
                    image: this.baseCanvas[0].toDataURL(),
                    created_at: new Date()
                });
            } catch (b) {
                alert("一時保存できませんでした");
            }
        },
        loadBackup: function() {
            try {
                var a = JSON.parse(localStorage["canvas_backup" + pixiv.user.id]), b = new Image();
                b.src = a.image, b.onload = function(a) {
                    return function() {
                        a.clearCanvas(), a.baseContext.drawImage(this, 0, 0), a.addHistory();
                    };
                }(this);
            } catch (c) {
                alert("一時保存されたキャンバスが見つかりませんでした");
            }
        },
        initToolbar: function() {
            var a = this;
            this.curColorBlock = this.toolbar.find(".drawr-tool-curcolor"), this.widthSlider = this.toolbar.find(".drawr-tool-width"), 
            this.widthSlider.bind("mousedown", {
                self: a,
                slider: this.widthSlider
            }, this.sliderMouseDown);
            var c = this.toolbar.find(".drawr-tool-color"), d = c;
            b.each(this.colorList, function() {
                d = c.clone().attr("data-tooltip", "色:" + this.toString()).addClass("_ui-tooltip").css("background-color", this.toString()).insertAfter(d).bind("click", {
                    self: a,
                    value: this
                }, function(a) {
                    a.data.self.setLineColor(a.data.value), a.data.self.toolbar.find(".drawr-tool-color.current").removeClass("current"), 
                    b(this).addClass("current");
                }), this.toString() === a.lineColor && d.addClass("current");
            }), c.remove(), this.alphaToggle = this.toolbar.find(".drawr-tool-alpha").bind("change", {
                self: a
            }, function(a) {
                a.data.self.setLineAlpha(b(this).is(":checked") ? .5 : 1);
            }), this.setLineColor(this.container.data("linecolor") || this.lineColor), this.setLineWidth(this.container.data("linewidth") || this.lineWidth || this.widthList[0]), 
            this.setLineAlpha("on" === this.container.data("linealpha") ? .5 : 1);
        },
        initFuncbar: function() {
            var b = this;
            this.funcbar.find(".drawr-function-undo").bind("click", {
                self: b
            }, function(a) {
                a.data.self.undo();
            }), this.funcbar.find(".drawr-function-redo").bind("click", {
                self: b
            }, function(a) {
                a.data.self.redo();
            }), this.funcbar.find(".drawr-function-zoomin").bind("click", {
                self: b
            }, function(a) {
                a.data.self.zoomin();
            }), this.funcbar.find(".drawr-function-zoomout").bind("click", {
                self: b
            }, function(a) {
                a.data.self.zoomout();
            }), this.funcbar.find(".drawr-function-brush").bind("click", {
                self: b
            }, function(a) {
                a.data.self.bindStrokeCanvas("brush");
            }), this.funcbar.find(".drawr-function-hand").bind("click", {
                self: b
            }, function(a) {
                a.data.self.bindStrokeCanvas("hand");
            }), this.funcbar.find(".drawr-function-clear").bind("click", {
                self: b
            }, function(b) {
                a.confirm("全消しします。よろしいですか？(この操作はアンドゥ可能です)") && (b.data.self.clearCanvas(), b.data.self.addHistory());
            }), this.funcbar.find(".drawr-function-resize").bind("click", {
                self: b
            }, function(a) {
                a.data.self.beginResize();
            }), colon.test.storage && a.JSON && (this.funcbar.find(".drawr-function-save-backup").bind("click", {
                self: b
            }, function(a) {
                a.data.self.saveBackup();
            }), this.funcbar.find(".drawr-function-load-backup").bind("click", {
                self: b
            }, function(a) {
                a.data.self.loadBackup();
            }));
        },
        addHistory: function() {
            var a = this.historyMax + 1;
            null === this._historyUndo ? this._historyUndo = 1 : this._historyIndex - this._historyUndo >= this.historyMax && (this._historyUndo = this._historyRedo - this.historyMax + 1), 
            this._historyIndex++, this._historyRedo = this._historyIndex, this.historyContext.putImageData(this.baseContext.getImageData(0, 0, this.width, this.height), 0, this._historyIndex % a * this._maxHeight), 
            this.updateHistoryUI();
        },
        undo: function() {
            this._historyIndex > this._historyUndo && this._doHistory(-1);
        },
        redo: function() {
            this._historyIndex < this._historyRedo && this._doHistory(1);
        },
        _doHistory: function(a) {
            var b = this.historyMax + 1;
            this._historyIndex += a, this.baseContext.putImageData(this.historyContext.getImageData(0, this._historyIndex % b * this._maxHeight, this._maxWidth, this._maxHeight), 0, 0), 
            this.updateHistoryUI();
        },
        zoomin: function() {
            this.zoomScale < this.maxZoomScale && this._doZoom(2);
        },
        zoomout: function() {
            this.zoomScale > this.minZoomScale && this._doZoom(.5);
        },
        _doZoom: function(a) {
            this.zoomScale *= a;
            var c = this.width * this.zoomScale, d = this.height * this.zoomScale;
            b.each([ this.baseCanvas, this.strokeCanvas ], function() {
                b(this).css("width", c + "px").css("height", d + "px");
            });
        },
        drag: function() {},
        updateHistoryUI: function() {
            this.funcbar.find(".drawr-function-undo").attr("disabled", this._historyIndex <= this._historyUndo), 
            this.funcbar.find(".drawr-function-redo").attr("disabled", this._historyIndex >= this._historyRedo);
        },
        clearContext: function(a, b) {
            b ? a.clearRect(b.left, b.top, b.right - b.left, b.bottom - b.top) : a.clearRect(0, 0, this.width, this.height);
        },
        clearCanvas: function() {
            this.baseContext.fillRect(0, 0, this._maxWidth, this._maxHeight);
        },
        setLineAlpha: function(a) {
            this.lineAlpha !== a && (this.lineAlpha = a.toString(), this.strokeCanvas.css("opacity", this.lineAlpha), 
            this.curColorBlock.css("opacity", this.lineAlpha), .5 === a ? this.alphaToggle.prop("checked", !0) : this.alphaToggle.removeAttr("checked"));
        },
        toggleLineAlpha: function() {
            this.setLineAlpha(this.alphaToggle.is(":checked") ? 1 : .5);
        },
        setLineWidthIndex: function(a) {
            if (!this._isMouseDown) {
                var b, c;
                switch (typeof a) {
                  case "string":
                    b = this.widthList.indexOf(this.lineWidth) + parseInt(a, 10);
                    break;

                  case "number":
                    b = a;
                }
                c = this.widthList[b], c && (this.setLineWidth(c), this.displayBrushPreview({}, this._bPrevX, this._bPrevY));
            }
        },
        setLineWidth: function(a) {
            var b = this.widthSlider.width() - 1, c = this.widthList.length - 1, d = b / c;
            if (this.lineWidth !== a) {
                this.lineWidth = a;
                var e = this.widthList.indexOf(a);
                this.widthSlider.find(".nob").css("left", "" + Math.floor(e * d) + "px").attr("data-tooltip", "太さ:" + a), 
                this.curColorBlock.css("width", a + "px").css("height", a + "px");
            }
        },
        setLineColor: function(a) {
            this.lineColor = a, this.curColorBlock.css("background-color", this.lineColor).parent().attr("data-tooltip", "現在の色:" + this.lineColor.toString()).addClass("_ui-tooltip");
        },
        displayBrushPreview: function(a, b, c) {
            var d = .5 * this.lineWidth, e = 15, f = 2 * e;
            this.strokeContext.clearRect(this._bPrevX - e, this._bPrevY - e, f, f), "mouseout" !== a.type && (this.strokeContext.save(), 
            this.strokeContext.beginPath(), this.strokeContext.arc(b, c, d, 0, 2 * Math.PI, !1), 
            this.strokeContext.fillStyle = this.lineColor, this.strokeContext.fill(), this.strokeContext.restore(), 
            this._bPrevX = b, this._bPrevY = c);
        },
        setUserSelect: function(a) {
            a = a || "none", pixiv.body.css({
                "-moz-user-select": a,
                "-webkit-user-select": a
            });
        },
        getMousePosition: function(a) {
            var c = b(a.target).offset();
            return {
                x: Math.round((a.pageX - c.left) / this.zoomScale),
                y: Math.round((a.pageY - c.top) / this.zoomScale)
            };
        },
        oncontextmenu: function(a) {
            var b = a.data.self, c = b.getMousePosition(a), d = b.baseContext.getImageData(c.x, c.y, 1, 1), e = (d.data[0] << 16) + (d.data[1] << 8) + d.data[2];
            return e = "#" + ("000000" + e.toString(16)).slice(-6), b.setLineColor(e), b.toolbar.find(".drawr-tool-color.current").removeClass("current"), 
            !1;
        },
        onbrush: function(a) {
            var c = a.data.self, d = c.getMousePosition(a);
            if (3 !== a.which) {
                if ("mousedown" !== a.type && !c._isMouseDown) return "mouseout" === a.type && c.setUserSelect("text"), 
                c.displayBrushPreview(a, d.x, d.y), void (c.mouseX = c.mouseY = null);
                var e = 2;
                switch (a.type) {
                  case "mousedown":
                    c._isMouseDown = !0, c.strokeContext.lineWidth = c.lineWidth, c.strokeContext.strokeStyle = c.lineColor, 
                    c._strokeRect = {
                        left: d.x - c.lineWidth - e,
                        top: d.y - c.lineWidth - e,
                        right: d.x + c.lineWidth + e,
                        bottom: d.y + c.lineWidth + e
                    }, c.setUserSelect("none"), b(document).bind("mouseup", a.data, c.onbrush), c.mouseX = d.x, 
                    c.mouseY = d.y;
                    break;

                  case "mouseout":
                  case "mouseover":
                  case "mousemove":
                    c._isMouseDown && null !== c.mouseX && null !== c.mouseY && (c._strokeRect.left = Math.max(Math.min(c._strokeRect.left, d.x - c.lineWidth - e), 0), 
                    c._strokeRect.top = Math.max(Math.min(c._strokeRect.top, d.y - c.lineWidth - e), 0), 
                    c._strokeRect.right = Math.min(Math.max(c._strokeRect.right, d.x + c.lineWidth + e), c.width), 
                    c._strokeRect.bottom = Math.min(Math.max(c._strokeRect.bottom, d.y + c.lineWidth + e), c.height), 
                    c.strokeContext.beginPath(), c.strokeContext.moveTo(c.mouseX, c.mouseY), c.strokeContext.lineTo(d.x, d.y), 
                    c.strokeContext.stroke()), "mouseout" === a.type && (d.x = null, d.y = null), c.mouseX = d.x, 
                    c.mouseY = d.y;
                    break;

                  case "mouseup":
                    if (!c._isMouseDown) return;
                    var f = c._strokeRect;
                    c.baseContext.save(), c.baseContext.globalAlpha = c.lineAlpha, c.baseContext.drawImage(c.strokeCanvas[0], f.left, f.top, f.right - f.left, f.bottom - f.top, f.left, f.top, f.right - f.left, f.bottom - f.top), 
                    c.baseContext.restore(), c.clearContext(c.strokeContext, c._strokeRect), c.addHistory(), 
                    c.mouseX = null, c.mouseY = null, a.currentTarget !== c.strokeCanvas[0] && c.setUserSelect("text"), 
                    b(document).unbind("mouseup", c.onbrush), c._isMouseDown = !1;
                }
                a.preventDefault();
            }
        },
        onhand: function(a) {
            var c = a.data.self, d = c.getMousePosition(a);
            if (3 !== a.which) {
                if ("mousedown" !== a.type && !c._isMouseDown) return "mouseout" === a.type && c.setUserSelect("text"), 
                void (c.mouseX = c.mouseY = null);
                switch (a.type) {
                  case "mousedown":
                    c._isMouseDown = !0, c.setUserSelect("none"), b(document).bind("mouseup", a.data, c.onhand), 
                    c.mouseX = d.x, c.mouseY = d.y;
                    break;

                  case "mouseout":
                  case "mouseover":
                  case "mousemove":
                    if (c._isMouseDown && c.zoomScale > 1) {
                        var e = d.x - c.mouseX, f = d.y - c.mouseY, g = b(".drawr-canvases");
                        if (Math.abs(e) < 5 && Math.abs(f) < 5) break;
                        g.scrollLeft(g.scrollLeft() - e * c.zoomScale).scrollTop(g.scrollTop() - f * c.zoomScale);
                    }
                    break;

                  case "mouseup":
                    if (!c._isMouseDown) return;
                    b(document).unbind("mouseup", c.onhand), c._isMouseDown = !1;
                }
                a.preventDefault();
            }
        },
        convert: function(c) {
            try {
                var d = c.data.self;
                d.outputTarget.val(d.baseCanvas[0].toDataURL().replace(/^.*,/, "")), b(a).unbind("beforeunload");
            } catch (e) {
                return !1;
            }
            return !0;
        },
        dummy: null
    }, pixiv.ui.painter = {
        setup: d,
        painterList: [],
        applyMethod: e
    };
}(this, jQuery), function() {
    "use strict";
    window.RANKING_ATTR_FILTER_ITEMS = "rankingAttrFilterItems", window.RANKING_ATTR_FILTER_MENU_HIDDEN = "rankingAttrFilterMenuHidden";
}.call(this), function() {
    "use strict";
    colon.ns("pixiv.tracker.history", {
        openDetail: function(a) {
            colon.ga.trackEvent([ "history", "history_click_illust" ]), pixiv.user.premium ? pixiv.api.track({
                mode: "illust_detail_activity",
                context: "history",
                illust_id: a
            }) : pixiv.api.track({
                mode: "illust_detail_activity",
                context: "trial_history",
                illust_id: a
            });
        },
        openRelated: function(a) {
            colon.ga.trackEvent([ "history", "history_click_recommend" ]), pixiv.user.premium ? pixiv.api.track({
                mode: "illust_detail_activity",
                context: "history_recommend",
                illust_id: a
            }) : pixiv.api.track({
                mode: "illust_detail_activity",
                context: "trial_history_recommend",
                illust_id: a
            });
        },
        rate: function() {
            colon.ga.trackEvent([ "history", "rate" ]);
        },
        rateTrial: function() {
            colon.ga.trackEvent([ "history", "rate_trial" ]);
        },
        bookmark: function() {
            colon.ga.trackEvent([ "history", "bookmark" ]);
        },
        bookmarkTrial: function() {
            colon.ga.trackEvent([ "history", "bookmark_trial" ]);
        },
        comment: function() {
            colon.ga.trackEvent([ "history", "comment" ]);
        },
        commentTrial: function() {
            colon.ga.trackEvent([ "history", "comment_trial" ]);
        }
    });
}.call(this), function() {
    "use strict";
    colon.ns("pixiv.alarm", {
        send: function(a, b) {
            null == a && (a = ""), a = "[alarm] " + a, window.JSON && (a += ": " + JSON.stringify(b)), 
            window._send(a, location.href, null);
        }
    });
}.call(this), function() {
    "use strict";
    var a, b, c, d, e;
    for ($.ajaxPrefilter(function(a, b, c) {
        "script" !== a.dataType && !a.crossDomain && pixiv.context.token && (window.FormData && a.data instanceof FormData ? a.data.append("tt", pixiv.context.token) : a.data = $.param($.extend(a.data && colon.query.parse(a.data), {
            tt: pixiv.context.token
        })));
    }), colon.ns("pixiv.api", {
        cache: {},
        request: function(a, b, c, d) {
            return null == d && (d = {}), d.filter = function(a, b) {
                return a && !a.error ? $.Deferred().resolveWith(this, arguments) : $.Deferred().rejectWith(this, [ a, b, a && (a.message || a.error) ]);
            }, colon.req.to(a, b, c, d);
        }
    }), e = [ "GET", "POST", "PUT", "DELETE" ], a = function(a) {
        return pixiv.api[a.toLowerCase()] = function(b, c, d) {
            return this.request(a, b, c, d);
        };
    }, b = 0, c = e.length; c > b; b++) d = e[b], a(d);
    colon.ns("pixiv.api", {
        track: function(a, b) {
            return pixiv.api.post("/rpc/index.php", a, b);
        }
    }), colon.ns("pixiv.api.filter", {
        request: function(a, b, c) {
            return pixiv.api.post("/rpc/index.php", {
                mode: a,
                tag: b
            }, c);
        },
        add: function(a, b) {
            return pixiv.api.filter.request("add_thumbnail_filter_tag", a, b);
        },
        remove: function(a, b) {
            return pixiv.api.filter.request("delete_thumbnail_filter_tag", a, b);
        }
    }), colon.ns("pixiv.api.illust", {
        rate: function(a, b, c) {
            return pixiv.api.post("/rpc_rating.php", {
                mode: "save",
                i_id: a,
                score: b
            }, c);
        },
        bookmark: function(a, b, c, d, e) {
            return null == b && (b = !1), null == c && (c = ""), null == d && (d = []), pixiv.api.post("/rpc/index.php", {
                mode: "save_illust_bookmark",
                illust_id: a,
                restrict: Number(b),
                comment: c,
                tags: d.join(" ")
            });
        },
        bookmarkItem: function(a, b, c) {
            return pixiv.api.get("/rpc/index.php", {
                mode: "get_bookmark_illusts",
                max_bookmark_id: a,
                num: b || 100
            }, c);
        },
        historyItem: function(a, b, c, d) {
            return pixiv.api.get("/rpc/index.php", {
                mode: "get_view_history",
                date: a.getFullYear() + "-" + colon.padding(a.getMonth() + 1) + "-" + colon.padding(a.getDate()),
                before: b,
                count: c || 100
            }, d);
        },
        clearHistory: function(a) {
            return pixiv.api.post("/rpc/index.php", {
                mode: "save_illust_view_history_clear_time"
            }, a);
        },
        detail: function(a, b, c) {
            return pixiv.api.get("/rpc/index.php", {
                mode: "get_illust_detail_by_ids",
                illust_ids: a.join(),
                context: b
            }, c);
        },
        relatedList: function(a, b, c) {
            return pixiv.api.get("/rpc/index.php", {
                mode: "get_recommend_illusts",
                ids: a,
                num: b || 100
            }, c);
        }
    }), colon.ns("pixiv.api.illust.comment", {
        item: function(a, b) {
            return pixiv.api.get("/rpc/get_comment.php", {
                comment_id: a,
                mode: b ? "all" : null
            });
        },
        post: function(a, b, c, d) {
            return pixiv.api.post("/rpc/post_comment.php", {
                type: "comment",
                illust_id: a,
                author_user_id: b,
                comment: c,
                parent_id: d || null
            });
        },
        more: function(a, b, c) {
            return pixiv.api.post("/rpc_comment_history.php", {
                i_id: a,
                u_id: b,
                p: c
            });
        },
        "delete": function(a, b) {
            return pixiv.api.post("/rpc_delete_comment.php", {
                i_id: a,
                del_id: b
            });
        }
    }), colon.ns("pixiv.api.illust.sticker", {
        post: function(a, b, c, d) {
            return pixiv.api.post("/rpc/post_comment.php", {
                type: "stamp",
                illust_id: a,
                author_user_id: b,
                stamp_id: c,
                parent_id: d || null
            });
        }
    }), colon.ns("pixiv.api.novel", {
        detail: function(a, b) {
            return pixiv.api.get("/novel/rpc/index.php", {
                mode: "get_novel_detail_by_ids",
                novel_ids: a.join()
            }, b);
        },
        historyItem: function(a, b, c, d) {
            return pixiv.api.get("/novel/rpc/index.php", {
                mode: "get_view_history",
                date: a.getFullYear() + "-" + colon.padding(a.getMonth() + 1) + "-" + colon.padding(a.getDate()),
                before: b,
                count: c || 100
            }, d);
        },
        clearHistory: function(a) {
            return pixiv.api.post("/novel/rpc/index.php", {
                mode: "save_novel_view_history_clear_time"
            }, a);
        }
    }), colon.ns("pixiv.api.novel.comment", {
        item: function(a, b) {
            return pixiv.api.get("/novel/rpc/get_comment.php", {
                comment_id: a,
                mode: b ? "all" : null
            });
        },
        post: function(a, b, c, d) {
            return pixiv.api.post("/novel/rpc/post_comment.php", {
                type: "comment",
                novel_id: a,
                author_user_id: b,
                comment: c,
                parent_id: d || null
            });
        },
        more: function(a, b, c) {
            return pixiv.api.post("/novel/rpc_comment_history.php", {
                i_id: a,
                u_id: b,
                p: c
            });
        },
        "delete": function(a, b) {
            return pixiv.api.post("/novel/rpc_delete_comment.php", {
                i_id: a,
                del_id: b
            });
        }
    }), colon.ns("pixiv.api.novel.sticker", {
        post: function(a, b, c, d) {
            return pixiv.api.post("/novel/rpc/post_comment.php", {
                type: "stamp",
                novel_id: a,
                author_user_id: b,
                stamp_id: c,
                parent_id: d || null
            });
        }
    });
}.call(this), function() {
    "use strict";
    !function(a) {
        return colon.ns("pixiv.badge", {
            items: {},
            update: function(b) {
                var c, d, e, f;
                b && a.extend(this.items, b), c = 0, e = this.items;
                for (d in e) f = e[d], c += +f;
                colon.html.title(function(a) {
                    return function(a, b) {
                        return c ? "(" + c + ") " + b : null;
                    };
                }(this));
            }
        });
    }(jQuery);
}.call(this), function() {
    "use strict";
    $.browser = {
        msie: colon.ua.ie
    }, colon.storage.localStorage("newUser", null), colon.ns("pixiv.fallback"), pixiv.fallback.post = function(a) {
        var b, c, d, e;
        return a = $(a), d = !1, b = $.Deferred(), e = "post." + colon.id(), a.attr("target", e), 
        c = $('<iframe name="' + e + '" src="about:blank" class="_fallback-post-iframe"></iframe>').on("load", function(c) {
            var e;
            if (d) {
                try {
                    e = JSON.parse($(this.contentWindow.document).text());
                } catch (f) {
                    c = f;
                }
                b.resolve(e);
            } else a[0].submit(), d = !0;
        }).appendTo("body"), b.promise();
    }, pixiv.fallback.placeholder = function(a) {
        a = $(a), a.each(function() {
            var a, b, c;
            b = $(this), b.data("fallback-enabled") || (c = $.trim(b.attr("placeholder")), c && (b.wrap('<div class="_placeholder-container">'), 
            a = $('<div class="placeholder">' + c + "</div>").insertBefore(b).on("click", function() {
                a.addClass("_hidden"), b[0].focus();
            }), b.on("focus", function() {
                a.addClass("_hidden");
            }).on("blur", function() {
                b.val() || a.removeClass("_hidden");
            }).blur().data("fallback-enabled", !0)));
        });
    }, pixiv.fallback.placeholder.supported = "placeholder" in document.createElement("input"), 
    pixiv.fallback.placeholder.setup = function(a) {
        pixiv.fallback.placeholder.supported || pixiv.fallback.placeholder($("input[placeholder], textarea[placeholder]", a));
    };
}.call(this), function() {
    "use strict";
    var a = function(a, c) {
        function d() {
            this.constructor = a;
        }
        for (var e in c) b.call(c, e) && (a[e] = c[e]);
        return d.prototype = c.prototype, a.prototype = new d(), a.__super__ = c.prototype, 
        a;
    }, b = {}.hasOwnProperty;
    $(function() {
        colon.dispatcher.connect("/history.php", function() {
            pixiv.user.premium && 0 === pixiv.context.historyTotalCount || (pixiv.History.setup(), 
            pixiv.AreaEvent.setup());
        }).dispatch();
    }), pixiv.History = function() {
        function a(a, b, c) {
            this.type = b, this.container = $(a), this.itemsContainer = $("._history-items", this.container), 
            this.date = pixiv.History.jst(new Date()), (null != c ? c.total : void 0) ? (this.items = c, 
            this.append(!0)) : (this.listType = "bookmark", this.more()), this.watch();
        }
        return a.setup = function() {
            pixiv.user.premium ? new pixiv.History("._history-container", pixiv.context.type, pixiv.context.historyList) : new pixiv.HistoryTrial("._history-container", pixiv.context.type);
        }, a.jst = function(a) {
            var b, c;
            return c = a.getTime(), b = 1e3 * a.getTimezoneOffset() * 60, new Date(c + b + 324e5);
        }, a.findItem = function(a, b) {
            var c, d, e, f;
            if (!a) return !1;
            for (d = e = 0, f = a.length; f > e; d = ++e) if (c = a[d], "" + c.illust_id == "" + b) return [ c, d ];
        }, a.listId = function(a) {
            var b;
            return function() {
                var c, d, e;
                for (e = [], c = 0, d = a.length; d > c; c++) b = a[c], e.push("" + b.illust_id);
                return e;
            }();
        }, a.prototype.expire = 7, a.prototype.data = {}, a.prototype.list = [], a.prototype.listType = "history", 
        a.prototype.items = null, a.prototype.itemCount = 0, a.prototype.date = null, a.prototype.type = "illust", 
        a.prototype.navigationContext = "list", a.prototype.watch = function() {
            colon.d.on("click", ".show-detail", function(a) {
                return function(b) {
                    return a.toggle(b.currentTarget), !1;
                };
            }(this)).on("area", ".history-more", function(a) {
                return function() {
                    a.more();
                };
            }(this)).on("click", ".update-detail", function(a) {
                return function(b) {
                    var c;
                    return null != (c = a.detail) && c.related.updateDetail(b.currentTarget), !1;
                };
            }(this)).on("click", ".rate", $.proxy(this.rate, this)).on("click", ".toggle-bookmark", $.proxy(this.bookmark, this)).on("click", ".add-comment", $.proxy(this.comment, this)).on("click", ".clear-history", $.proxy(this.clearHistory, this)).on("click", ".prev", $.proxy(this.prev, this)).on("click", ".next", $.proxy(this.next, this)), 
            colon.w.on("resize", function(a) {
                return function() {
                    a.resize();
                };
            }(this)), colon.ui.shortcut.bind("ESC", function(a) {
                return function() {
                    return a.close(), !1;
                };
            }(this)).bind("J →", function(a) {
                return function() {
                    return a.next(), !1;
                };
            }(this)).bind("K ←", function(a) {
                return function() {
                    return a.prev(), !1;
                };
            }(this)).bind("↓", function(a) {
                return function() {
                    return a.detail && a.switchContext("detail"), !1;
                };
            }(this)).bind("↑", function(a) {
                return function() {
                    return a.switchContext("list"), !1;
                };
            }(this)).bind("L", function(a) {
                return function() {
                    return a.detail && $(".rate").click(), !1;
                };
            }(this)).bind("B", function(a) {
                return function() {
                    return a.detail && $(".toggle-bookmark").click(), !1;
                };
            }(this)).bind("C", function(a) {
                return function() {
                    return a.detail && window.open($(".add-comment").attr("href"), "_blank"), !1;
                };
            }(this)).bind("V", function(a) {
                return function() {
                    return a.detail && window.open($(".image").attr("href"), "_blank"), !1;
                };
            }(this)).bind("F", function(a) {
                return function() {
                    return a.detail && $(".ui-profile-popup", a.detail.container).mouseenter(), !1;
                };
            }(this));
        }, a.prototype.switchContext = function(a) {
            var b, c;
            ("detail" !== a || (null != (b = this.detail) && null != (c = b.related) ? c.list.length : void 0)) && (this.navigationContext = a, 
            this.current.toggleClass("current", "detail" !== a), this.detail && $(".ui-profile-popup", this.detail.container).mouseleave());
        }, a.prototype.prev = function() {
            "detail" === this.navigationContext ? this.detail.related.prev() : this.current && this.current.prevAll("._history-item").first().click();
        }, a.prototype.next = function() {
            "detail" === this.navigationContext ? this.detail.related.next() : this.current ? this.current.nextAll("._history-item").first().click() : $(".history-item", this.itemsContainer).first().click();
        }, a.prototype.rate = function(a) {
            var b, c, d;
            d = $(a.currentTarget), b = d.dataset("id"), d.addClass("on"), pixiv.api.illust.rate(b, 10), 
            null != (c = this.data[b]) && (c.is_rated = !0), pixiv.tracker.history.rate();
        }, a.prototype.bookmark = function(a) {
            var b, c, d;
            return d = $(a.currentTarget), d.hasClass("on") ? void 0 : (b = d.dataset("id"), 
            d.addClass("on"), pixiv.api.illust.bookmark(b), null != (c = this.data[b]) && (c.is_bookmarked = !0), 
            pixiv.tracker.history.bookmark(), !1);
        }, a.prototype.comment = function(a) {
            pixiv.tracker.history.comment();
        }, a.prototype.clearHistory = function(a) {
            window.confirm(colon.t("履歴をクリアしますか？")) && pixiv.api[this.type].clearHistory().done(function() {
                window.location.reload();
            });
        }, a.prototype.resize = function() {
            var a, b, c, d;
            b = Math.max(970, this.itemsContainer.outerWidth(!0)), c = 250, a = Math.floor(b / c), 
            this.itemsContainer.css("margin", "0 " + (b - c * a) / 2 + "px"), null != (d = this.detail) && d.updateSize();
        }, a.prototype.toggle = function(a) {
            var b;
            a === (null != (b = this.detail) ? b.parent[0] : void 0) ? this.close() : this.open(a);
        }, a.prototype.open = function(a) {
            this.current = $(a), this.switchContext("list"), this.detail ? this.detail.clear() : this.detail = new pixiv.HistoryDetail(this.data, this), 
            this.detail.open(a, this.list), pixiv.tracker.history.openDetail(this.current.data("id"));
        }, a.prototype.close = function() {
            this.detail && (this.switchContext("list"), this.detail.hide(), delete this.detail);
        }, a.prototype.append = function(a) {
            var b, c, d, e, f, g, h, i, j, k, l;
            if (h = this.items.illusts.length, this.items.illusts = function() {
                var a, b, c, d;
                for (c = this.items.illusts, d = [], a = 0, b = c.length; b > a; a++) f = c[a], 
                (f.illust_id || f.id) && d.push(f);
                return d;
            }.call(this), this.items.illusts.length) {
                for (a && (this.itemCounter = this.items.total - (h - this.items.illusts.length), 
                l = this.date.getFullYear(), j = this.date.getMonth(), c = this.date.getDate(), 
                d = l + "-" + colon.padding(j + 1) + "-" + colon.padding(c), b = this.items.total), 
                e = $(colon.template("history-" + this.type + "-items", {
                    items: this.items.illusts,
                    date: d,
                    count: b
                })).appendTo(this.itemsContainer), null == this.current && (this.current = e.first()), 
                this.itemCounter -= this.items.illusts.length, k = this.items.illusts, g = 0, i = k.length; i > g; g++) f = k[g], 
                this.data[f.illust_id] = f;
                Array.prototype.push.apply(this.list, pixiv.History.listId(this.items.illusts)), 
                this.resize();
            }
        }, a.prototype.more = function() {
            return this.loading || this.finished ? void 0 : (this.loading = !0, colon.h.addClass("loading"), 
            this.request().done(function(a) {
                return function() {
                    a.loading = !1, colon.h.removeClass("loading");
                };
            }(this)).fail(function() {}));
        }, a.prototype.request = function() {
            var a, b, c, d;
            return "bookmark" === this.listType ? this.requestBookmark() : (this.itemCounter <= 0 ? (this.date.setDate(this.date.getDate() - 1), 
            --this.expire, d = !0) : b = null != (c = this.list.slice(-1)[0]) ? c.last_view_timestamp : void 0, 
            a = pixiv.api[this.type].historyItem(this.date, b), a.then(function(c) {
                return function(e, f, g, h) {
                    var i, j, k, l, m, n;
                    for (k = [], n = e.body.illusts, l = 0, m = n.length; m > l; l++) j = n[l], j.last_view_timestamp !== b && k.push(j);
                    if (e.body.illusts = k, c.items = e.body, i = c.items.illusts.length) return d && (c.itemCounter = c.items.total - (e.body.illusts.length - i)), 
                    c.append(d), a;
                    if (c.items = null, c.itemCounter = 0, c.expire < 0) {
                        if ("novel" === c.type) return c.finish(), a;
                        c.listType = "bookmark";
                    }
                    return c.request();
                };
            }(this)));
        }, a.prototype.requestBookmark = function() {
            var a;
            return pixiv.api[this.type].bookmarkItem(null != (a = this.lastItem) ? a.bookmark_id : void 0).done(function(a) {
                return function(b, c, d, e) {
                    var f, g, h, i, j;
                    if (!b.body.total && !a.items) return void a.noItem();
                    for (j = b.body.illusts, h = 0, i = j.length; i > h; h++) g = j[h], -1 === a.list.indexOf("" + g.illust_id) && (f = new Date(1e3 * g.bookmark_add_timestamp), 
                    a.items && a.date.toDateString() !== f.toDateString() && (a.append(!0), a.items = null), 
                    a.date = f, null == a.items && (a.items = {
                        total: 0,
                        illusts: []
                    }), a.items.illusts.push(g), ++a.items.total);
                    a.lastItem = g, b.body.illusts.length || (a.append(!0), a.finish());
                };
            }(this));
        }, a.prototype.finish = function() {
            colon.d.off("area"), this.finished = !0;
        }, a.prototype.noItem = function() {
            this.finish(), $(".no-item").removeClass("_hidden");
        }, a;
    }(), pixiv.illustDetail = function() {
        var a;
        return a = {}, function(b, c, d) {
            var e, f, g, h, i, j, k, l, m, n, o, p, q, r;
            if (null == d && (d = {}), p = null != (q = d.preloadCount) ? q : 3, j = [], f = {}, 
            g = function() {
                var d;
                switch (!1) {
                  case !(null != (d = c[b]) ? d.user_id : void 0):
                    return colon.async(c[b]);

                  case !a[b]:
                    return a[b];
                }
            }(), g || (j.push(b), f[b] = $.Deferred()), d.list) for (k = d.list.indexOf(b), 
            e = Math.max(k - p, 0), h = k + p, r = d.list.slice(e, h), l = 0, n = r.length; n > l; l++) i = r[l], 
            c[i] || a[i] || f[i] || (j.push(i), f[i] = $.Deferred());
            for (j.length && pixiv.api.illust.detail(j).done(function(b) {
                var d, e;
                e = b.body;
                for (i in e) d = e[i], d.error || (c[i] = d, f[i].resolve(d), delete a[i]);
            }).fail(function(b) {
                return function() {
                    f[i].rejectWith(null, arguments), delete a[i];
                };
            }(this)), m = 0, o = j.length; o > m; m++) i = j[m], a[i] = f[i].promise();
            return null != g ? g : a[b];
        };
    }(), pixiv.HistoryDetail = function() {
        function a(a, b) {
            this.data = a, this.history = b, this.container = $("._history-detail-container"), 
            this.contentContainer = $(".content", this.container), this.nippleContainer = $(".nipple", this.container);
        }
        return a.prototype.updateTargetId = function() {
            return this.targetId = colon.id();
        }, a.prototype.open = function(a, b) {
            return this.parent = $(a), this.show(this.parent, b);
        }, a.prototype.show = function(a, b) {
            var c, d, e;
            return this.target = $(a), this.target.addClass("current").siblings().removeClass("current"), 
            c = "" + this.target.data("id"), e = this.updateTargetId(), this.visible || (this.container.removeClass("_hidden"), 
            this.visible = !0), (d = this.data[c]) && (d.tmp = !0, this.update(d), delete d.tmp), 
            pixiv.ui.scroll(this.parent), pixiv.illustDetail(c, this.data, {
                list: b
            }).done(function(a) {
                return function(b) {
                    e === a.targetId && (a.update(b), null == a.related && (a.related = new pixiv.HistoryDetailRelated(c, a.data, a)));
                };
            }(this));
        }, a.prototype.hide = function() {
            var a;
            this.target.removeClass("current").siblings().removeClass("current"), null != (a = this.last) && a.css("margin-bottom", ""), 
            this.container.height(0), this.clear(), this.visible = !1;
        }, a.prototype.clear = function() {
            this.related && (this.related.clear(), delete this.related);
        }, a.prototype.update = function(a) {
            var b, c, d;
            this.player && (this.player.dispose(), this.player = null), this.contentContainer.html(colon.template("history-detail-item", a)).find(".prev").toggleClass("_hidden", !this.target.prevAll(".list-item").length).end().find(".next").toggleClass("_hidden", !this.target.nextAll(".list-item").length), 
            this.updateSize(), a.ugoira_meta && (c = $(".image", this.contentContainer), d = c.width(), 
            b = c.height(), this.player = new pixiv.UgokuIllustPlayer(this.contentContainer, JSON.parse(a.ugoira_meta), {
                autoStart: !0,
                autoSize: !0,
                maxWidth: d,
                maxHeight: b
            }));
        }, a.prototype.updateSize = function() {
            var a, b, c, d, e;
            d = this.parent.offset(), c = 140, b = 30, a = Math.max(colon.w.height() - c - b, 621), 
            this.container.css({
                top: d.top + c,
                height: a
            }), this.nippleContainer.css("left", d.left + 120 - 20), $(".image", this.contentContainer).css({
                width: colon.w.width() - 200,
                height: a - 20 - 1 - 10 - 30 - 10 - 15 - 160 - 15
            }), null != (e = this.last) && e.css("margin-bottom", ""), this.last = this.parent.css("margin-bottom", a - 140 + 5);
        }, a;
    }(), pixiv.HistoryDetailRelated = function() {
        function a(a, b, c) {
            this.id = a, this.data = b, this.detail = c, this.container = $(".related-container", this.detail.container), 
            this.itemsContainer = $("._history-related-items", this.container).empty(), this.show();
        }
        return a.prototype.list = [], a.prototype.clear = function() {
            var a;
            null != (a = this.areaEvent) && a.off(), this.itemsContainer.empty();
        }, a.prototype.show = function() {
            return this.container.data("targetId", this.id), pixiv.api.illust.relatedList(this.id).done(function(a) {
                return function(b) {
                    a.id === a.container.data("targetId") && a.detail.related && (a.append(b.body.illusts), 
                    a.container.scrollLeft() && a.container.scrollLeft(0), a.areaEvent = pixiv.AreaEvent.setup(a.container));
                };
            }(this));
        }, a.prototype.append = function(a) {
            var b, c, d, e;
            if (a.length) {
                for (c = 0, d = a.length; d > c; c++) b = a[c], this.data[b.illust_id] = b;
                Array.prototype.push.apply(this.list, pixiv.History.listId(a)), this.container.removeClass("no-related-item"), 
                this.itemsContainer.append(colon.template("history-related-items", {
                    items: a
                })).width(160 * a.length), null != (e = this.areaEvent) && e.watch();
            } else this.container.addClass("no-related-item");
        }, a.prototype.updateDetail = function(a) {
            this.current = $(a), this.detail.show(a, this.list), this.detail.history.switchContext("detail"), 
            pixiv.tracker.history.openRelated($(a).data("id"));
        }, a.prototype.prev = function() {
            var a;
            this.list.length && this.current && (this.current.prev().click(), a = this.current.offset().left, 
            0 > a && this.container.scrollLeft(this.container.scrollLeft() + a - 5));
        }, a.prototype.next = function() {
            var a, b, c;
            this.list.length && (this.current ? this.current.next().click() : $("._history-related-item", this.itemsContainer).first().click(), 
            a = this.current.offset().left, b = this.current.outerWidth(), c = colon.w.width(), 
            colon.w.scrollLeft() + c - a < b && this.container.scrollLeft(this.container.scrollLeft() + a - c + b + 5));
        }, a;
    }(), pixiv.HistoryTrial = function(b) {
        function c(a, b) {
            var c, d, e, f, g;
            switch (this.type = b, this.container = $(a), this.itemsContainer = $("._history-items", this.container), 
            this.date = pixiv.History.jst(new Date()), this.watch(), this.type) {
              case "illust":
                c = "viewed_illust_ids_" + pixiv.user.id, d = "viewed_illust_timestamp_" + pixiv.user.id, 
                e = pixiv.api.illust.detail;
                break;

              case "novel":
                c = "viewed_novel_ids_" + pixiv.user.id, d = "viewed_novel_timestamp_" + pixiv.user.id, 
                e = pixiv.api.novel.detail;
            }
            f = colon.storage.localStorage(c), g = colon.storage.localStorage(d), f && ($(".clear-history").removeClass("_hidden"), 
            e(f).done(function(a) {
                return function(b) {
                    var c, d, e, h, i, j, k;
                    j = b.body;
                    for (d in j) e = j[d], e.error || (b[d] = e);
                    for (k = 0, h = 0, i = f.length; i > h; h++) d = f[h], b[d] && (++k, $.extend(b[d], {
                        trial: k > 5,
                        novel: "novel" === a.type
                    }), c = new Date(1e3 * g[d]), a.items && a.date.toDateString() !== c.toDateString() && (a.items.total = a.items.illusts.length, 
                    a.append(!0), a.items = null), a.date = c, null == a.items && (a.items = {
                        total: 0,
                        illusts: []
                    }), a.items.illusts.push(b[d]));
                    a.items.illusts.length && (a.items.total = a.items.illusts.length, a.append(!0));
                };
            }(this)));
        }
        return a(c, b), c.storage = function(a, b, c, d, e) {
            return colon.storage.localStorage("viewed_" + a + "_" + b + "_" + c, d, e);
        }, c.record = function() {
            if (pixiv.user.loggedIn && !pixiv.user.premium && !pixiv.context.self) switch (pixiv.context.type) {
              case "illust":
                this.addToStorage(pixiv.user.id, pixiv.context.illustId, 6048e5, "viewed_illust_ids", "viewed_illust_timestamp");
                break;

              case "novel":
                this.addToStorage(pixiv.user.id, pixiv.context.novelId, 6048e5, "viewed_novel_ids", "viewed_novel_timestamp");
            }
        }, c.addToStorage = function(a, b, c, d, e) {
            var f, g, h, i, j;
            i = 50, g = colon.storage.localStorage(d + "_" + a), g || (g = []), h = g.indexOf(b), 
            h >= 0 && g.splice(h, 1), g.unshift(b), i < g.length && (f = g.splice(i, 1)), colon.storage.localStorage(d + "_" + a, g, c), 
            j = colon.storage.localStorage(e + "_" + a), j || (j = {}), j[b] = parseInt(new Date() / 1e3), 
            f >= 0 && delete j[f], colon.storage.localStorage(e + "_" + a, j, c);
        }, c.prototype.popup = function() {
            return colon.ui.modal.next("._history-invitation-modal", {
                block: !0
            }), !1;
        }, c.prototype.rate = function() {
            return pixiv.tracker.history.rateTrial(), this.popup();
        }, c.prototype.bookmark = function() {
            return pixiv.tracker.history.bookmarkTrial(), this.popup();
        }, c.prototype.comment = function() {
            return pixiv.tracker.history.commentTrial(), this.popup();
        }, c.prototype.clearHistory = function() {
            window.confirm(colon.t("履歴をクリアしますか？")) && (pixiv.HistoryTrial.storage(this.type, "ids", pixiv.user.id, null), 
            pixiv.HistoryTrial.storage(this.type, "timestamp", pixiv.user.id, null), window.location.reload());
        }, c.prototype.watch = function() {
            c.__super__.watch.call(this), colon.d.on("click", "._history-items .trial", $.proxy(this.popup, this));
        }, c.prototype.more = function() {}, c;
    }(pixiv.History);
}.call(this), function() {
    "use strict";
    colon.ns("pixiv.api.work", {
        modal: function(a, b) {
            return pixiv.api.get("/rpc/index.php", {
                mode: "work_details_modal",
                id: a
            }, b);
        }
    }), $(function() {
        pixiv.WorkModal.setup();
    }), pixiv.WorkModal = function() {
        function a() {}
        return a.setup = function() {
            colon.d.on("click.workModal", "._work-modal-target", function() {
                var a;
                return (a = /id=(\d+)$/.exec($(this).attr("href"))[1]) ? (pixiv.api.work.modal(a).done(function(a) {
                    var b;
                    b = $("._work-modal .body").html(a.body.html), pixiv.ui.fixed.update(b), colon.ui.modal.next("._work-modal", {
                        block: !0
                    });
                }), !1) : void 0;
            });
        }, a;
    }();
}.call(this), function() {
    "use strict";
    var a;
    $(function() {
        colon.dispatcher.connect("/mypage.php", function() {
            pixiv.mypage.setup(), pixiv.userRecommend.introduction.setup(), a(), pixiv.modalPremiumPromotion.open();
        }).dispatch();
    }), colon.ns("pixiv.tutorial", {
        open: function() {
            var a;
            if (a = colon.$.find("._tutorial-modal")) return colon.ui.modal.push(a, {
                block: !0,
                disposable: !0
            }), a.on("click", function(a) {
                this === a.target && $(".slider-arrow:last", this).click();
            }), $(".ui-tab-container", a).on("uiTabUpdate", function(b, c, d) {
                var e, f, g, h;
                e = $(".slider-arrow", a), g = e.first(), f = $(".slider-arrow-right", e.last()), 
                h = $(".slider-btn-right", a), g[c.is(":first-child") ? "addClass" : "removeClass"]("_hidden"), 
                c.is(":last-child") ? (f.addClass("_hidden"), h.removeClass("_hidden")) : (f.removeClass("_hidden"), 
                h.addClass("_hidden")), c.length || colon.ui.modal.close();
            });
        }
    }), colon.ns("pixiv.modalPremiumPromotion", {
        open: function() {
            var a;
            if (!colon.$.find("._tutorial-modal") && (a = colon.$.find("._premium-promotion-modal"))) return colon.ui.modal.push(a, {
                block: !0,
                disposable: !0
            }), a.on("click", function(a) {
                this === a.target && $(".slider-arrow:last", this).click();
            }), colon.$.find(".china-popup-top-alipay a").on("click", function(a) {
                a.stopPropagation();
            }), $(".ui-tab-container", a).on("uiTabUpdate", function(b, c, d) {
                var e, f, g;
                e = $(".slider-arrow", a), g = e.first(), f = $(".slider-arrow-right", e.last()), 
                g[c.is(":first-child") ? "addClass" : "removeClass"]("_hidden"), c.is(":last-child") ? f.addClass("_hidden") : f.removeClass("_hidden"), 
                c.length || colon.ui.modal.close();
            });
        }
    }), colon.ns("pixiv.modalPromotion", {
        open: function() {
            var a;
            if (!colon.$.find("._tutorial-modal") && !colon.storage.localStorage("hideModalPromotion") && (a = colon.$.find("._matsuri-modal"))) return colon.ui.modal.push(a, {
                block: !0,
                disposable: !0
            }), a.on("uimodalclose", function() {
                colon.storage.localStorage("hideModalPromotion", !0);
            }).on("click", function(a) {
                this === a.target && $(".slider-arrow:last", this).click();
            }), $(".ui-tab-container", a).on("uiTabUpdate", function(b, c, d) {
                var e, f, g, h;
                e = $(".slider-arrow", a), g = e.first(), f = $(".slider-arrow-right", e.last()), 
                h = $(".slider-btn-right", a), g[c.is(":first-child") ? "addClass" : "removeClass"]("_hidden"), 
                c.is(":last-child") ? (f.addClass("_hidden"), h.removeClass("_hidden")) : (f.removeClass("_hidden"), 
                h.addClass("_hidden")), c.length || colon.ui.modal.close();
            });
        }
    }), colon.ns("pixiv.premiumTutorial", {
        open: function() {
            var a;
            if (a = colon.$.find("._premium-tutorial-modal")) return colon.ui.modal.push(a, {
                block: !0,
                disposable: !0
            }), a.on("uimodalclose", function() {
                colon.storage.localStorage("hideModalPromotion", !0);
            });
        }
    }), colon.ns("pixiv.userRecommend.introduction", {
        setup: function() {
            colon.storage.cookie("show_welcome_modal") && this.openTutorial(), colon.storage.localStorage("hideUserRecommendIntroduction") || ($(".user-recommend-introduction").removeClass("hidden"), 
            colon.d.on("click", ".action-open-user-recommendation", $.proxy(this.open, this)).on("click", ".action-close-recommend-introduction", $.proxy(this.hide, this)));
        },
        openTutorial: function() {
            var a, b;
            a = $(".user-recommendation-modal"), colon.storage.cookie("show_welcome_modal", null), 
            a.is(":visible") || (new pixiv.UserList(a, {
                modal: !0,
                sampleUser: null != (b = colon.storage.localStorage("recent-prelogin-visited-users")) ? b.join() : void 0,
                followingBoosterModel: 2
            }), colon.ui.modal.push(a, {
                block: !0
            }), a.on("uimodalclose", function(a) {
                return function() {
                    pixiv.tutorial.open();
                };
            }(this)));
        },
        open: function() {
            var a;
            a = $(".user-recommendation-modal"), a.is(":visible") || (new pixiv.UserList(a, {
                modal: !0,
                sampleUser: pixiv.context.userRecommendSampleUser,
                followingBoosterModel: 1
            }), colon.ui.modal.push(a, {
                block: !0
            }), a.on("uimodalclose", function(a) {
                return function() {
                    pixiv.tutorial.open();
                };
            }(this)));
        },
        hide: function() {
            $(".user-recommend-introduction").slideUp(), colon.storage.localStorage("hideUserRecommendIntroduction", !0);
        }
    }), a = function() {
        var a;
        if (pixiv.context.hasUserRecommendationCache === !1 && (a = colon.$.find("#user-recommend-container"))) return pixiv.api.recommender.user(pixiv.context.userRecommendSampleUser).done(function(b) {
            return b = null != b ? b.recommend_users : void 0, (null != b ? b.length : void 0) ? a.removeClass("_hidden").find(".user-list").append(colon.template("user-recommend-list", {
                items: b
            })) : void 0;
        });
    }, colon.ns("pixiv.mypage", {
        setup: function() {
            pixiv.modalPromotion.open(), pixiv.premiumTutorial.open(), pixiv.mypageModule.setup();
        },
        toggleFavoriteTagEdit: function() {
            var a;
            return a = $("#edit-favorite-tag"), a.dataset("initialized") || new pixiv.ui.Tag($("input.ui-tag", a)), 
            a.dataset("initialized", !0).slideToggle("fast"), !1;
        }
    }), colon.ns("pixiv.mypageModule", {
        cookieName: "module_orders_mypage",
        setup: function() {
            this.container = $("#item-container"), this.parse() && this.container.on("click", ".action", function(a) {
                return function(b) {
                    var c;
                    return c = $(b.currentTarget), a[c.dataset("action")](c.closest(".item").dataset("name")), 
                    !1;
                };
            }(this));
        },
        parse: function() {
            return this.config = colon.storage.config(null, {
                expires: 31536e6
            }, {
                update: !1
            }), this.data = JSON.parse(this.config(this.cookieName));
        },
        update: function() {
            this.config(this.cookieName, JSON.stringify(this.data));
        },
        find: function(a) {
            var b, c, d, e, f;
            for (f = this.data, b = d = 0, e = f.length; e > d; b = ++d) if (c = f[b], c.name === a) return b;
            return -1;
        },
        up: function(a) {
            var b, c, d, e;
            (b = this.find(a)) <= 0 || (c = this.data.splice(b, 1)[0], this.data.splice(b - 1, 0, c), 
            d = $("> .item", this.container), e = d.index(d.filter("." + colon.letterCase(a, "css"))), 
            -1 !== e && d.eq(e).insertBefore(d.eq(e - 1)), this.update());
        },
        down: function(a) {
            var b, c, d, e;
            b = this.find(a), b >= this.data.length - 1 || (c = this.data.splice(b, 1)[0], this.data.splice(b + 1, 0, c), 
            d = $("> .item", this.container), e = d.index(d.filter("." + colon.letterCase(a, "css"))), 
            e !== d.length - 1 && d.eq(e).insertAfter(d.eq(e + 1)), this.update());
        },
        toggle: function(a) {
            var b, c;
            -1 !== (b = this.find(a)) && (c = $("> .item." + colon.letterCase(a, "css"), this.container), 
            this.data[b].visible ? (c.addClass("closed"), this.data[b].visible = !1) : (c.removeClass("closed"), 
            this.data[b].visible = !0), this.update(), $("> .content", c).length || location.reload());
        }
    });
}.call(this), function() {
    "use strict";
    !function(a) {
        return colon.ns("pixiv.api.notification", {
            count: function(a) {
                return pixiv.api.get("/rpc/notify_count.php", {
                    op: "count_unread"
                }, a);
            },
            message: function(a) {
                return pixiv.api.post("/rpc/notify_message.php", {
                    op: "notify"
                }, a);
            },
            popboard: function(a) {
                return pixiv.api.post("/rpc/notify.php", {
                    op: "notify"
                }, a);
            }
        }), pixiv.Notification = function() {
            function b(b) {
                this.type = b, this.container = "#notification-" + this.type, this.buttonContainer = a("." + this.type, pixiv.Notification.container), 
                this.countContainer = a(".count", this.buttonContainer), colon.d.on("notificationCount", function(a) {
                    return function(b, c) {
                        return null != (null != c ? c[a.type] : void 0) && a.updateUnreadCount(c[a.type]), 
                        !1;
                    };
                }(this)), a(".notification-button", this.buttonContainer).on("click", function(a) {
                    return function() {
                        return a.toggle(), !1;
                    };
                }(this));
            }
            return b.intervalCount = 1, b.unreadCount = {}, b.setup = function() {
                (this.container = colon.$.find(".notifications")) && (pixiv.Notification.message = new pixiv.Notification("message"), 
                pixiv.Notification.popboard = new pixiv.Notification("popboard"), this.loop = new colon.Loop(this.interval()), 
                colon.storage.send("pixiv.Notification.intervalCount", this.intervalCount), colon.storage.send("pixiv.Notification.updateCount", [ pixiv.user.unreadCount ]), 
                this.updateCount(pixiv.user.unreadCount), this.setupNotification(), this.start());
            }, b.setupNotification = function() {
                "default" === colon.notification.status() && colon.d.on("click", "._notification-request-permission", function() {
                    colon.notification.request(function(b) {
                        "default" !== b && a("._notification-request-permission").slideUp(function() {
                            a(this).remove();
                        });
                    });
                });
            }, b.interval = function() {
                return 6e4 * Math.min(Math.pow(2, this.intervalCount), 8);
            }, b.start = function() {
                colon.test.storage && (this.stop(), this.timer = this.loop.interval(a.proxy(this.request, this)));
            }, b.stop = function() {
                this.timer && this.loop.clear(this.timer), this.timer = null;
            }, b.request = function() {
                var a;
                return a = this.interval(), pixiv.api.notification.count({
                    cache: a
                }).done(function(a) {
                    return function(b, c) {
                        var d;
                        "success" === c && ((d = a.totalCount()) && colon.notification.show(colon.t("メッセージ・ポップボード"), {
                            body: colon.template("web-notification-notification", {
                                count: d
                            }),
                            icon: "/favicon.ico"
                        }), colon.storage.send("pixiv.Notification.intervalCount", ++a.intervalCount), colon.storage.send("pixiv.Notification.updateCount", [ b ]), 
                        a.updateCount(b));
                    };
                }(this)).fail(function(a) {
                    return function(b, c, d) {
                        "cache" !== c && a.stop();
                    };
                }(this));
            }, b.totalCount = function() {
                return (this.unreadCount.message || 0) + (this.unreadCount.popboard || 0);
            }, b.updateCount = function(b) {
                colon.d.trigger("notificationCount", b), a.extend(this.unreadCount, b), pixiv.badge.update(b);
            }, b.prototype.updateUnreadCount = function(b) {
                var c;
                c = a("a", this.buttonContainer), b ? (b > 10 && (b = "10+"), this.countContainer.text(b), 
                c.addClass("unread")) : (this.countContainer.text("0"), c.removeClass("unread"));
            }, b.prototype.toggle = function() {
                var b;
                return this.buttonContainer.hasClass("active") ? void pixiv.ui.modal.pop() : (b = a(".active", pixiv.Notification.container), 
                b.length && (b.removeClass("active"), pixiv.ui.modal.pop()), this.buttonContainer.addClass("active"), 
                pixiv.ui.modal.push(this.container).on("uimodalclose", function(a) {
                    return function() {
                        a.buttonContainer.removeClass("active");
                    };
                }(this)), pixiv.api.notification[this.type]().done(function(a) {
                    return function(b) {
                        a.create(b), "function" == typeof a.success && a.success(b);
                    };
                }(this)), void ("default" === colon.notification.status() && a("._notification-request-permission").show()));
            }, b.prototype.create = function(b, c) {
                var d, e, f, g, h, i, j, k, l;
                for (null == c && (c = !1), h = b.items, l = 0, j = [], f = 0, i = h.length; i > f; f++) {
                    switch (g = h[f], d = "string" === a.type(g.notified_at) ? new Date(g.notified_at) : new Date(1e3 * g.notified_at), 
                    g.date = d.getFullYear() + "-" + colon.padding(d.getMonth() + 1) + "-" + colon.padding(d.getDate()), 
                    g.date_ago = Math.floor((new Date() - d) / 864e5), c && (g.date_time = g.date + " " + colon.padding(d.getHours()) + ":" + colon.padding(d.getMinutes())), 
                    g.unread = !!g.unread, g.type) {
                      case "favorited":
                        g.details.other_count = g.details.users.length - 1;
                        break;

                      case "ranked_in":
                        g.details.category = colon.t(g.details.context + "Ranking");
                        break;

                      case "comic_book":
                        g.details.other_count = g.details.titles.length - 1;
                        break;

                      case "booth_item":
                        g.details.other_count = g.details.items.length - 1;
                    }
                    try {
                        j.push(colon.template("notification-" + g.type, g));
                    } catch (m) {
                        e = m, pixiv.alarm.send(e, [ g ]);
                    }
                    g.unread && ++l;
                }
                k = a("ul", this.container).html(j.join("")), l > 5 && !c && k.append(colon.template("notification-more", {
                    other_count: this.unreadCount - l,
                    notification_type: this.type
                })), this.updateUnreadCount(b.remaining_unread_count), pixiv.user.unreadCount[this.type] = b.remaining_unread_count, 
                pixiv.Notification.updateCount(pixiv.user.unreadCount);
            }, b;
        }();
    }(jQuery);
}.call(this), function() {
    "use strict";
    /*!
   * Thanks to http://snippets.dzone.com/posts/show/452
   */
    var a = function(a, b) {
        return function() {
            return a.apply(b, arguments);
        };
    };
    pixiv.isUri = function(a) {
        var b;
        return b = /(ftp|http|https):\/\/(\w+:{0,1}\w*@)?(\S+)(:[0-9]+)?(\/|\/([\w#!:.?+=&%@!\-\/]))?/, 
        b.test(a);
    }, pixiv.isPixivUri = function(a) {
        var b;
        return b = /(http|https):\/\/(\w+\.pixiv\.net.*|p\.tl\/i\/\d+|p\.tl\/e\/\d+|p\.tl\/t\/\d+)/, 
        b.test(a);
    }, function() {
        var a, b, c, d, e, f, g, h, i;
        for (a = document.createElement("div"), i = !1, g = [ "writing-mode: tb-rl;", "writing-mode: vertical-rl;", "-o-writing-mode: vertical-rl;", "-ms-writing-mode: tb-rl;", "-ms-writing-mode: vertical-rl;", "-moz-writing-mode: vertical-rl;", "-webkit-writing-mode: vertical-rl;" ], 
        b = 0, d = g.length; d > b; b++) f = g[b], a.style.cssText = f, (a.style.length > 0 || "tb-rl" === (null != (h = a.currentStyle) ? h.writingMode : void 0)) && (i = !0);
        for (i ? $("html").addClass("verticaltext") : $("html").addClass("no-verticaltext"), 
        a = document.createElement("span"), i = !1, g = [ "text-combine: horizontal;", "-o-text-combine: horizontal;", "-ms-text-combine: horizontal;", "-moz-text-combine: horizontal;", "-webkit-text-combine: horizontal;" ], 
        c = 0, e = g.length; e > c; c++) f = g[c], a.style.cssText = f, a.style.length > 0 && (i = !0);
        /*!
     * jQuery RTL Scroll Type Detector | Copyright (c) 2012 Wei-Ko Kao | MIT License
     */
        return i ? $("html").addClass("textcombine") : $("html").addClass("no-textcombine"), 
        $.support.rtlScrollType = "default", $(document).ready(function() {
            var a, b, c;
            return a = $("<div/>", {
                text: "A",
                css: {
                    fontSize: "14px",
                    width: "1px",
                    height: "1px",
                    position: "absolute",
                    top: "-1000px",
                    overflow: "scroll",
                    writingMode: "tb-rl",
                    OWritingMode: "vertical-rl",
                    MsWritingMode: "tb-rl",
                    MozWritingMode: "vertical-rl",
                    WebkitWritingMode: "vertical-rl"
                }
            }), a.css({
                writingMode: "vertical-rl",
                MsWritingMode: "vertical-rl"
            }), b = a.appendTo("body")[0], c = "reverse", b.scrollLeft > 0 ? c = "default" : (b.scrollLeft = 1, 
            0 === b.scrollLeft && (c = "negative")), $(b).remove(), $.support.rtlScrollType = c;
        });
    }(), function(a) {
        /*!
     * Thanks to http://stackoverflow.com/a/4399718/2864502
     */
        return a.fn.getTextNodes = function() {
            return a(this).find(":not(iframe)").addBack().contents().filter(function() {
                return 3 === this.nodeType;
            });
        }, a.fn.scrollLeftCool = function(b, c) {
            var d;
            if (d = b ? a.support.rtlScrollType : "default", "undefined" == typeof c) switch (d) {
              case "default":
                return a(this).scrollLeft();

              case "negative":
                return a(this).scrollLeft() + a(this).get(0).scrollWidth - a(this).width();

              case "reverse":
                return a(this).width() - a(this).scrollLeft();

              default:
                return a(this).scrollLeft();
            } else switch (d) {
              case "default":
                return a(this).scrollLeft(c);

              case "negative":
                return a(this).scrollLeft(c - a(this).get(0).scrollWidth + a(this).width());

              case "reverse":
                return a(this).scrollLeft(a(this).width() - c);

              default:
                return a(this).scrollLeft(c);
            }
        };
    }(jQuery), pixiv.Novel = function() {
        function b(b) {
            this.onMousewheel = a(this.onMousewheel, this), this.onIllustLoad = a(this.onIllustLoad, this);
            var c, d, e, f, g, h, i, j, k;
            this.$root = $(b), this.$text = this.$root.find("#novel_text"), this.$textWrapper = this.$root.find(".novel-text-wrapper"), 
            this.$pager = this.$root.find(".pager"), this.$pagerPrev = this.$root.find(".pager-prev"), 
            this.$pagerNext = this.$root.find(".pager-next"), this.$pagerPage = this.$root.find(".pager-page"), 
            this.$writingModeController = this.$root.find(".controller-writing-mode"), this.$fontController = this.$root.find(".controller-font"), 
            this.$markerController = this.$root.find(".controller-marker"), this.$insertMarkerButton = this.$root.find(".insert-marker"), 
            this.$destroyMarkerButton = this.$root.find(".destroy-marker"), this.$followMarkerButton = this.$root.find(".follow-marker"), 
            this.$bodyMarker = this.$root.find(".body-marker"), this.$scrollerPrev = this.$root.find(".scroller-prev"), 
            this.$scrollerNext = this.$root.find(".scroller-next"), this.$configController = this.$root.find(".controller-config"), 
            this.$markerTooltip = this.$root.find(".novel-tooltip-marker"), this.$configTooltip = this.$root.find(".novel-tooltip-config"), 
            this.$sizeChoices = this.$root.find(".novel-size input"), this.$lineChoices = this.$root.find(".novel-line input"), 
            this.$scrollModeChoices = this.$root.find(".novel-scroll-mode input"), this.$themeChoices = this.$root.find(".novel-theme"), 
            this.$markerList = this.$root.find(".marker-list"), this.$chapterList = $("#novel_chapter"), 
            this.$pixivimages = $(), this.illustIds = [], this.page = 0, this.rawBody = this.$text.val(), 
            this.id = pixiv.context.workId, this.marker = pixiv.context.marker;
            try {
                this.params = JSON.parse(pixiv.context.serialized_value);
            } catch (l) {
                this.params = {};
            }
            this.parse(), this.loadIllusts(), this.updateChapters(), this.bind(), d = this.getHash(), 
            null === d && (d = 0), "object" == typeof d && this.chapterTo(d[0], d[1], {
                preventHashChange: !0
            }), "number" == typeof d && this.pageTo(d, {
                preventScroll: !0,
                preventHashChange: !0
            }), this.niceScroll = this.$pages.niceScroll({
                rtlmode: !0,
                verticalmode: !0,
                mousescrollstep: 60,
                scrollspeed: 30,
                autohidemode: "scroll",
                cursoropacitymin: 0,
                cursoropacitymax: .5,
                enablekeyboard: !1,
                onmousewheel: this.onMousewheel
            }), this.config = $.extend(this.config, colon.storage.localStorage("novel_config")), 
            this.clickCounter = $.extend(this.clickCounter, colon.storage.localStorage("novel_click_counter")), 
            colon.ga.trackEvent([ "novel", "view_with_theme", this.config.theme ]), k = 0 === (null != (e = this.clickCounter.writingMode) ? e : 0) ? "default" : this.config.writingMode, 
            colon.ga.trackEvent([ "novel", "view_with_writing_mode", k ]), "vertical" === this.config.writingMode && (j = 0 === (null != (f = this.clickCounter.scrollMode) ? f : 0) ? "default" : this.config.scrollMode, 
            colon.ga.trackEvent([ "novel", "view_with_scroll_mode", j ])), c = document.documentElement.lang || "ja", 
            "ja" === c && 0 === (null != (g = this.clickCounter.writingMode) ? g : 0) && $("html").hasClass("verticaltext") && $(".vertical-new").show(), 
            k = 0 === (null != (h = this.params.view_mode) ? h : 0) ? this.config.writingMode : null != (i = {
                1: "vertical",
                2: "horizontal"
            }[this.params.view_mode]) ? i : "horizontal", this.setFont(this.config.font, {
                preventReadCharsSync: !0
            }), this.setSize(this.config.size, {
                preventReadCharsSync: !0
            }), this.setLine(this.config.line, {
                preventReadCharsSync: !0
            }), this.setScrollMode(this.config.scrollMode, {
                preventReadCharsSync: !0
            }), this.setTheme(this.config.theme, {
                preventReadCharsSync: !0
            }), this.setWritingMode(k, {
                preventReadCharsSync: !0,
                preventSaveConfig: !0
            }), this.updateMarker(), this.updateScrollers(!1);
        }
        var c, d;
        return b.prototype.root = null, b.prototype.rawBody = "", b.prototype.page = 0, 
        b.prototype.pagesize = 0, b.prototype.pages = [], b.prototype.config = {
            writingMode: "horizontal",
            font: "sans-serif",
            size: "medium",
            line: "normal",
            scrollMode: "scroll",
            theme: "white"
        }, b.prototype.clickCounter = {}, b.prototype.id = 0, b.prototype.marker = null, 
        b.prototype.markers = null, b.prototype.chapters = [], b.prototype.readChars = 0, 
        c = function(a) {
            var b, c, d, e;
            return 1 !== a.length ? null : (b = /^[\u0000-\u00a6\u00a8\u00aa-\u00ad\u00af-\u00b0\u00b2-\u00bb\u00bf-\u00d6\u00d8-\u00f6\u00f8-\u02e9\u02ec-\u10ff\u1200-\u1400\u1680-\u18af\u1900-\u1c7f\u1cc0-\u2015\u2017-\u201f\u2022-\u202f\u2032-\u203a\u203d-\u2041\u2043-\u2046\u204a-\u2050\u2052-\u2064\u2066-\u20dc\u20e1\u20e5-\u20ff\u2102\u210a-\u210e\u2110-\u2112\u2115\u2118-\u211d\u2124\u2126\u2128\u212a-\u212d\u212f-\u2134\u2140-\u2144\u214b\u214e\u2190-\u221d\u221f-\u2233\u2236-\u22ff\u2308-\u230b\u2320-\u2323\u232c-\u237c\u239b-\u23bd\u23ce\u23d0\u23dc-\u23e1\u2423\u2500-\u259f\u261a-\u261f\u2768-\u2775\u2794-\u2b11\u2b30-\u2b4f\u2b5a-\u2bb7\u2c00-\u2e7f\ua4d0-\ua95f\ua980-\uabff\ud800-\udfff\ufb00-\ufe0f\ufe20-\ufe2f\ufe49-\ufe4f\ufe58\ufe63-\ufe66\ufe70-\uff00\uff0d\uff1c-\uff1e\uff61-\uffdf\uffe8-\uffef\ufff9-\ufffb\ufffe\uffff]$/, 
            c = /^[\u2329-\u232a\u3008-\u3011\u3014-\u301f\u3030\u30a0\u30fc\ufe59-\ufe5e\uff08-\uff09\uff1a-\uff1b\uff3b\uff3d\uff3f\uff5b-\uff60\uffe3]$/, 
            e = /^[\u00a7\u00a9\u00ae\u00b1\u00bc-\u00be\u00d7\u00f7\u02ea-\u02eb\u1100-\u11ff\u1401-\u167f\u18b0-\u18ff\u2016\u2020-\u2021\u2030-\u2031\u203b-\u203c\u2042\u2047-\u2049\u2051\u2065\u20dd-\u20e0\u20e2-\u20e4\u2100-\u2101\u2103-\u2109\u210f\u2113-\u2114\u2116-\u2117\u211e-\u2123\u2125\u2127\u2129\u212e\u2135-\u213f\u2145-\u214a\u214c-\u214d\u214f-\u218f\u221e\u2234-\u2235\u2300-\u2307\u230c-\u231f\u2324-\u2328\u232b\u237d-\u239a\u23be-\u23cd\u23cf\u23d1-\u23db\u23e2-\u2422\u2424-\u24ff\u25a0-\u2619\u2620-\u2767\u2776-\u2793\u2b12-\u2b2f\u2b50-\u2b59\u2bb8-\u2bff\u2e80-\u3000\u3003-\u3007\u3012-\u3013\u3020-\u302f\u3031-\u3040\u3042\u3044\u3046\u3048\u304a-\u3062\u3064-\u3082\u3084\u3086\u3088-\u308d\u308f-\u3094\u3097-\u309a\u309d-\u309f\u30a2\u30a4\u30a6\u30a8\u30aa-\u30c2\u30c4-\u30e2\u30e4\u30e6\u30e8-\u30ed\u30ef-\u30f4\u30f7-\u30fb\u30fd-\u3126\u3128-\u31ef\u3200-\u32ff\u3358-\u337a\u3380-\ua4cf\ua960-\ua97f\uac00-\ud7ff\ue000-\ufaff\ufe10-\ufe1f\ufe30-\ufe48\ufe53-\ufe57\ufe5f-\ufe62\ufe67-\ufe6f\uff02-\uff07\uff0a-\uff0b\uff0f-\uff19\uff20-\uff3a\uff3c\uff3e\uff40-\uff5a\uffe0-\uffe2\uffe4-\uffe7\ufff0-\ufff8\ufffc-\ufffd]$/, 
            d = /^[\u3001-\u3002\u3041\u3043\u3045\u3047\u3049\u3063\u3083\u3085\u3087\u308e\u3095-\u3096\u309b-\u309c\u30a1\u30a3\u30a5\u30a7\u30a9\u30c3\u30e3\u30e5\u30e7\u30ee\u30f5-\u30f6\u3127\u31f0-\u31ff\u3300-\u3357\u337b-\u337f\ufe50-\ufe52\uff01\uff0c\uff0e\uff1f]$/, 
            a.match(b) ? "R" : a.match(c) ? "Tr" : a.match(e) ? "U" : a.match(d) ? "Tu" : null);
        }, d = function(a) {
            switch (c(a)) {
              case "R":
              case "Tr":
                return !0;

              default:
                return !1;
            }
        }, b.prototype.parse = function() {
            var a;
            return typeof this.rawBody === !1 || "" === this.rawBody ? !1 : (this.$text.remove(), 
            a = this.rawBody, a.split("[newpage]").forEach(function(b) {
                return function(c, d) {
                    var e, f, g, h;
                    return e = $("<div/>", {
                        "class": "novel-page",
                        id: "page-" + (d + 1)
                    }), g = 0, h = !1, f = [], c.replace(/\r\n?/g, "\n").split("\n").forEach(function(c) {
                        var e, i, j, k;
                        return "" === c ? void f.push($("<br>")) : (i = new window.PixivNovelParser.Parser(), 
                        i.parse(c), j = function(a) {
                            var c;
                            return c = [], a.forEach(function(a) {
                                var e, f, i, k, l, m, n, o;
                                return "text" === a.type ? c.push($(document.createTextNode(a.val))) : "rb" === a.name ? c.push($("<ruby/>").append([ $("<rb/>", {
                                    text: a.rubyBase
                                }), $("<rp/>", {
                                    text: "("
                                }), $("<rt/>", {
                                    text: a.rubyText
                                }), $("<rp/>", {
                                    text: ")"
                                }) ])) : "chapter" === a.name ? (e = $("<h4/>", {
                                    "class": "chapter",
                                    id: "chapter_" + d + "_" + g
                                }).append(j(a.title)), b.chapters.push({
                                    title: e.text(),
                                    page: d,
                                    chapter: g
                                }), c.push(e), g++) : "pixivimage" === a.name ? (m = null === a.pageNumber ? a.illustID : a.illustID + "-" + a.pageNumber, 
                                h ? k = $("<span/>", {
                                    "class": "error",
                                    text: "【エラー: 1ページに挿入できる挿絵タグは1つまでです】"
                                }) : (k = $("<span/>", {
                                    "class": "novelimage novelimage-" + m,
                                    data: {
                                        illust_id: m
                                    }
                                }).append($("<a/>", {
                                    href: "/member_illust.php?mode=medium&illust_id=" + m,
                                    target: "_blank"
                                }).append($("<img/>", {
                                    src: "http://source.pixiv.net/source/pixpedia/images/noimage300.gif"
                                }))), h = !0, b.$pixivimages = b.$pixivimages.add(k), -1 === $.inArray(m, b.illustIds) && b.illustIds.push(m)), 
                                c.push(k)) : "jump" === a.name ? (n = parseInt(a.pageNumber, 10), f = isNaN(n) || 0 >= n ? $("<span/>", {
                                    "class": "error",
                                    text: "【エラー: 小説内リンクに指定できないページです】"
                                }) : $("<a/>", {
                                    "class": "novel-jump",
                                    href: "#" + n,
                                    text: n + "ページヘ",
                                    data: {
                                        target: n
                                    }
                                }), c.push(f)) : "jumpuri" === a.name ? (l = j(a.title), o = l.map(function(a) {
                                    return a.text();
                                }).join(""), "" !== o && "" !== a.uri && pixiv.isUri(a.uri) ? (i = pixiv.isPixivUri(a.uri) ? $("<a/>", {
                                    href: a.uri
                                }).append(l) : $("<a/>", {
                                    href: "/jump.php?" + encodeURIComponent(a.uri),
                                    target: "_brank"
                                }).append(l), c.push(i)) : void c.push($(document.createTextNode(o)))) : c.push($(document.createTextNode(a.val)));
                            }), c;
                        }, e = $("<p/>").append(j(i.tree)), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([“„〝"].+?[”“〟〞"])/), d.length > 1 ? (d.forEach(function(a, b) {
                                var d, e;
                                return b % 2 === 1 ? (e = a.slice(1, -1), d = (e.match(/[\x00-\x7F]/g) || []).length, 
                                d / e.length > .5 ? c.push($("<span/>", {
                                    text: a.slice(0, 1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "“",
                                        horizontal: a.slice(0, 1)
                                    }
                                }), document.createTextNode(e), $("<span/>", {
                                    text: a.slice(-1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "”",
                                        horizontal: a.slice(-1)
                                    }
                                })) : c.push($("<span/>", {
                                    text: a.slice(0, 1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "〝",
                                        horizontal: a.slice(0, 1)
                                    }
                                }), document.createTextNode(e), $("<span/>", {
                                    text: a.slice(-1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "〟",
                                        horizontal: a.slice(-1)
                                    }
                                }))) : c.push(document.createTextNode(a));
                            }), $(this).replaceWith(c)) : void 0;
                        }), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([`‘‚｀‵].+?[`’｀′])/), d.length > 1 ? (d.forEach(function(a, b) {
                                var d, e;
                                return b % 2 === 1 ? (e = a.slice(1, -1), d = (e.match(/[\x00-\x7F]/g) || []).length, 
                                d / e.length > .5 ? c.push($("<span/>", {
                                    text: a.slice(0, 1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "‘",
                                        horizontal: a.slice(0, 1)
                                    }
                                }), document.createTextNode(e), $("<span/>", {
                                    text: a.slice(-1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "’",
                                        horizontal: a.slice(-1)
                                    }
                                })) : c.push($("<span/>", {
                                    text: a.slice(0, 1),
                                    "class": "vtoken",
                                    data: {
                                        vertical: "‵",
                                        horizontal: a.slice(0, 1)
                                    }
                                }), document.createTextNode(e), $("<span/>", {
                                    text: a.slice(-1),
                                    "class": "vtoken invert",
                                    data: {
                                        vertical: "′",
                                        horizontal: a.slice(-1)
                                    }
                                }))) : c.push(document.createTextNode(a));
                            }), $(this).replaceWith(c)) : void 0;
                        }), e.getTextNodes().each(function() {
                            var b, c;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, b = [], 
                            c = a.split(/([\d０-９]+)/), c.length > 1 ? (c.forEach(function(a) {
                                return function(d, e) {
                                    var f, g, h;
                                    return e % 2 === 1 ? (h = function(a) {
                                        return d.replace(/[\d０-９]/g, function(a) {
                                            return {
                                                "0": "０",
                                                "1": "１",
                                                "2": "２",
                                                "3": "３",
                                                "4": "４",
                                                "5": "５",
                                                "6": "６",
                                                "7": "７",
                                                "8": "８",
                                                "9": "９",
                                                "０": "０",
                                                "１": "１",
                                                "２": "２",
                                                "３": "３",
                                                "４": "４",
                                                "５": "５",
                                                "６": "６",
                                                "７": "７",
                                                "８": "８",
                                                "９": "９"
                                            }[a];
                                        });
                                    }, g = function(a) {
                                        return d.replace(/[\d０-９]/g, function(a) {
                                            return {
                                                "0": "0",
                                                "1": "1",
                                                "2": "2",
                                                "3": "3",
                                                "4": "4",
                                                "5": "5",
                                                "6": "6",
                                                "7": "7",
                                                "8": "8",
                                                "9": "9",
                                                "０": "0",
                                                "１": "1",
                                                "２": "2",
                                                "３": "3",
                                                "４": "4",
                                                "５": "5",
                                                "６": "6",
                                                "７": "7",
                                                "８": "8",
                                                "９": "9"
                                            }[a];
                                        });
                                    }, f = c[e - 1] ? c[e - 1].slice(-1) : $(a).prev().text() ? ($(a).prev().data("vertical") || $(a).prev().text()).slice(-1) : "", 
                                    f.match(/[\x00-\x7F]/) ? b.push($("<span/>", {
                                        text: d,
                                        "class": "vtoken",
                                        data: {
                                            vertical: g(d),
                                            horizontal: d
                                        }
                                    })) : 2 === d.length || 3 === d.length ? b.push($("<span/>", {
                                        text: d,
                                        "class": "vtoken combine",
                                        data: {
                                            vertical: g(d),
                                            horizontal: d
                                        }
                                    })) : b.push($("<span/>", {
                                        text: d,
                                        "class": "vtoken",
                                        data: {
                                            vertical: h(d),
                                            horizontal: d
                                        }
                                    }))) : b.push(document.createTextNode(d));
                                };
                            }(this)), $(this).replaceWith(b)) : void 0;
                        }), e.getTextNodes().each(function() {
                            var b, c;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, b = [], 
                            c = a.split(/([｢｣､｡￩￪￫￬･])/), c.length > 1 ? (c.forEach(function(a, c) {
                                return c % 2 === 1 ? b.push($("<span/>", {
                                    text: a,
                                    "class": "vtoken",
                                    data: {
                                        vertical: {
                                            "｢": "「",
                                            "｣": "」",
                                            "､": "、",
                                            "｡": "。",
                                            "￩": "←",
                                            "￪": "↑",
                                            "￫": "→",
                                            "￬": "↓",
                                            "･": "・"
                                        }[a],
                                        horizontal: a
                                    }
                                })) : b.push(document.createTextNode(a));
                            }), $(this).replaceWith(b)) : void 0;
                        }), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([—―])/), d.length > 1 ? (d.forEach(function(a) {
                                return function(a, b) {
                                    return b % 2 === 1 ? c.push($("<span/>", {
                                        text: a,
                                        "class": "vtoken",
                                        data: {
                                            vertical: "─",
                                            horizontal: a
                                        }
                                    })) : c.push(document.createTextNode(a));
                                };
                            }(this)), $(this).replaceWith(c)) : void 0;
                        }), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([,.，．])/), d.length > 1 ? (d.forEach(function(a) {
                                return function(b, e) {
                                    var f, g;
                                    return e % 2 === 1 ? (f = d[e - 1] ? d[e - 1].slice(-1) : $(a).prev().text() ? ($(a).prev().data("vertical") || $(a).prev().text()).slice(-1) : "", 
                                    g = "" === f || f.match(/[\x00-\x7F]/) ? b.replace(/[，．]/g, function(a) {
                                        return {
                                            "，": ",",
                                            "．": "."
                                        }[a];
                                    }) : b.replace(/[,.]/g, function(a) {
                                        return {
                                            ",": "，",
                                            ".": "．"
                                        }[a];
                                    }), c.push($("<span/>", {
                                        text: b,
                                        "class": "vtoken",
                                        data: {
                                            vertical: g,
                                            horizontal: b
                                        }
                                    }))) : c.push(document.createTextNode(b));
                                };
                            }(this)), $(this).replaceWith(c)) : void 0;
                        }), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([!?！？]+)/), d.length > 1 ? (d.forEach(function(a) {
                                return function(b, e) {
                                    var f, g, h, i, j;
                                    return e % 2 === 1 ? (g = d[e - 1] ? d[e - 1].slice(-1) : $(a).prev().text() ? ($(a).prev().data("vertical") || $(a).prev().text()).slice(-1) : "", 
                                    f = d[e + 1] ? d[e + 1].slice(0, 1) : $(a).next().text() ? ($(a).next().data("vertical") || $(a).next().text()).slice(0, 1) : "", 
                                    g.match(/[\x00-\x7F]/) ? (j = b.replace(/[！？]/g, function(a) {
                                        return {
                                            "！": "!",
                                            "？": "?"
                                        }[a];
                                    }), c.push($("<span/>", {
                                        text: b,
                                        "class": "vtoken",
                                        data: {
                                            vertical: j,
                                            horizontal: b
                                        }
                                    }))) : (h = [ "vtoken" ], 2 === b.length || 3 === b.length ? (j = b.replace(/[！？]/g, function(a) {
                                        return {
                                            "！": "!",
                                            "？": "?"
                                        }[a];
                                    }), h.push("combine")) : j = b.replace(/[!?]/g, function(a) {
                                        return {
                                            "!": "！",
                                            "?": "？"
                                        }[a];
                                    }), i = /^[\u0029\u005d\u007d\u0f3b\u0f3d\u169c\u2046\u207e\u208e\u2309\u230b\u232a\u2769\u276b\u276d\u276f\u2771\u2773\u2775\u27c6\u27e7\u27e9\u27eb\u27ed\u27ef\u2984\u2986\u2988\u298a\u298c\u298e\u2990\u2992\u2994\u2996\u2998\u29d9\u29db\u29fd\u2e23\u2e25\u2e27\u2e29\u3009\u300b\u300d\u300f\u3011\u3015\u3017\u3019\u301b\u301e\u301f\ufd3e\ufe18\ufe36\ufe38\ufe3a\ufe3c\ufe3e\ufe40\ufe42\ufe44\ufe48\ufe5a\ufe5c\ufe5e\uff09\uff3d\uff5d\uff60\uff63]$/, 
                                    "" === f || "　" === f || f.match(i) || h.push("margin-after"), c.push($("<span/>", {
                                        text: b,
                                        "class": h.join(" "),
                                        data: {
                                            vertical: j,
                                            horizontal: b
                                        }
                                    })))) : c.push(document.createTextNode(b));
                                };
                            }(this)), $(this).replaceWith(c)) : void 0;
                        }), e.getTextNodes().each(function() {
                            var b, c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/([A-Za-zＡ-Ｚａ-ｚ]+)/), d.length > 1 && (b = [], b.push(d[0]), d.forEach(function(a) {
                                return function(a, c) {
                                    var e;
                                    return c % 2 === 1 ? (e = d[c + 1], 2 === a.length ? b.push(a, e) : b[b.length - 1] += a + e) : void 0;
                                };
                            }(this)), b.length > 1) ? (b.forEach(function(a) {
                                return function(b, e) {
                                    var f, g, h;
                                    return e % 2 === 1 ? (g = d[e - 1] ? d[e - 1].slice(-1) : $(a).prev().text() ? ($(a).prev().data("vertical") || $(a).prev().text()).slice(-1) : "", 
                                    f = d[e + 1] ? d[e + 1].slice(0, 1) : $(a).next().text() ? ($(a).next().data("vertical") || $(a).next().text()).slice(0, 1) : "", 
                                    h = function(a) {
                                        return a.replace(/[Ａ-Ｚａ-ｚ]/g, function(a) {
                                            return String.fromCharCode(a.charCodeAt(0) - 65248);
                                        });
                                    }, g.match(/[\x00-\x2F\x3A-\x7F]/) || f.match(/[\x00-\x2F\x3A-\x7F]/) ? c.push(document.createTextNode(b)) : c.push($("<span/>", {
                                        text: b,
                                        "class": "vtoken combine",
                                        data: {
                                            vertical: h(b),
                                            horizontal: b
                                        }
                                    }))) : c.push(document.createTextNode(b));
                                };
                            }(this)), $(this).replaceWith(c)) : void 0;
                        }), e.getTextNodes().each(function() {
                            var b, c;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, b = [], 
                            c = a.split(/([A-Z]+)/), c.length > 1 ? (c.forEach(function(a) {
                                return function(d, e) {
                                    var f, g, h;
                                    return e % 2 === 1 ? (g = c[e - 1] ? c[e - 1].slice(-1) : $(a).prev().text() ? ($(a).prev().data("vertical") || $(a).prev().text()).slice(-1) : "", 
                                    f = c[e + 1] ? c[e + 1].slice(0, 1) : $(a).next().text() ? ($(a).next().data("vertical") || $(a).next().text()).slice(0, 1) : "", 
                                    h = function(a) {
                                        return a.replace(/[A-Z]/g, function(a) {
                                            return String.fromCharCode(a.charCodeAt(0) + 65248);
                                        });
                                    }, g.match(/[\x00-\x7F’]/) || f.match(/[\x00-\x7F’]/) ? b.push(document.createTextNode(d)) : b.push($("<span/>", {
                                        text: d,
                                        "class": "vtoken",
                                        data: {
                                            vertical: h(d),
                                            horizontal: d
                                        }
                                    }))) : b.push(document.createTextNode(d));
                                };
                            }(this)), $(this).replaceWith(b)) : void 0;
                        }), k = e.getTextNodes(), k.each(function(b) {
                            var c, d;
                            if (!$(this).parent().hasClass("vtoken")) return a = $(this).get(0).nodeValue, c = [], 
                            d = a.split(/(.[゛ﾞ゜ﾟ])/), d.length > 1 ? (d.forEach(function(a) {
                                return function(a, b) {
                                    var d, e, f;
                                    return b % 2 === 1 ? (d = a[0], e = a[1], f = {
                                        "゛": "゛",
                                        "ﾞ": "゛",
                                        "゜": "゜",
                                        "ﾟ": "゜"
                                    }[e] + d, c.push($("<span/>", {
                                        text: a,
                                        "class": "vtoken",
                                        data: {
                                            vertical: f,
                                            horizontal: a
                                        }
                                    }))) : c.push(document.createTextNode(a));
                                };
                            }(this)), $(this).replaceWith(c)) : void 0;
                        }), e.is(":empty") ? void 0 : f.push(e));
                    }), e.append(f), e.hide(), b.$textWrapper.append(e);
                };
            }(this)), this.$textWrapper.show(), this.$pages = this.$textWrapper.find(".novel-page"), 
            this.pagesize = this.$pages.length, this.$root.find("span.novel-jump").each(function(a) {
                var b;
                return b = parseInt(a.data("target")), isNaN(b) || 0 >= b || this.pagesize < b ? a.replaceWith($("<span/>", {
                    "class": "error",
                    text: "【エラー: 小説内リンクに指定できないページです】"
                })) : void 0;
            }));
        }, b.prototype.loadIllusts = function() {
            return pixiv.api.post("rpc_novel_illust.php", {
                illust_ids: encodeURIComponent(this.illustIds.join(",")),
                mtime: pixiv.context.updated || parseInt(new Date() / 1e3),
                content_id: pixiv.context.workId,
                x_restrict: pixiv.context.explicit,
                restrict: pixiv.context.permission,
                user_id: pixiv.context.userId,
                verbosity: ""
            }).done(this.onIllustLoad);
        }, b.prototype.onIllustLoad = function(a) {
            return a && $.isArray(a) ? a.forEach(function(a) {
                return function(b) {
                    var c;
                    return c = a.$pixivimages.filter(function() {
                        return $(this).data("illust_id") === b.id;
                    }), c.replaceWith(b.html);
                };
            }(this)) : void 0;
        }, b.prototype.updateChapters = function() {
            return this.chapters.forEach(function(a) {
                return function(b) {
                    return a.$chapterList.find(".novel-outline").append($("<li/>").append([ $("<a/>", {
                        href: "#chapter_" + b.page + "_" + b.chapter,
                        text: b.title
                    }), $("<em/>", {
                        text: b.page + 1
                    }) ]));
                };
            }(this)), this.chapters.length > 0 ? this.$chapterList.show() : void 0;
        }, b.prototype.bind = function() {
            return this.$root.click(function(a) {
                return function(b) {
                    return a.onClick(b.target);
                };
            }(this)), $(window).on("hashchange", function(a) {
                return function(b) {
                    return a.onHashChange(b);
                };
            }(this)), $(window).on("scroll", function(a) {
                return function() {
                    return a.updateBodyMarker();
                };
            }(this)), this.$pagerPrev.click(function(a) {
                return function() {
                    return a.countUpClick("pager"), a.pagePrev();
                };
            }(this)), this.$pagerNext.click(function(a) {
                return function() {
                    return a.countUpClick("pager"), a.pageNext();
                };
            }(this)), this.$writingModeController.click(function(a) {
                return function() {
                    return a.countUpClick("writingMode"), $(".vertical-new").hide(), a.toggleWritingMode();
                };
            }(this)), this.$fontController.click(function(a) {
                return function() {
                    return a.countUpClick("font"), a.toggleFont();
                };
            }(this)), this.$sizeChoices.click(function(a) {
                return function(b) {
                    return a.countUpClick("size"), a.setSize($(b.target).data("size"));
                };
            }(this)), this.$lineChoices.click(function(a) {
                return function(b) {
                    return a.countUpClick("line"), a.setLine($(b.target).data("line"));
                };
            }(this)), this.$scrollModeChoices.click(function(a) {
                return function(b) {
                    return a.countUpClick("scrollMode"), a.setScrollMode($(b.target).data("scroll-mode"));
                };
            }(this)), this.$themeChoices.click(function(a) {
                return function(b) {
                    return a.countUpClick("theme"), a.setTheme($(b.target).data("theme"));
                };
            }(this)), this.$markerController.click(function(a) {
                return function() {
                    return a.toggleMarkerTooltip();
                };
            }(this)), this.$insertMarkerButton.click(function(a) {
                return function() {
                    return a.setMarker(a.page);
                };
            }(this)), this.$destroyMarkerButton.click(function(a) {
                return function() {
                    return a.destroyMarker();
                };
            }(this)), this.$followMarkerButton.click(function(a) {
                return function() {
                    return a.pageTo(a.marker);
                };
            }(this)), this.$configController.click(function(a) {
                return function() {
                    return a.toggleConfigTooltip();
                };
            }(this)), this.$bodyMarker.click(function(a) {
                return function() {
                    return a.$bodyMarker.hasClass("active") ? a.destroyMarker() : a.setMarker(a.page);
                };
            }(this)), this.$scrollerPrev.click(function(a) {
                return function() {
                    return a.countUpClick("scroller"), a.$scrollerPrev.hasClass("pager-mode") ? a.pagePrev({
                        scrollToBottom: !0
                    }) : a.pageUp();
                };
            }(this)), this.$scrollerNext.click(function(a) {
                return function(b) {
                    return a.countUpClick("scroller"), a.$scrollerNext.hasClass("pager-mode") ? a.pageNext() : a.pageDown();
                };
            }(this)), this.$pages.scroll(function(a) {
                return function() {
                    return "vertical" === a.config.writingMode ? a.updateScrollers(!0) : void 0;
                };
            }(this)), $(window).unload(function(a) {
                return function() {
                    return colon.storage.localStorage("novel_click_counter", a.clickCounter);
                };
            }(this));
        }, b.prototype.onClick = function(a) {
            var b;
            return b = function(b) {
                return b.get(0) === a || 0 !== b.has(a).length;
            }, b(this.$markerTooltip) || b(this.$markerController) || this.hideMarkerTooltip(), 
            b(this.$configTooltip) || b(this.$configController) ? void 0 : this.hideConfigTooltip();
        }, b.prototype.onHashChange = function(a) {
            var b;
            return b = this.getHash(), null !== b ? ("object" == typeof b && this.chapterTo(b[0], b[1], {
                preventHashChange: !0
            }), "number" == typeof b ? this.pageTo(b, {
                preventHashChange: !0,
                preventScroll: !0
            }) : void 0) : void 0;
        }, b.prototype.onKeypress = function(a) {
            var b;
            switch (a) {
              case "up":
                return "vertical" === this.config.writingMode ? (b = this.$pages.get(this.page).getBoundingClientRect(), 
                b.bottom >= 0 && b.bottom < $(window).height() && b.top >= 0 && b.top < $(window).height() ? (this.pagePrev(), 
                !1) : !0) : !0;

              case "down":
                return "vertical" === this.config.writingMode ? (b = this.$pages.get(this.page).getBoundingClientRect(), 
                b.bottom >= 0 && b.bottom < $(window).height() && b.top >= 0 && b.top < $(window).height() ? (this.pageNext(), 
                !1) : !0) : !0;

              case "left":
                return "horizontal" === this.config.writingMode ? this.pagePrev() : (this.countUpClick("scroller"), 
                "scroll" === this.config.scrollMode ? this.$pages.eq(this.page).getNiceScroll(0).doScrollLeftBy(120) : this.pageDown()), 
                !1;

              case "right":
                return "horizontal" === this.config.writingMode ? this.pageNext() : (this.countUpClick("scroller"), 
                "scroll" === this.config.scrollMode ? this.$pages.eq(this.page).getNiceScroll(0).doScrollLeftBy(-120) : this.pageUp()), 
                !1;

              case "space":
                return "horizontal" === this.config.writingMode ? !0 : ($(window).scrollTop() < this.$root.offset().top ? $(window).scrollTop(this.$root.offset().top) : (this.countUpClick("scroller"), 
                this.pageDown()), !1);

              case "pageup":
                return "vertical" === this.config.writingMode ? (this.countUpClick("scroller"), 
                this.pageUp(), !1) : !0;

              case "pagedown":
                return "vertical" === this.config.writingMode ? (this.countUpClick("scroller"), 
                this.pageDown(), !1) : !0;
            }
        }, b.prototype.toggleMarkerTooltip = function() {
            return this.$markerController.hasClass("active") ? this.hideMarkerTooltip() : this.showMarkerTooltip();
        }, b.prototype.showMarkerTooltip = function() {
            return null === this.markers && this.loadMarkers(), this.$markerController.addClass("active"), 
            this.$markerTooltip.show();
        }, b.prototype.hideMarkerTooltip = function() {
            return this.$markerController.removeClass("active"), this.$markerTooltip.hide();
        }, b.prototype.toggleConfigTooltip = function() {
            return this.$configController.hasClass("active") ? this.hideConfigTooltip() : this.showConfigTooltip();
        }, b.prototype.showConfigTooltip = function() {
            return this.$configController.addClass("active"), this.$configTooltip.show();
        }, b.prototype.hideConfigTooltip = function() {
            return this.$configController.removeClass("active"), this.$configTooltip.hide();
        }, b.prototype.pagePrev = function(a) {
            return this.pageTo(Math.max(0, this.page - 1), a);
        }, b.prototype.pageNext = function(a) {
            return this.pageTo(Math.min(this.pagesize - 1, this.page + 1), a);
        }, b.prototype.pageTo = function(a, b) {
            var c;
            return b = "object" == typeof b ? b : {}, this.page = a, this.$pages.hide(), this.$pages.eq(a).show(), 
            this.$pagerPrev.css({
                visibility: this.page <= 0 ? "hidden" : "visible"
            }), this.$pagerNext.css({
                visibility: this.page >= this.pagesize - 1 ? "hidden" : "visible"
            }), this.$pagerPage.text(this.page + 1 + "/" + this.pagesize), this.$bodyMarker.text(this.page + 1 + "/" + this.pagesize), 
            b.preventHashChange !== !0 && window.location.replace("#" + (this.page + 1)), b.preventScroll !== !0 && (b.scrollToBottom === !0 ? "horizontal" === this.config.writingMode ? $(window).scrollTop(this.$root.offset().top + this.$root.height() - $(window).height()) : this.$pages.eq(this.page).scrollLeftCool(!0, 0) : "horizontal" === this.config.writingMode ? $(window).scrollTop(this.$root.offset().top) : (c = this.$pages.eq(this.page), 
            c.scrollLeftCool(!0, c.get(0).scrollWidth))), this.marker === this.page ? this.$bodyMarker.addClass("active") : this.$bodyMarker.removeClass("active"), 
            this.updateScrollers(!1);
        }, b.prototype.chapterTo = function(a, b, c) {
            return this.pageTo(a, {
                preventHashChange: c.preventHashChange,
                preventScroll: !0
            }), c.preventHashChange !== !0 ? c.preventScroll === !0 ? window.location.replace("#chapter_" + a + "_" + b) : window.location.hash = "#chapter_" + a + "_" + b : c.preventScroll !== !0 ? $(window).scrollTop($("#chapter_" + a + "_" + b).offset().top) : void 0;
        }, b.prototype.getHash = function() {
            var a, b;
            return 0 === location.hash.length ? null : (b = location.hash.match(/^#chapter_(\d+)_(\d+)$/)) ? [ parseInt(b[1], 10), parseInt(b[2], 10) ] : (a = parseInt(location.hash.substr(1), 10), 
            isNaN(a) || a > this.pagesize || 0 >= a ? null : a - 1);
        }, b.prototype.onMousewheel = function(a, b, c) {
            var d;
            return "horizontal" === this.config.writingMode ? !0 : (this.countUpClick("wheel"), 
            "scroll" === this.config.scrollMode ? !0 : (d = a.wheelDelta || a.deltaX || -a.deltaY, 
            d > 0 ? this.pageUp() : this.pageDown(), "function" == typeof a.preventDefault && a.preventDefault(), 
            !1));
        }, b.prototype.pageUp = function() {
            var a, b, c, d;
            return "vertical" === this.config.writingMode ? (a = this.$pages.eq(this.page), 
            b = a.howmuchread({
                baseline: "center",
                borderline: "before",
                getMetric: !0,
                writingMode: {
                    vertical: !0,
                    horizontal: !1,
                    ttb: !0,
                    rtl: !0
                }
            }), a.getNiceScroll(0).doScrollLeftBy(-((null != (c = b.left) ? c : 0) + (null != (d = b.blockSize) ? d : 0) - a.offset().left))) : void 0;
        }, b.prototype.pageDown = function() {
            var a, b, c, d;
            return "vertical" === this.config.writingMode ? (a = this.$pages.eq(this.page), 
            b = a.howmuchread({
                baseline: "after",
                borderline: "after",
                getMetric: !0,
                writingMode: {
                    vertical: !0,
                    horizontal: !1,
                    ttb: !0,
                    rtl: !0
                }
            }), a.getNiceScroll(0).doScrollLeftBy(a.offset().left + a.width() - (null != (c = b.left) ? c : 0) - (null != (d = b.blockSize) ? d : 0))) : void 0;
        }, b.prototype.disableScroller = function(a) {
            var b;
            switch (a) {
              case "prev":
                if (b = this.$scrollerPrev.css("visibility"), "visible" === b || "inherit" === b) return this.$scrollerPrev.css({
                    visibility: "hidden"
                });
                break;

              case "next":
                if (b = this.$scrollerNext.css("visibility"), "visible" === b || "inherit" === b) return this.$scrollerNext.css({
                    visibility: "hidden"
                });
            }
        }, b.prototype.enableScroller = function(a) {
            var b;
            switch (a) {
              case "prev":
                if (b = this.$scrollerPrev.css("visibility"), "hidden" === b) return this.$scrollerPrev.css({
                    visibility: "visible"
                });
                break;

              case "next":
                if (b = this.$scrollerNext.css("visibility"), "hidden" === b) return this.$scrollerNext.css({
                    visibility: "visible"
                });
            }
        }, b.prototype.enablePagerMode = function(a, b) {
            var c;
            switch (a) {
              case "prev":
                c = this.$scrollerPrev;
                break;

              case "next":
                c = this.$scrollerNext;
                break;

              default:
                return;
            }
            if (!c.hasClass("pager-mode")) return c.addClass("pager-mode"), b ? c.css({
                zIndex: 0
            }).animate({
                zIndex: 1
            }, {
                duration: 200,
                step: function(a) {
                    return $(this).children(".icon").css({
                        transform: "rotate(" + -90 * a + "deg)"
                    }), $(this).children(".label").css({
                        opacity: a,
                        top: 10 * (1 - a)
                    });
                }
            }) : (c.stop(), c.children(".icon").css({
                transform: "rotate(-90deg)"
            }), c.children(".label").css({
                opacity: 1,
                top: 0
            }));
        }, b.prototype.disablePagerMode = function(a, b) {
            var c;
            switch (a) {
              case "prev":
                c = this.$scrollerPrev;
                break;

              case "next":
                c = this.$scrollerNext;
                break;

              default:
                return;
            }
            return c.hasClass("pager-mode") ? (c.removeClass("pager-mode"), b ? c.css({
                zIndex: 1
            }).animate({
                zIndex: 0
            }, {
                duration: 200,
                step: function(a) {
                    return $(this).children(".icon").css({
                        transform: "rotate(" + -90 * a + "deg)"
                    }), $(this).children(".label").css({
                        opacity: a,
                        top: 10 * (1 - a)
                    });
                }
            }) : (c.stop(), c.children(".icon").css({
                transform: "rotate(0deg)"
            }), c.children(".label").css({
                opacity: 0,
                top: 10
            }))) : void c.children(".label").css("opacity", 0);
        }, b.prototype.updateScrollers = function(a) {
            var b, c, d, e;
            return b = this.$pages.eq(this.page), d = b.get(0).scrollWidth, c = b.scrollLeftCool(!0), 
            e = b.width(), c + e + 1 >= d ? this.page - 1 >= 0 ? (this.enableScroller("prev"), 
            this.enablePagerMode("prev", a)) : (this.disableScroller("prev"), this.disablePagerMode("prev", a)) : (this.enableScroller("prev"), 
            this.disablePagerMode("prev", a)), 0 >= c ? this.page + 1 < this.pagesize ? (this.enableScroller("next"), 
            this.enablePagerMode("next", a)) : (this.disableScroller("next"), this.disablePagerMode("next", a)) : (this.enableScroller("next"), 
            this.disablePagerMode("next", a));
        }, b.prototype.toggleWritingMode = function() {
            return "horizontal" === this.config.writingMode ? this.setWritingMode("vertical") : "vertical" === this.config.writingMode ? this.setWritingMode("horizontal") : this.setWritingMode("horizontal");
        }, b.prototype.setWritingMode = function(a, b) {
            return null == b && (b = {}), b.preventReadCharsSync || this.updateReadChars(), 
            this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-writing-mode-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "vertical", "horizontal" ]) && (a = "horizontal"), $("html").hasClass("no-verticaltext") && (a = "horizontal"), 
            "vertical" === a ? this.niceScroll.show() : (this.niceScroll.hide(), this.$pages.each(function() {
                return $(this).getNiceScroll(0).rail.scrollable = !1;
            })), this.$root.addClass("novel-writing-mode-" + a), this.$writingModeController.attr("data-writing-mode", a), 
            b.preventSaveConfig || this.saveConfig("writingMode", a), b.preventReadCharsSync || this.loadReadChars(), 
            this.orientVtokens();
        }, b.prototype.orientVtokens = function() {
            return this.$root.find(".vtoken").each(function(a) {
                return function(b, c) {
                    return "vertical" === a.config.writingMode ? $(c).text($(c).data("vertical")) : $(c).text($(c).data("horizontal"));
                };
            }(this));
        }, b.prototype.toggleFont = function() {
            return "sans-serif" === this.config.font ? this.setFont("serif") : "serif" === this.config.font ? this.setFont("sans-serif") : this.setFont("sans-serif");
        }, b.prototype.setFont = function(a) {
            return this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-font-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "serif", "sans-serif" ]) && (a = "sans-serif"), this.$root.addClass("novel-font-" + a), 
            this.$fontController.attr("data-font", a), this.saveConfig("font", a);
        }, b.prototype.setSize = function(a, b) {
            return null == b && (b = {}), b.preventReadCharsSync || this.updateReadChars(), 
            this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-size-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "small", "medium", "big" ]) && (a = "medium"), this.$root.addClass("novel-size-" + a), 
            this.$sizeChoices.filter(function() {
                return $(this).data("size") === a;
            }).prop("checked", !0), b.preventReadCharsSync || "vertical" !== this.config.writingMode || this.loadReadChars(), 
            this.saveConfig("size", a);
        }, b.prototype.setLine = function(a, b) {
            var c;
            return null == b && (b = {}), b.preventReadCharsSync || this.updateReadChars(), 
            this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-line-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "narrow", "normal" ]) && (c = "normal"), this.$root.addClass("novel-line-" + a), 
            this.$lineChoices.filter(function() {
                return $(this).data("line") === a;
            }).prop("checked", !0), b.preventReadCharsSync || "vertical" !== this.config.writingMode || this.loadReadChars(), 
            this.saveConfig("line", a);
        }, b.prototype.setTheme = function(a) {
            var b;
            return this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-theme-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "white", "black", "blue", "yellow" ]) && (b = "white"), 
            this.$root.addClass("novel-theme-" + a), this.$themeChoices.removeClass("active"), 
            this.$themeChoices.filter(".novel-theme-" + a).addClass("active"), this.saveConfig("theme", a);
        }, b.prototype.setScrollMode = function(a) {
            return this.$root.removeClass(function(a, b) {
                return b.split(" ").filter(function(a) {
                    return a.match(/^novel-scroll-mode-/) ? !0 : void 0;
                }).join(" ");
            }), -1 === $.inArray(a, [ "page", "scroll" ]) && (a = "scroll"), this.$root.addClass("novel-scroll-mode-" + a), 
            this.$scrollModeChoices.filter(function() {
                return $(this).data("scroll-mode") === a;
            }).prop("checked", !0), this.saveConfig("scrollMode", a);
        }, b.prototype.saveConfig = function(a, b) {
            var c;
            return this.config[a] = b, c = colon.storage.localStorage("novel_config"), c[a] = b, 
            colon.storage.localStorage("novel_config", c);
        }, b.prototype.countUpClick = function(a) {
            var b;
            return null == (b = this.clickCounter)[a] && (b[a] = 0), this.clickCounter[a]++;
        }, b.prototype.updateReadChars = function() {
            var a, b, c;
            return b = this.$pages.filter(function(a) {
                return function(b) {
                    return b < a.page;
                };
            }(this)), a = this.$pages.eq(this.page), c = "horizontal" === this.config.writingMode ? window : a, 
            this.readChars = b.howmuchread("getLength") + a.howmuchread({
                parent: c
            });
        }, b.prototype.loadReadChars = function() {
            var a, b, c, d;
            return b = 0, c = 0, this.$pages.each(function(a) {
                return function(d, e) {
                    var f;
                    return f = $(e).howmuchread("getLength"), b <= a.readChars && a.readChars < b + f && (a.pageTo(d, {
                        preventScroll: !0
                    }), c = a.readChars - b), b += f;
                };
            }(this)), a = this.$pages.eq(this.page), d = "horizontal" === this.config.writingMode ? window : a, 
            a.howmuchread("scrollTo", c, {
                parent: d
            });
        }, b.prototype.setMarker = function(a) {
            return a = parseInt(a, 10), isNaN(a) || 0 > a || this.pagesize <= a ? void 0 : this.marker !== a ? (this.marker = a, 
            this.$markerTooltip.addClass("loading"), pixiv.api.post("rpc_marker.php", {
                mode: "save",
                i_id: this.id,
                u_id: pixiv.user.id,
                page: a + 1
            }).done(function(a) {
                return function(b, c) {
                    return "success" === c ? (a.updateMarker(), a.loadMarkers()) : void 0;
                };
            }(this))) : void 0;
        }, b.prototype.destroyMarker = function() {
            return null !== this.marker ? (this.marker = null, this.$markerTooltip.addClass("loading"), 
            pixiv.api.post("rpc_marker.php", {
                mode: "save",
                i_id: this.id,
                u_id: pixiv.user.id,
                page: 0
            }).done(function(a) {
                return function(b, c) {
                    return "success" === c ? (a.updateMarker(), a.loadMarkers()) : void 0;
                };
            }(this))) : void 0;
        }, b.prototype.loadMarkers = function() {
            return this.$markerTooltip.addClass("loading"), pixiv.api.post("rpc_marker.php", {
                mode: "list",
                u_id: pixiv.user.id,
                offset: 0
            }).done(function(a) {
                return function(b, c) {
                    return "success" === c ? (a.markers = b, a.updateMarkerList(), a.$markerTooltip.removeClass("loading")) : void 0;
                };
            }(this));
        }, b.prototype.updateMarker = function() {
            return null === this.marker ? this.$markerTooltip.addClass("no-marker") : (this.$followMarkerButton.text("続き(" + (this.marker + 1) + "ページ)から読む"), 
            this.$markerTooltip.removeClass("no-marker")), this.marker === this.page ? this.$bodyMarker.addClass("active") : this.$bodyMarker.removeClass("active");
        }, b.prototype.updateMarkerList = function() {
            return this.$markerList.empty(), 0 === this.markers.length ? void this.$markerList.append($("<div/>", {
                "class": "no-marked-novel-message",
                text: "しおりはまだはさまれておりません"
            })) : this.markers.forEach(function(a) {
                return function(b) {
                    var c;
                    return c = $("<li/>", {
                        "class": "marker-novel"
                    }).append($("<a/>", {
                        "class": "marker-link",
                        href: "/novel/show.php?id=" + b.id + "#" + b.marked_scene
                    }).append($("<div/>", {
                        "class": "marker-novel-main"
                    }).append($("<p/>", {
                        "class": "marker-novel-title",
                        text: b.title
                    })).append($("<p/>", {
                        "class": "marker-novel-author"
                    }).append(document.createTextNode("by ")).append($("<span>", {
                        href: "/novel/member.php?id=" + b.user_id,
                        "class": "marker-novel-authorlist",
                        text: b.user_name
                    })))).append($("<div/>", {
                        "class": "marker-novel-sub"
                    }).append($("<img/>", {
                        "class": "marker-novel-thumbnail",
                        src: b.url,
                        alt: b.title
                    })).append($("<p/>", {
                        "class": "marker-novel-status",
                        text: b.marked_scene + "/" + b.scene + "ページ"
                    })))), a.$markerList.append(c);
                };
            }(this));
        }, b.prototype.updateBodyMarker = function() {
            var a, b, c, d;
            if (b = $(window).scrollTop(), c = this.$textWrapper.offset(), d = {
                width: this.$textWrapper.outerWidth(),
                height: this.$textWrapper.outerHeight()
            }, a = b <= c.top ? "top" : b <= c.top + d.height - 70 ? "fixed" : "bottom", !this.$bodyMarker.hasClass(a)) {
                if (this.$bodyMarker.removeClass("top fixed bottom").addClass(a), "top" === a) return this.$bodyMarker.css({
                    position: "absolute",
                    top: "20px",
                    bottom: "auto",
                    right: "10px"
                });
                if ("fixed" === a) return this.$bodyMarker.css({
                    position: "fixed",
                    top: "20px",
                    bottom: "auto",
                    right: $(window).width() - c.left - this.$textWrapper.outerWidth() + 10 + "px"
                });
                if ("bottom" === a) return this.$bodyMarker.css({
                    position: "absolute",
                    top: "auto",
                    bottom: "20px",
                    right: "10px"
                });
            }
        }, b;
    }();
}.call(this), function() {
    "use strict";
    $(function() {
        !function() {
            var a;
            colon.storage.localStorage("hideHistoryBalloon") || (a = $("._balloon-history").removeClass("_hidden"), 
            $("._icon-close", a).on("click", function() {
                a.remove(), colon.storage.localStorage("hideHistoryBalloon", !0);
            }));
        }(), function() {
            var a, b, c;
            a = $("#back-to-top"), a.length && (b = !1, c = function(c) {
                var d;
                d = colon.w.scrollTop() <= colon.w.height() / 2, (d !== b || c) && a.toggleClass("off", b = d);
            }, colon.w.on("scroll", colon.throttle(function() {
                c();
            })), c(!0));
        }();
    }), pixiv.AreaEvent = function() {
        function a(a) {
            null == a && (a = {}), a.context && (this.context = $(a.context)), a.selector && (this.selector = a.selector), 
            a.target && this.watch(a.target);
        }
        var b;
        return b = !1, a.filters = {}, a.addFilter = function(a, b, c) {
            return this.filters[a] = [ b, c ], this;
        }, a.removeFilter = function(a) {
            return delete this.filters[a], this;
        }, a.setup = function(a) {
            var c;
            return c = "._area-target", b || (b = !0, colon.d.on("areain areaout", c, function(a) {
                return function(b) {
                    var c, d, e, f, g, h, i;
                    for (h = b.currentTarget, i = {
                        areain: 0,
                        areaout: 1
                    }[b.type], f = $.trim($(h).dataset("filter")).split(/\s+/), d = 0, e = f.length; e > d && (c = f[d], 
                    (null != (g = a.filters[c]) ? g[i].call(h, b) : void 0) !== !1); d++) ;
                };
            }(this))), a ? new pixiv.AreaEvent({
                target: c,
                context: a,
                selector: c
            }) : pixiv.areaEvent.watch(c);
        }, a.prototype.preloadAreaRate = 1, a.prototype.targets = null, a.prototype.inTargets = null, 
        a.prototype.outTargets = null, a.prototype.on = function() {
            var a;
            return a = colon.throttle(this.update, this, 500), this.context ? this.context.on("scroll.area", a) : colon.w.on("resize.area", $.proxy(this.resize, this)).on("scroll.area resize.area", a), 
            this;
        }, a.prototype.off = function() {
            var a;
            return (null != (a = this.context) ? a : colon.w).off(".area"), this;
        }, a.prototype.resize = function() {
            var a;
            a = this.context || colon.w, this.windowWidth = a.width(), this.windowHeight = a.height();
        }, a.prototype.update = function() {
            var a, b, c, d, e, f, g, h, i, j, k, l, m;
            if (this.targets) {
                for (a = this.context || colon.w, h = a.scrollTop(), g = a.scrollLeft(), k = g + this.windowWidth, 
                j = h + this.windowHeight, this.inTargets && this.outTargets || (this.inTargets = $(), 
                this.outTargets = $.extend({}, this.targets)), l = this.windowWidth * this.preloadAreaRate, 
                m = this.windowHeight * this.preloadAreaRate, f = this.targets, b = 0, d = f.length; d > b; b++) i = f[b], 
                i = $(i), e = i.position(), e.left + g >= g - l && e.left + g < k + l && e.top >= h - 2 * m && e.top < j + m ? (c = this.outTargets.filter(i).length, 
                i.trigger("area", [ c ]), c && (i.trigger("areain"), this.outTargets = this.outTargets.not(i), 
                this.inTargets = this.inTargets.add(i))) : this.inTargets.filter(i).length && (i.trigger("areaout"), 
                this.inTargets = this.inTargets.not(i), this.outTargets = this.outTargets.add(i));
                return this;
            }
        }, a.prototype.watch = function(a, b) {
            return a = $(a || this.selector, b || this.context), a.length ? (this.targets ? (this.targets = this.targets.add(a), 
            this.outTargets = this.outTargets.add(a)) : (this.targets = a, this.on()), this.resize(), 
            this.update(), this) : this;
        }, a.prototype.unwatch = function(a, b) {
            return a = $(a || this.selector, b || this.context), a.length ? (this.targets ? (this.targets = this.targets.not(a), 
            this.inTargets = this.inTargets.not(a), this.outTargets = this.outTargets.not(a)) : (this.targets = null, 
            this.inTargets = null, this.outTargets = null, this.off()), this) : this;
        }, a;
    }(), pixiv.AreaEvent.addFilter("lazy-image", function() {
        var a, b;
        b = $(this), a = b.data("src"), a && ("IMG" === this.nodeName ? b.attr("src", a) : b.css("background-image", "url(" + a + ")"));
    }, function() {
        var a, b;
        b = $(this), a = b.data("src"), a && ("IMG" === this.nodeName ? b.attr("src", pixiv.transparentImage) : b.css("background-image", ""), 
        b.css({
            width: b.width(),
            height: b.height()
        }));
    }), pixiv.areaEvent = new pixiv.AreaEvent();
}.call(this), function() {
    "use strict";
    !function(a) {
        return colon.ns("pixiv.api", {
            userProfile: function(a, b) {
                return pixiv.api.get("/rpc/get_profile.php", a, b);
            },
            userFolder: function(a, b) {
                return pixiv.api.get("/rpc_group_setting.php", {
                    mode: "get",
                    type: "bookuser",
                    id: a
                }, b);
            }
        }), a(function() {
            pixiv.ProfileCard.setup();
        }), pixiv.ProfileCard = function() {
            function b(a, b) {
                this.target = a, this.data = b;
            }
            return b.setup = function() {
                var b, c;
                c = null, b = null, colon.d.on("mouseenter", ".ui-profile-popup", function(d) {
                    return function(d) {
                        var e, f;
                        a(d.relatedTarget).closest("._profile-popup").length || (b = null, window.clearTimeout(c), 
                        f = a(d.currentTarget), e = f.dataset(), e.user_id && (c = window.setTimeout(function() {
                            b = new pixiv.ProfileCard(f, e), b.open();
                        }, 150)));
                    };
                }(this)).on("mouseleave", ".ui-profile-popup", function(d) {
                    return function(d) {
                        a(d.relatedTarget).closest("._profile-popup").length || null != b && b.close(), 
                        b = null, window.clearTimeout(c);
                    };
                }(this));
            }, b.prototype.open = function() {
                var b;
                this.container = a(colon.template("profile-popup-loading", this.data)).appendTo("body"), 
                b = colon.ui.popupPosition(this.container, this.target, {
                    offset: -10,
                    nipple: a(".nipple", this.container),
                    nippleMargin: 5
                }), this.request(), this.modal = colon.ui.modal.push(this.container, {
                    disposable: !0
                }), this.container.on("mouseenter", function(b) {
                    return function(c) {
                        a(c.relatedTarget).closest(b.target).length || b.container.stop(!0).fadeTo(100, 1);
                    };
                }(this)).on("mouseleave", function(b) {
                    return function(c) {
                        a(c.relatedTarget).closest(b.target).length || b.close();
                    };
                }(this));
            }, b.prototype.request = function() {
                return pixiv.api.userProfile({
                    user_ids: this.data.user_id,
                    illust_num: 3,
                    novel_num: 3
                }, {
                    cache: colon.req.storeObject(864e5)
                }).done(function(b) {
                    return function(c, d, e, f) {
                        pixiv.ProfileCard.cache = f, b.data = c.body[0], b.data.controllable = pixiv.user.loggedIn && pixiv.user.id !== b.data.user_id, 
                        b.data.premium = !!pixiv.user.premium, b.data.r18_page = !!pixiv.context.r18, b.data.items = b.data.illusts.concat(b.data.novels).slice(0, 3), 
                        a(".wrapper", b.container).html(a(colon.template("profile-popup", b.data))), b.data.self || new pixiv.FollowButton(a("._follow-button-container", b.container), b.data);
                    };
                }(this));
            }, b.prototype.close = function() {
                this.container.stop(!0).fadeOut("fast", function(a) {
                    return function() {
                        colon.ui.modal.close(a.modal);
                    };
                }(this));
            }, b;
        }(), pixiv.FollowButton = function() {
            function b(b, c) {
                this.data = c, this.container = a(b).on("click", ".follow-button", a.proxy(this.follow, this)).on("click", ".update-button", a.proxy(this.update, this)).on("click", ".unfollow-button", a.proxy(this.unfollow, this)), 
                this.data.premium && this.container.one("mouseenter", a.proxy(this.folder, this));
            }
            return b.prototype.folder = function(b) {
                return pixiv.api.userFolder(pixiv.user.id).done(function(b) {
                    return function(c, d, e, f) {
                        var g;
                        pixiv.ProfileCard.folderCache = f, b.folders = a.extend(!0, [], pixiv.ProfileCard.newFolders);
                        for (g in c.tag_a) b.folders.push(g);
                        colon.unique(b.folders), b.folders.sort(), b.updateFolder();
                    };
                }(this)), !1;
            }, b.prototype.newFolder = function() {
                var b, c;
                (b = a.trim(window.prompt(colon.t("フォルダー名を指定してください")))) && -1 === a.inArray(b, this.folders) && (pixiv.ProfileCard.newFolders || (pixiv.ProfileCard.newFolders = []), 
                pixiv.ProfileCard.newFolders.push(b), this.folders.push(b), this.folders.sort(), 
                c = a.inArray(b, this.folders), c = -1 === c ? 1 : c + 1, a(this.folderItem(b)).insertAfter(a("option", this.container).eq(c)).prop("selected", !0));
            }, b.prototype.updateFolder = function() {
                var b;
                b = a("select", this.container).append(this.folderItem(this.folders)).prop("disabled", !1).on("change", function(a) {
                    return function() {
                        "new" === b[0].value && 1 === b[0].selectedIndex && a.newFolder();
                    };
                }(this));
            }, b.prototype.folderItem = function(b) {
                var c, d, e, f, g;
                for ("array" !== a.type(b) && (b = [ b ]), g = [], c = e = 0, f = b.length; f > e; c = ++e) d = b[c], 
                g[c] = '<option value="' + d + '">' + d + "</option>";
                return g.join("");
            }, b.prototype.updateState = function() {
                this.container.html(colon.template("follow-option", this.data)), this.container[this.data.is_follow ? "addClass" : "removeClass"]("following2");
            }, b.prototype.follow = function(a) {
                return this.container.hasClass("following2") ? void 0 : this.update(a);
            }, b.prototype.update = function(b) {
                return a(".options-wrapper", this.container).addClass("_hidden"), a("button", this.container).prop("disabled", !0), 
                pixiv.api.follow(this.data.user_id, a('input[name="restrict"]:checked', this.container).val(), a("select", this.container).val()).done(function(b) {
                    return function() {
                        var c, d;
                        b.data.is_follow = !0, b.updateState(), b.container.trigger("follow"), null != (d = pixiv.ProfileCard.cache) && d.update({
                            body: [ {
                                is_follow: !0
                            } ]
                        }), pixiv.ProfileCard.newFolders = null, "function" == typeof (c = pixiv.ProfileCard).folderCache && c.folderCache(null), 
                        b.data.premium && b.container.one("mouseenter", a.proxy(b.folder, b));
                    };
                }(this)).fail(function(a, b, c) {}).always(function(b) {
                    return function() {
                        b.container.one("mouseleave", function() {
                            return a(".options-wrapper", b.container).removeClass("_hidden");
                        }), a("button", b.container).prop("disabled", !1);
                    };
                }(this)), !1;
            }, b.prototype.unfollow = function(b) {
                return a(".options-wrapper", this.container).addClass("_hidden"), a("button", this.container).prop("disabled", !0), 
                pixiv.api.unfollow(this.data.user_id).done(function(a) {
                    return function() {
                        var b;
                        a.data.is_follow = !1, a.updateState(), a.data.premium && a.updateFolder(), a.container.trigger("unfollow"), 
                        null != (b = pixiv.ProfileCard.cache) && b.update({
                            body: [ {
                                is_follow: !1
                            } ]
                        });
                    };
                }(this)).fail(function(a, b, c) {}).always(function(b) {
                    return function() {
                        a(".options-wrapper", b.container).removeClass("_hidden"), a("button", b.container).prop("disabled", !1);
                    };
                }(this)), !1;
            }, b;
        }();
    }(jQuery);
}.call(this), function() {
    "use strict";
    $(function() {
        colon.dispatcher.connect("/beta/style-guide/profile.html", function() {
            pixiv.list.setup(), pixiv.profile.setup();
        }).connect("/beta/member.php", function() {
            pixiv.list.setup(), pixiv.profile.setup();
        }).dispatch();
    }), colon.ns("pixiv.profile", {
        setup: function() {
            var a, b, c, d, e, f;
            return e = $("._profile-container"), c = $("._profile-intro .wrapper"), b = !0, 
            f = function() {
                var a;
                a = c.position().top - colon.w.scrollTop() >= 200 && colon.w.scrollTop() <= 100, 
                a !== b && e.toggleClass("intro", b = a);
            }, colon.w.on("scroll", f), a = $("._list-container"), d = new Brickmaker(a[0], {
                columnWidth: 320
            }), colon.d.on("scroll", function() {
                var b, c;
                c = $("body").width(), b = Math.min(Math.floor((c - 20) / 340), 6), d.columnCount !== b && d.update({
                    columnCount: b
                }), a.css("margin-left", (c - (360 * b - 40)) / 2);
            }).resize();
        }
    });
}.call(this), function() {
    "use strict";
    var a;
    colon.ns("pixiv.api.promotion", {
        melonbooksDL: function(a, b) {
            return pixiv.api.get("http://www.melonbooks.com/api/pixiv/get_promotion_ads.php", {
                pixiv_user_id: a,
                adult: b
            });
        },
        booth: function(a, b) {
            return pixiv.api.get("https://api.booth.pm/pixiv/shops/show.json", {
                pixiv_user_id: a,
                adult: b
            });
        },
        comico: function(a, b) {
            return pixiv.api.get("http://comico.pixiv.net/api/promotion.php", {
                pixiv_user_id: a,
                adult: b
            });
        }
    }), a = {
        melonbooksDL: function() {
            var a;
            return (a = pixiv.Promotion.findItem(1)) && pixiv.api.promotion.melonbooksDL(a.user_id, a.adult_param).done(function(a) {
                (null != a ? a.body : void 0) && (a.body.content = pixiv.context.content, new pixiv.Promotion("._melonbooks-dl-promotion-container", a.body, "melonbooks-dl"));
            }), this;
        },
        booth: function() {
            var a;
            return (!colon.ua.ie || colon.ua.v > 8) && (a = pixiv.Promotion.findItem(2)) && pixiv.api.promotion.booth(a.user_id, a.adult_param).done(function(a) {
                var b, c;
                (null != a ? a.body : void 0) && (a.body.content = pixiv.context.content, b = new pixiv.Promotion("._booth-promotion-container", a.body), 
                null != (c = b.listItemContainer) && c.boxHeight());
            }), this;
        },
        comico: function() {
            var a;
            return (a = pixiv.Promotion.findItem(3)) && pixiv.api.promotion.comico(a.user_id, a.adult_param).done(function(a) {
                (null != a ? a.body : void 0) && (a.body.content = pixiv.context.content, new pixiv.Promotion("._comico-promotion-container", a.body, "comico"));
            }), this;
        }
    }, $(function() {
        colon.dispatcher.connect(/^(?:\/member(?:_illust)?|\/novel\/show)\.php$/, function() {
            pixiv.context.promotionItems && a.booth().comico().melonbooksDL();
        }).connect(/^\/novel\/(?:index\.php)?$/, function() {
            var a, b;
            a = {
                items: [ {
                    title: "絶深海のソラリス",
                    author: "らきるち",
                    illustrator: "あさぎり",
                    workId: 918,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/918.jpg"
                }, {
                    title: "クレイとフィンと願いの手紙",
                    author: "友野詳",
                    illustrator: "スオウ",
                    workId: 873,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/873.jpg"
                }, {
                    title: "人間の分際で悩むな 超能力者に放課後を捧ぐ",
                    author: "タカハシヨウ",
                    illustrator: "竜宮ツカサ",
                    workId: 872,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/872.jpg"
                }, {
                    title: "マカロン大好きな女の子がどうにかこうにか千年生き続けるお話。",
                    author: "からて",
                    illustrator: "わんにゃんぷー",
                    workId: 828,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/828.jpg"
                }, {
                    title: "ミカグラ学園組曲1 放課後ストライド",
                    author: "Last Note.",
                    illustrator: "明菜",
                    workId: 827,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/827.jpg"
                }, {
                    title: "シロノノロイ",
                    author: "namahage2",
                    illustrator: "△○□×",
                    workId: 826,
                    imageURL: pixiv.sourcePath + "images/pixiv-comic/novel/826.jpg"
                } ]
            }, new pixiv.Promotion("#pixiv-comic-novel-container", a, "comic-novel"), b = {
                items: pixiv.context.contestPortalItems || []
            }, new pixiv.Promotion("#pickup-contest-container-mini", b, "contest-novel");
        }).connect("/mypage.php", function() {
            var a;
            a = {
                items: pixiv.context.comicPromotionItems || []
            }, new pixiv.Promotion("#comic-container", a, "comic", {
                view: 2
            });
        }).connect("/contest/", function() {
            var a;
            a = {
                items: pixiv.context.contestPortalItems || []
            }, new pixiv.Promotion("#pickup-contest-container", a, "contest-portal");
        }).dispatch();
    }), pixiv.Promotion = function() {
        function a(a, b, c, d) {
            this.data = b, this.options = null != d ? d : {
                view: 1
            }, this.container = $(a), c && (this.template += "-" + c), this.create();
        }
        return a.findItem = function(a) {
            var b, c, d, e;
            for (e = pixiv.context.promotionItems, c = 0, d = e.length; d > c; c++) if (b = e[c], 
            b.site_id === a) return b;
        }, a.prototype.template = "promotion", a.prototype.create = function() {
            var a, b, c, d, e;
            for (e = this.data.items, a = c = 0, d = e.length; d > c; a = ++c) b = e[a], a >= this.options.view && (b.lazy = !0);
            this.container.append(colon.template(this.template, this.data)), this.data.items.length && (this.listContainer = $(".items", this.container), 
            this.listItemContainer = $(".item", this.listContainer), this.pagerContainer = $(".pager", this.container), 
            this.createPager());
        }, a.prototype.createPager = function() {
            var a, b, c, d, e, f, g;
            if (e = this.pagerContainer, g = this.options.view, !e.length || this.data.items.length <= g) return void e.remove();
            for (this.containerWidth = this.container.width(), this.itemWidth = this.listItemContainer.outerWidth(!0), 
            this.offset = (this.containerWidth - this.itemWidth * g) / 2, this.listContainer.width(this.itemWidth * this.data.items.length + 2 * this.offset), 
            d = [], b = c = 1, f = Math.ceil(this.data.items.length / g); f >= 1 ? f >= c : c >= f; b = f >= 1 ? ++c : --c) a = 1 === b ? ' class="current"' : "", 
            d.push("<li" + a + "><span>" + b + "</span></li>");
            e.html(d.join("")).on("click mouseenter", "li:not(.current)", function(a) {
                return function(b) {
                    var c, d;
                    d = $(b.target), c = +d.text() - 1, a.move(d, c);
                };
            }(this)), this.listItemContainer.on("click", function(a) {
                return function(b) {
                    var c;
                    c = a.listItemContainer.index(b.currentTarget), $("li", e).eq(c).click();
                };
            }(this)), this.container.on("click", ".pager-prev", function() {
                var a, b;
                a = $(".current", e).prev(), b = a.length ? a : e.children().last(), b.click();
            }).on("click", ".pager-next", function() {
                var a, b;
                a = $(".current", e).next(), b = a.length ? a : e.children().first(), b.click();
            });
        }, a.prototype.move = function(a, b) {
            var c;
            return c = this.options.view, a.siblings().removeClass("current").end().addClass("current"), 
            this.listContainer.css("margin-left", b * this.itemWidth * c * -1 + this.offset), 
            $("img", this.listContainer).slice(b * c, b * c + c).each(function() {
                var a, b;
                return a = $(this), b = a.dataset("src"), b ? a.attr({
                    src: b,
                    "data-src": null
                }) : void 0;
            });
        }, a;
    }();
}.call(this), function() {
    "use strict";
    colon.ns("pixiv.api", {
        ranking: function(a, b) {
            return pixiv.api.get("/ranking.php", $.extend(a, {
                format: "json"
            }), b);
        }
    }), $(function() {
        colon.dispatcher.connect("/ranking.php", function() {
            pixiv.ranking.attrFilter.setup();
        }).dispatch();
    }), colon.ns("pixiv.ranking", {
        setup: function() {
            var a;
            colon.d.on("click", ".ranking-item .open-info", this.info).on("uiScroll", ".ui-scroll", function() {
                var a, b;
                if (a = /^#(\d+)$/.exec($(this).attr("href"))) return b = Math.ceil(a[1] / 50), 
                colon.query.replace({
                    p: 1 === b ? null : b
                }, !0);
            }), colon.w.on("hashchange", function(a) {
                return function() {
                    a.permalink();
                };
            }(this)).trigger("hashchange"), pixiv.context.next && (this.indicator = new pixiv.LoadingIndicator(".ranking-items-container"), 
            a = $(".column-menu.bottom").on("autoView", function(a) {
                return function() {
                    return a.next();
                };
            }(this)), this.autoView = new pixiv.AutoView(a, {
                enable: !0
            }).apply(), this.page = +(pixiv.context.queries.p || 1));
        },
        permalink: function() {
            var a, b;
            a = +(null != (b = /\d+/.exec(window.location.hash)) ? b[0] : void 0), a && a !== this.position && ($("#" + this.position).removeClass("current"), 
            $("#" + a).addClass("current"), this.position = a);
        },
        info: function() {
            var a, b, c, d, e;
            a = $(this).closest(".ranking-item"), b = a.dataset(), c = $(".info-modal", a), 
            c.length || (d = Math.ceil(b.rank / 50), e = colon.query.build("http://www.pixiv.net/ranking.php", {
                mode: pixiv.context.mode,
                date: pixiv.context.date,
                content: pixiv.context.content,
                p: 1 === d ? null : d
            }), c = $(colon.template("ranking-info-modal", $.extend(b, {
                url: "http://www.pixiv.net/member_illust.php?mode=medium&illust_id=" + b.id,
                text: pixiv.context.rankingDate + " " + pixiv.context.rankingType + " " + b.rankText + " " + b.title + " | " + b.userName + " " + e + "#" + b.rank,
                hashtag: pixiv.context.twitterHashTag
            }))).appendTo(a), pixiv.ui.shareButton.update()), colon.ui.modal.toggle(this, c);
        },
        next: function() {
            return this.autoView.pause(), pixiv.api.ranking($.extend({}, pixiv.context.queries, {
                p: this.page + 1
            })).always(function(a) {
                return function() {
                    a.indicator.stop();
                };
            }(this)).done(function(a) {
                return function(b) {
                    $(colon.template("ranking-items", {
                        items: a.itemRank(b).contents,
                        mode: pixiv.context.mode
                    })).appendTo(".ranking-items"), pixiv.scrollView.update(), pixiv.ranking.attrFilter.update(), 
                    colon.ga.trackPageview(colon.query.replace({
                        ref: "rn-h-next-3"
                    })), ++a.page, b.next ? a.autoView.restart() : a.finish();
                };
            }(this)).fail(function(a) {
                return function() {
                    a.finish();
                };
            }(this));
        },
        finish: function() {
            this.indicator.finish(this.indicator), this.autoView.complete(), this.completed = !0, 
            pixiv.scrollView.unregisterFilter("auto-view");
        },
        itemRank: function(a) {
            var b, c, d;
            d = a.contents;
            for (c in d) if (b = d[c], b.yes_rank) switch (!1) {
              case !(b.rank > b.yes_rank):
                b.down = !0, b.yesterday_page = Math.ceil(b.yes_rank / 50);
                break;

              case b.rank !== b.yes_rank:
                b.stay = !0;
                break;

              case !(b.yes_rank < a.rank_total):
                b.up = !0, b.yesterday_page = Math.ceil(b.yes_rank / 50);
            }
            return a;
        }
    }), colon.ns("pixiv.ranking.attrFilter", {
        setup: function() {
            var a, b;
            this.data = colon.storage.localStorage(RANKING_ATTR_FILTER_ITEMS) || {}, a = $("._ranking-attr-filter-container").append(colon.template("ranking-attr-filter-list-item", this.data)).on("change", "input", function(a) {
                return function(b) {
                    var c, d;
                    d = $(b.currentTarget), c = d.attr("name"), d.prop("checked") ? (colon.ga.trackEvent([ "rankingAttrFilter", "on", c ]), 
                    a.hide(c)) : a.show(c);
                };
            }(this)), colon.storage.localStorage(RANKING_ATTR_FILTER_MENU_HIDDEN) || (b = a.on("mouseleave", function() {
                colon.storage.localStorage(RANKING_ATTR_FILTER_MENU_HIDDEN, !0), b.removeClass("_visible-block");
            }).find("._sub-menu-container").addClass("_visible-block")), this.update();
        },
        update: function() {
            $(".ranking-item").each(function(a) {
                return function(b, c) {
                    var d, e, f, g, h;
                    for (h = $(c), g = h.dataset("attr").split(" "), e = 0, f = g.length; f > e; e++) if (d = g[e], 
                    d && a.data[d]) return void h.addClass("_attr-filter-hidden");
                    h.removeClass("_attr-filter-hidden");
                };
            }(this));
        },
        show: function(a) {
            return this.data[a] = !1, colon.storage.localStorage(RANKING_ATTR_FILTER_ITEMS, this.data), 
            this.update();
        },
        hide: function(a) {
            return this.data[a] = !0, colon.storage.localStorage(RANKING_ATTR_FILTER_ITEMS, this.data), 
            this.update(), pixiv.scrollView.update();
        }
    });
}.call(this), function() {
    "use strict";
    !function(a) {
        var b;
        return a(function() {
            colon.dispatcher.connect("/search_user.php", function() {
                return b();
            }).connect("/bookmark_add.php", function() {
                return b();
            }).dispatch();
        }), b = function() {
            new pixiv.UserList(".user-recommendation-unit");
        };
    }(jQuery);
}.call(this), function() {
    "use strict";
    $(function() {
        colon.dispatcher.connect("/beta/search.php", function() {
            pixiv.list.setup();
        }).dispatch();
    }), colon.ns("pixiv.list", {
        setup: function() {
            var a, b;
            return a = $("._list-container"), b = new Brickmaker(a[0], {
                columnWidth: 320
            }), colon.d.on("resize", function() {
                var c, d;
                d = $("body").width(), c = Math.min(Math.floor((d - 40) / 360), 6), b.columnCount !== c && b.update({
                    columnCount: c
                }), a.css("margin-left", (d - (360 * c - 40)) / 2);
            }).resize();
        }
    });
}.call(this), function() {
    "use strict";
    $(function() {
        colon.dispatcher.connect("/setting_showcase.php", function() {
            pixiv.ShowcaseSetting.setup();
        }).dispatch();
    }), colon.ns("pixiv.showcase", {
        setup: function() {
            return this.container = $("div.user-ad-container");
        }
    }), pixiv.ShowcaseSetting = function() {
        function a(a) {
            var b;
            this.container = a, this.loadingContainer = $(".loading", this.container), this.errorContainer = $(".illust-id-container .error", this.container), 
            this.previewContainer = $(".preview", this.container), this.pointContainer = $(".point", this.container), 
            this.illustIdContainer = $(".illust-id", this.container), this.dateContainer = $("input.date", this.container), 
            this.submitButton = $('input[type="submit"]', this.container), b = $(".ui-tag", this.container), 
            this.tags = new pixiv.ui.Tag(b, {
                maxCount: 5
            }).tags, this.illustIdContainer.on("keyup blur", colon.debounce(this.updatePreview, this, 500)), 
            b.on("uiTagUpdate", function(a) {
                return function() {
                    return a.updatePoint();
                };
            }(this)), this.container.on("showcaseSettingUpdate", function(a) {
                return function(b) {
                    return a.verify(b);
                };
            }(this)), this.illustIdContainer.blur(), this.datepicker();
        }
        return a.setup = function() {
            var a, b;
            a = pixiv.context.queries.id, b = pixiv.context.queries.tag, (a || b) && (pixiv.showcase.count < 3 ? this.open("new", {
                form_illust_id: a,
                form_tags: b
            }) : window.alert(colon.t("ショーケースを同時に3件以上設定することはできません。")));
        }, a.open = function(a, b) {
            var c;
            null == b && (b = {}), c = $("#showcase-" + a), c.length || ($.extend(b, {
                id: a,
                total_point: pixiv.user.point
            }), c = $(colon.template("showcase-modal", b)), c.appendTo("body"), new pixiv.ShowcaseSetting(c)), 
            pixiv.ui.modal.push(c, {
                block: !0,
                click: function() {
                    var a;
                    return a = $(".ui-datepicker"), !(a.length && a.is(":visible"));
                }
            });
        }, a.prototype.updatePreview = function() {
            var a;
            return this.previewContainer.text("?").addClass("no-item"), (a = pixiv.ui.Tag.trim(this.illustIdContainer.val())) ? (this.loadingContainer.css("display", "inline-block"), 
            this.errorContainer.empty(), pixiv.api.validation.illustId(a).always(function(a) {
                return function() {
                    return a.loadingContainer.hide();
                };
            }(this)).done(function(a) {
                return function(b) {
                    b = b.data, b && $(colon.template("showcase-modal-preview", b)).appendTo(a.previewContainer.empty().removeClass("no-item")), 
                    a.container.trigger("showcaseSettingUpdate");
                };
            }(this)).fail(function(a) {
                return function(b, c, d) {
                    a.errorContainer.text(d.illust_id || "unknown error"), a.container.trigger("showcaseSettingUpdate");
                };
            }(this))) : void 0;
        }, a.prototype.datepicker = function() {
            return pixiv.get["jquery-ui"]().done(function(a) {
                return function() {
                    var b, c, d, e, f;
                    f = a, e = new Date(), d = 14 === e.getUTCHours() && e.getUTCMinutes() >= 30 ? 2 : 1, 
                    c = $.datepicker.formatDate("yy-mm-dd", new Date(+new Date() + 864e5 * d)), b = a.dateContainer.datepicker({
                        dateFormat: "yy-mm-dd",
                        defaultDate: d,
                        minDate: d,
                        maxDate: d + 7 - 1,
                        beforeShow: function() {
                            b.eq(0).datepicker("setDate", b[0].value.slice(0, 10)).end().eq(1).datepicker("setDate", b[1].value.slice(0, 10)), 
                            pixiv.ui.modal.pause();
                        },
                        onSelect: function(a) {
                            a = $.datepicker.parseDate("yy-mm-dd", a), this === b[0] && b.eq(1).datepicker("option", {
                                minDate: a,
                                maxDate: new Date(+a + 864e5 * (d + 7 - 2))
                            }), f.updatePoint();
                        },
                        onClose: function() {
                            b[0].value += " 00:00", b[1].value += " 23:59", pixiv.ui.modal.restart();
                        }
                    }), b.eq(0).val(c + " 00:00"), b.eq(1).val(c + " 23:59"), a.updatePoint();
                };
            }(this));
        }, a.prototype.verify = function() {
            var a, b;
            b = $.trim(this.illustIdContainer.val()) && !this.previewContainer.hasClass("no-item") && 0 !== this.total && 5 >= (a = this.tags.length) && a > 0 && !this.pointContainer.parent().hasClass("error"), 
            this.submitButton.prop("disabled", !b);
        }, a.prototype.updatePoint = function() {
            var a, b, c, d, e;
            c = this.pointContainer, a = this.dateContainer, b = $.datepicker.parseDate("yy-mm-dd", a.eq(0).val().slice(0, 10)), 
            d = $.datepicker.parseDate("yy-mm-dd", a.eq(1).val().slice(0, 10)), e = this.calc(b, d), 
            c.text(colon.format(e)).parent()[e > pixiv.user.point ? "addClass" : "removeClass"]("error"), 
            this.container.trigger("showcaseSettingUpdate");
        }, a.prototype.calc = function(a, b) {
            var c, d;
            return c = a && b ? (b - a) / 1e3 / 60 / 60 / 24 + 1 : 0, d = Math.min(this.tags.length, 5), 
            this.total = 100 * c * d;
        }, a;
    }();
}.call(this), function() {
    "use strict";
    colon.ns("pixiv.social", {
        addFacebookCount: function(a, b) {
            return a.length ? $.getJSON("http://graph.facebook.com/?callback=?", {
                id: b || window.location.href
            }).done(function(b) {
                a.text(b.shares || "0");
            }) : void 0;
        },
        addTwitterCount: function(a, b) {
            return a.length ? $.getJSON("https://cdn.api.twitter.com/1/urls/count.json?callback=?", {
                url: b || window.location.href
            }).done(function(b) {
                a.text(b.count || "0");
            }) : void 0;
        }
    }), pixiv.scrollView.registerFilter("share-facebook", function(a) {
        var b;
        b = a.dataset(), pixiv.social.addFacebookCount($(".count", a), b.url), a[0].onclick || a.on("click", function() {
            return window.open(colon.query.build("https://www.facebook.com/sharer.php", {
                app_id: pixiv.config.facebookAppId,
                u: b.url,
                display: "popup"
            }), null, "menuber=no,toolbar=no,resizable=yes,scrollbats=yes,width=670,height=390"), 
            !1;
        });
    }), pixiv.scrollView.registerFilter("share-twitter", function(a) {
        var b;
        b = a.dataset(), pixiv.social.addTwitterCount($(".count", a), b.url), a[0].onclick || a.on("click", function() {
            return window.open(colon.query.build("https://twitter.com/share", {
                url: b.url,
                text: b.text,
                hashtags: b.hashtags
            }), null, "menuber=no,toolbar=no,resizable=yes,scrollbats=yes,width=550,height=470"), 
            !1;
        });
    });
}.call(this), function() {
    "use strict";
    !function(a) {
        return a(function() {
            var b;
            return b = a(document.documentElement), b.hasClass("special-logo") ? (a(".header-logo .special-link").attr("href", b.dataset("logo-link")), 
            a(".header-logo #logoMap img").attr("src", b.dataset("logo-img"))) : void 0;
        });
    }(jQuery);
}.call(this), function() {
    "use strict";
    !function(a) {
        return colon.ns("pixiv.api", {
            ugokuIllust: function(b, c) {
                return "array" !== a.type(b) && (b = a.makeArray(b)), pixiv.api.get("/rpc/get_ugoira.php", {
                    illust_ids: b.join()
                }, c);
            }
        }), pixiv.UgokuIllustPlayer = function() {
            function b(b, c, d) {
                return this.data = c, this.options = null != d ? d : {}, this.container = a(b), 
                pixiv.UgokuIllustPlayer.supported ? (this.options.autoSize || (this.size = pixiv.UgokuIllustPlayer.size(this.data.size, this.options.maxWidth || this.options.maxSize, this.options.maxHeight || this.options.maxSize)), 
                this.container.on("click.ugokuillustplayer", ".play", function(a) {
                    return function() {
                        return a.play();
                    };
                }(this)).on("click.ugokuillustplayer", ".pause", function(a) {
                    return function() {
                        return a.pause();
                    };
                }(this)).on("click.ugokuillustplayer", ".toggle", function(a) {
                    return function() {
                        return a.toggle();
                    };
                }(this)).on("click.ugokuillustplayer", ".stop", function(a) {
                    return function() {
                        return a.stop();
                    };
                }(this)).addClass("ready"), void (this.options.autoStart && colon.async().done(function(a) {
                    return function() {
                        return a.play();
                    };
                }(this)))) : void this.container.addClass("outdated");
            }
            return b.supported = !!(window.File && window.FileReader && window.FormData && window.Uint8Array), 
            b.fullscreen = function() {
                return document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement;
            }, b.data = function(b, c) {
                return a.extend(!0, {
                    src: b.srcs[c]
                }, b);
            }, b.size = function(a, b, c) {
                var d, e, f, g, h, i;
                return null == b && (b = 600), a ? (h = a[0], e = a[1], c || (c = b), g = h / e, 
                d = b / c, g >= d ? (i = Math.min(h, b), f = i / g) : (f = Math.min(e, c), i = f * g), 
                [ i, f ]) : null;
            }, b.prototype.paused = !0, b.prototype.dispose = function() {
                this.container.off(".ugokuillustplayer").removeClass("ready"), a(".player", this.container).empty();
            }, b.prototype.createCanvas = function() {
                return this.canvas = a("<canvas>"), this.options.autoSize || this.canvas.attr({
                    width: this.data.size[0],
                    height: this.data.size[1]
                }).css({
                    width: this.size[0],
                    height: this.size[1]
                }), a(".player", this.container).html(this.canvas), this.canvas[0];
            }, b.prototype.load = function() {
                var b, c;
                this.player || (this.container.addClass("loading"), this.player = new ZipImagePlayer({
                    canvas: this.createCanvas(),
                    source: this.data.src,
                    metadata: this.data,
                    chunkSize: 3e5,
                    loop: this.options.loop !== !1,
                    autoStart: !0,
                    debug: pixiv.development,
                    autosize: this.options.autoSize
                }), b = a(this.player).on("loadingStateChanged", function(b) {
                    return function(c, d) {
                        var e;
                        1 === d && (b.container.removeClass("loading"), b.options.autoSize && (b.size = pixiv.UgokuIllustPlayer.size([ b.canvas[0].width, b.canvas[0].height ], b.options.maxWidth || b.options.maxSize, b.options.maxHeight || b.options.maxSize), 
                        b.canvas.css({
                            width: b.size[0],
                            height: b.size[1]
                        })), (e = b.data.originalSize || pixiv.context.illustSize) && (b.fullscreenSize = pixiv.UgokuIllustPlayer.size(e, 1920, 1080)), 
                        b.fullscreenSize && (b.fullscreenSize[0] > 600 || b.fullscreenSize[1] > 600) ? b.container.on("click", ".full-screen", function() {
                            return b.fullscreen();
                        }) : a(".full-screen", b.container).remove());
                    };
                }(this)), this.options.effect && b.on("frame", function(a) {
                    return function(b, c) {
                        return a.options.effect.call(a, c, a.canvas[0].getContext("2d"));
                    };
                }(this)), null != (c = this.onload) && c.call(this));
            }, b.prototype.fullscreen = function() {
                var b, c, d;
                return d = this.container.next("._full-screen-container"), d.length && (c = function() {
                    switch (!1) {
                      case !d[0].requestFullscreen:
                        return d[0].requestFullscreen(), !0;

                      case !d[0].webkitRequestFullscreen:
                        return d[0].webkitRequestFullscreen(), !0;

                      case !d[0].mozRequestFullScreen:
                        return d[0].mozRequestFullScreen(), !0;

                      case !d[0].msRequestFullscreen:
                        return d[0].msRequestFullscreen(), !0;

                      default:
                        return !1;
                    }
                }(), this.pause(), c && !colon.ua.ie) ? (this.fullscreenActive = !0, a("html").addClass("_full-screen"), 
                this.fullscreenPlayer || (b = this.fullscreenSize[0] <= 600 && this.fullscreenSize[1] <= 600 ? this.data : this.options.fullscreenData || pixiv.context.ugokuIllustFullscreenData, 
                b.size = this.fullscreenSize, d.on("click", ".exit-full-screen", function(a) {
                    return function() {
                        return a.exitFullscreen();
                    };
                }(this)), colon.d.on("fullscreenchange webkitfullscreenchange mozfullscreenchange MSFullscreenChange", function(c) {
                    return function() {
                        c.fullscreenActive && (document.fullscreenElement || document.webkitFullscreenElement || document.mozFullScreenElement || document.msFullscreenElement ? (null == c.fullscreenPlayer && (c.fullscreenPlayer = new pixiv.UgokuIllustPlayer(a("._ugoku-illust-player-container", d), b, {
                            maxWidth: 1920,
                            maxHeight: 1080
                        })), c.fullscreenPlayer.play(), a(".player", d).css({
                            marginTop: Math.max(window.screen.height / 2 - b.size[1] / 2, 0)
                        })) : c.exitFullscreen());
                    };
                }(this))), !1) : void 0;
            }, b.prototype.exitFullscreen = function() {
                var b, c;
                return null != (b = this.fullscreenPlayer) && b.pause(), (c = function() {
                    switch (!1) {
                      case !document.exitFullscreen:
                        return document.exitFullscreen(), !0;

                      case !document.webkitExitFullscreen:
                        return document.webkitExitFullscreen(), !0;

                      case !document.mozCancelFullScreen:
                        return document.mozCancelFullScreen(), !0;

                      case !document.msExitFullscreen:
                        return document.msExitFullscreen(), !0;

                      default:
                        return !1;
                    }
                }()) ? (this.fullscreenActive = !1, a("html").removeClass("_full-screen"), this.play(), 
                !1) : void 0;
            }, b.prototype.play = function() {
                this.paused = !1, this.container.addClass("playing").removeClass("pausing"), this.player ? this.player.play() : this.load();
            }, b.prototype.pause = function() {
                this.player && (this.paused = !0, this.container.removeClass("playing").addClass("pausing"), 
                this.player.pause());
            }, b.prototype.toggle = function() {
                this.paused ? this.play() : this.pause();
            }, b.prototype.stop = function() {
                this.player && (this.pause(), this.player.rewind());
            }, b;
        }(), pixiv.UgokuIllustPreview = function() {
            function b(b, c) {
                this.container = a(b), c && this.update(c);
            }
            return b.prototype.update = function(b) {
                var c, d;
                null != (d = this.player) && d.dispose(), this.player = new pixiv.UgokuIllustPlayer(this.container, b), 
                c = a("progress", this.container).removeClass("_hidden").width(this.player.size[0]).get(0), 
                c.max = b.delay, c.value = 0, a(".player", this.container).css({
                    width: this.player.size[0],
                    height: this.player.size[1],
                    backgroundImage: "url(" + b.frames[0].file + ")",
                    backgroundSize: this.player.size[0] + "px " + this.player.size[1] + "px"
                }), this.player.onload = function(d) {
                    return function() {
                        var e, f, g, h, i, j, k;
                        g = a("._ugoku-illust-upload-modal .item"), j = null, f = 25, i = 0, h = 0, e = 0, 
                        k = function() {
                            c.value = Math.min(i + f * e++, h);
                        }, a(d.player.player).on("frame", function(a, c) {
                            var d, l, m;
                            if (i = 0, c) for (d = l = 0, m = c; m >= 0 ? m > l : l > m; d = m >= 0 ? ++l : --l) i += b.frames[d].delay;
                            h = i + b.frames[c].delay, e = 0, j && window.clearInterval(j), j = window.setInterval(k, f), 
                            k(), g.removeClass("current").eq(c).addClass("current");
                        }).on("pause stop", function(a, b) {
                            j && window.clearInterval(j);
                        });
                    };
                }(this);
            }, b;
        }(), pixiv.UgokuIllustUploader = function() {
            function b(b, c) {
                this.reUpload = c, this.input = a(b), this.input.on("change", function(a) {
                    return function() {
                        a.container ? a.add() : a.open().done(function() {
                            return a.add();
                        });
                    };
                }(this));
            }
            return b.setup = function() {
                var b, c;
                b = a("._ugoku-illust-upload-container"), c = a(".upload-multiple-input", b), new pixiv.UgokuIllustUploader(c, "re_upload" === pixiv.context.queries.mode), 
                colon.ua.ie && colon.ua.v < 11 && (a(".upload-gif", b).addClass("_current"), a("._form-content-upload", b).removeClass("_hidden")), 
                pixiv.UgokuIllustPlayer.supported ? b.on("click", ".upload-multiple", function() {
                    return c.click();
                }).on("click", ".upload-gif", function() {
                    return a(".upload-gif-input").click();
                }).on("change", ".upload-gif-input", function() {
                    return a(".upload-gif-form").submit();
                }) : (b.addClass("outdated"), a(".upload-multiple", b).addClass("_disabled"));
            }, b.imageType = function(b) {
                var c, d;
                return c = a.Deferred(), d = new FileReader(b), d.onload = function(a) {
                    var b, d, e, f, g;
                    for (b = new Uint8Array(a.target.result), d = "", e = f = 0; 4 >= f; e = ++f) d += b[e].toString(16);
                    return g = function() {
                        switch (!1) {
                          case 0 !== d.indexOf("ffd8"):
                            return "image/jpeg";

                          case 0 !== d.indexOf("89504e47"):
                            return "image/png";

                          case 0 !== d.indexOf("474946"):
                            return "image/gif";
                        }
                    }(), c.resolve(g);
                }, d.readAsArrayBuffer(b), c.promise();
            }, b.fileSize = function(a) {
                var b, c, d, e;
                for (d = [ "", "K", "M" ], b = 0, c = d.length; c > b && (e = d[b], a >= 1024); b++) a /= 1024;
                return colon.format(a.toFixed(2)) + " " + e + "B";
            }, b.delayTime = function(a) {
                return a = "" + a, colon.padding(a.slice(0, -3)) + ":" + colon.padding(a.slice(-3), 3);
            }, b.prototype.delay = 125, b.prototype.frames = [], b.prototype.maxFrame = 150, 
            b.prototype.maxFileSize = 8388608, b.prototype.maxTotalFileSize = 31457280, b.prototype.validate = function() {
                var a, b, c, d, e, f, g, h, i;
                if (a = !1, this.frames.length <= 1) null != (f = this.frames[0]) && (f.fail_file_size = this.frames[0].file.size > this.maxFileSize), 
                a = !0; else {
                    for (g = this.frames, c = d = 0, e = g.length; e > d; c = ++d) b = g[c], 0 === c && (i = b.file.type, 
                    h = b.width + "," + b.height), b.fail_type = !(b.file.type === i), b.fail_size = !(b.width + "," + b.height === h), 
                    b.fail_file_size = b.file.size > this.maxFileSize, (b.fail_type || b.fail_size || b.fail_file_size) && (a = !0);
                    this.totalFileSize > this.maxTotalFileSize && (a = !0);
                }
                return this.container[a ? "addClass" : "removeClass"]("has-error"), this.fail = a;
            }, b.prototype.open = function() {
                return colon.ui.modal.push("._spinner-modal", {
                    block: !0,
                    esc: !1
                }), pixiv.get["jquery-ui"]().done(function(b) {
                    return function() {
                        colon.ui.modal.pop(), a("body").append(b.container = a(colon.template("ugoku-illust-upload-modal", {
                            re_upload: b.reUpload
                        }))).addClass("_dark-modal"), b.itemsContainer = a(".items", b.container), colon.ui.modal.push(b.container, {
                            block: !0,
                            esc: !1
                        }), b.watch();
                    };
                }(this));
            }, b.prototype.close = function() {
                window.confirm(colon.t("編集内容は保存されません。投稿を中止しますか？")) && window.location.reload();
            }, b.prototype.watch = function() {
                colon.d.on("change", ".delay-bar", function(b) {
                    return function(c) {
                        var d;
                        d = c.currentTarget.value, a(".delay-value").val(d), a(".update-delay").prop("disabled", !b.validateDelayValue(d));
                    };
                }(this)).on("change blur", ".delay-value", function(b) {
                    return function(c) {
                        var d, e;
                        e = c.currentTarget.value, d = b.validateDelayValue(e), a(".update-delay").prop("disabled", !d), 
                        d && a(".delay-bar").val(e);
                    };
                }(this)).on("click", ".update-delay", function(a) {
                    return function() {
                        return a.updateDelay(), !1;
                    };
                }(this)), this.container.on("click", ".select-all", function(b) {
                    return function() {
                        b.select(a(".item", b.itemsContainer));
                    };
                }(this)).on("click", ".select-none", function(b) {
                    return function() {
                        b.unselect(a(".item", b.itemsContainer));
                    };
                }(this)).on("click", ".add-item", function(a) {
                    return function() {
                        var b;
                        null != (b = a.preview) && b.player.pause(), a.input.click();
                    };
                }(this)).on("click", ".open-delay-modal", function(b) {
                    return function(c) {
                        var d, e, f;
                        null != (e = b.preview) && e.player.pause(), f = a(c.currentTarget), (d = f.closest(".item")).length && b.select(d), 
                        b.openDelayModal();
                    };
                }(this)).on("click", ".remove", function(a) {
                    return function() {
                        var b;
                        null != (b = a.preview) && b.player.pause(), a.remove();
                    };
                }(this)).on("click", ".close", function(a) {
                    return function() {
                        var b;
                        null != (b = a.preview) && b.player.pause(), a.close();
                    };
                }(this)).on("click", ".upload", function(a) {
                    return function() {
                        var b;
                        null != (b = a.preview) && b.player.pause(), a.upload();
                    };
                }(this)).selectable({
                    appendTo: this.container,
                    filter: ".item",
                    cancel: ".player, .control-item, .file-name, .delay, ._action-button, ._control-button"
                }).on("selectableselecting", function(a) {
                    return function(b, c) {
                        a.select(c.selecting);
                    };
                }(this)).on("selectableunselecting", function(a) {
                    return function(b, c) {
                        a.unselect(c.unselecting);
                    };
                }(this)), this.itemsContainer.sortable({
                    handle: ".file-name"
                }).on("sortstart", function(b) {
                    return function(c, d) {
                        var e;
                        b.startIndex = a(".item", b.itemsContainer).index(d.item), null != (e = b.preview) && e.player.pause();
                    };
                }(this)).on("sortupdate", a.proxy(this.update, this)), a("._range-modal").on("uimodalopen", function() {
                    return colon.ui.shortcut.pause("DELETE");
                }).on("uimodalclose", function() {
                    return colon.ui.shortcut.restart("DELETE");
                }), colon.w.on("resize", function(a) {
                    return function() {
                        return a.resize();
                    };
                }(this)), colon.ui.shortcut.bind("DELETE", function(b) {
                    return function() {
                        return a(".remove", b.container).click(), !1;
                    };
                }(this));
            }, b.prototype.resize = function() {
                var b, c, d, e, f;
                b = a(".content", this.container), f = b.width(), c = f - 15 - 14, d = a(".item", this.itemsContainer).length, 
                e = Math.floor(c / 167), this.itemsContainer.css("margin-left", (c - 167 * e) / 2), 
                f > 810 ? a(".header", this.container).css({
                    position: "",
                    marginTop: ""
                }).find(".wrapper").width(f) : a(".header", this.container).css({
                    position: "static",
                    marginTop: -44
                }).find(".wrapper").width("");
            }, b.prototype.select = function(b) {
                a(b).addClass("selected ui-selected"), this.updateState();
            }, b.prototype.unselect = function(b) {
                a(b).removeClass("selected ui-selected"), this.updateState();
            }, b.prototype.updateState = function() {
                var b, c, d, e, f, g;
                for (a(".context-actions ._action-button", this.container).prop("disabled", !this.selected().length), 
                a(".upload", this.container).prop("disabled", 0 === a(".item", this.itemsContainer).length || this.fail), 
                a(".add-item", this.container).prop("disabled", this.frames.length >= this.maxFrame), 
                a(".total-frames .value", this.container).text(this.frames.length), c = 0, b = 0, 
                g = this.frames, e = 0, f = g.length; f > e; e++) d = g[e], c += d.delay, b += d.file.size;
                a(".resolution", this.container).text(this.frames[0].width + " x " + this.frames[0].height), 
                a(".total-delay", this.container).text(pixiv.UgokuIllustUploader.delayTime(c)), 
                a(".total-bytes", this.container).text(pixiv.UgokuIllustUploader.fileSize(b)).removeClass("error");
            }, b.prototype.selected = function(b) {
                var c, d;
                return d = a(".item", this.itemsContainer), b || (b = d.filter(".selected")), c = [], 
                b.each(function(a) {
                    return function(a, b) {
                        c.push(d.index(b));
                    };
                }(this)), {
                    elements: b,
                    indexes: c,
                    length: c.length
                };
            }, b.prototype.upload = function() {
                var b, c, d, e, f;
                if (window.confirm([ colon.t("アップロードして情報入力画面に進みますか？"), colon.t("アップロードには時間が掛かることがあります。") ].join("\n"))) {
                    for (b = new FormData(), b.append("mode", this.reUpload ? "re_upload_multi" : "upload_multi"), 
                    f = this.frames, d = 0, e = f.length; e > d; d++) c = f[d], b.append("files[]", c.file), 
                    b.append("delays[]", c.delay);
                    colon.ui.modal.push("._progress-modal", {
                        block: !0,
                        esc: !1
                    }), pixiv.api.post("/ugoira_upload.php", b, {
                        ajaxSettings: {
                            timeout: 0,
                            xhr: function(b) {
                                return function() {
                                    var c;
                                    return c = new XMLHttpRequest(), c.upload.addEventListener("progress", a.proxy(b.progress, b), !1), 
                                    c;
                                };
                            }(this)
                        }
                    }).then(function(b) {
                        return function(c) {
                            var d, e;
                            return c = c.body, b.reUpload ? (colon.ui.modal.pop(), colon.ui.modal.push("._spinner-modal", {
                                block: !0,
                                esc: !1
                            }), d = a.Deferred(), (e = function() {
                                var a;
                                a = window.setTimeout(function() {
                                    return pixiv.api.get("/ugoira_upload.php", {
                                        mode: "poll",
                                        token: c.token,
                                        convert_key: c.convert_key
                                    }).done(function(b) {
                                        switch (b.body.status) {
                                          case "COMPLETE":
                                            d.resolve(c);
                                            break;

                                          case "RUNNING":
                                            window.clearTimeout(a), e();
                                            break;

                                          default:
                                            d.reject();
                                        }
                                    }).fail(function() {
                                        d.reject();
                                    });
                                }, 1e3);
                            })(), d.promise()) : c;
                        };
                    }(this)).done(function(b) {
                        return function(c) {
                            a('<form method="POST" action="' + location.pathname + '">\n  <input name="tt" value="' + pixiv.context.token + '">\n  <input name="mode" value="' + (b.reUpload ? "re_upload_move" : "form") + '">\n  <input name="token" value="' + c.token + '">\n\n  <input name="illust_id" value="' + pixiv.context.queries.illust_id + '">\n  <input name="convert_key" value="' + c.convert_key + '">\n</form>').appendTo("body").submit();
                        };
                    }(this)).fail(function(a, b, c) {
                        window.alert(c || colon.t("アップロードに失敗しました")), colon.ui.modal.pop();
                    });
                }
            }, b.prototype.progress = function(b) {
                b.lengthComputable && a("._progress-modal progress").attr({
                    value: b.loaded,
                    max: b.total
                });
            }, b.prototype.add = function() {
                var b, c, d, e, f, g, h, i, j, k, l;
                for (d = this.input[0].files, c = Math.min(d.length, this.maxFrame - this.frames.length), 
                k = a("._progress-modal"), j = colon.ui.modal.push(k, {
                    block: !0,
                    esc: !1
                }), i = a("progress", k), i[0].max = c, f = new Array(c), b = [], e = function(c) {
                    return function(d, e) {
                        var g, h;
                        g = a.Deferred(), h = new FileReader(), h.onload = function(a) {
                            var b, h;
                            h = c.latestDelay(), b = a.target.result, f[e] = {
                                file: d,
                                delay: h,
                                delay_text: pixiv.UgokuIllustUploader.delayTime(h),
                                image: b,
                                file_size_text: pixiv.UgokuIllustUploader.fileSize(d.size)
                            }, pixiv.UgokuIllustUploader.imageType(d).done(function(a) {
                                var c;
                                f[e].type = a, c = new Image(), c.onload = function() {
                                    f[e].width = c.width, f[e].height = c.height, i[0].value += 1, g.resolve();
                                }, c.src = b;
                            });
                        }, b[e] = g.promise(), h.readAsDataURL(d);
                    };
                }(this), g = h = 0, l = c; l >= 0 ? l > h : h > l; g = l >= 0 ? ++h : --h) e(d[g], g);
                return a.when.apply(null, b).done(function(b) {
                    return function() {
                        var d, e, g, h;
                        for (colon.ui.modal.close(j), b.frames = b.frames.concat(f), b.totalFileSize = 0, 
                        b.totalDelay = 0, h = b.frames, e = 0, g = h.length; g > e; e++) d = h[e], b.totalFileSize += d.file.size, 
                        b.totalDelay += d.delay;
                        b.validate(), b.itemsContainer.append(a(colon.template("ugoku-illust-file-items", {
                            items: b.frames.slice(-1 * c)
                        }))), a(".select-none", b.container).click(), b.input.val(""), b.fail ? b.showError() : b.updatePreview();
                    };
                }(this));
            }, b.prototype.updatePreview = function() {
                var a;
                null == this.preview && (this.preview = new pixiv.UgokuIllustPreview("._ugoku-illust-player-container")), 
                this.preview.update({
                    mime_type: this.frames[0].type,
                    size: [ this.frames[0].width, this.frames[0].height ],
                    file_size: this.totalFileSize,
                    delay: this.totalDelay,
                    frames: function() {
                        var b, c, d, e;
                        for (d = this.frames, e = [], b = 0, c = d.length; c > b; b++) a = d[b], e.push({
                            file: a.image,
                            delay: a.delay
                        });
                        return e;
                    }.call(this)
                }), this.resize();
            }, b.prototype.showError = function() {
                var b, c, d, e, f, g, h, i, j, k, l, m, n;
                for (a("._ugoku-illust-upload-modal .item").removeClass("current"), d = a(".error-fail-length", this.container), 
                j = a(".error-fail-type", this.container), f = a(".error-fail-size", this.container), 
                c = a(".error-fail-file-size", this.container), h = a(".error-fail-file-size-total", this.container), 
                i = !1, e = !1, b = !1, n = this.frames, l = 0, m = n.length; m > l; l++) k = n[l], 
                k.fail_type && (i = !0), k.fail_size && (e = !0), k.fail_file_size && (b = !0);
                g = this.totalFileSize > this.maxTotalFileSize, d[this.frames.length <= 1 ? "show" : "hide"](), 
                j[i ? "show" : "hide"](), f[e ? "show" : "hide"](), c[b ? "show" : "hide"](), h[g ? "show" : "hide"](), 
                a(".total-bytes", this.container)[g ? "addClass" : "removeClass"]("error"), this.resize();
            }, b.prototype.remove = function() {
                var a, b, c, d, e, f, g;
                if (g = this.selected(), e = g.length, e && window.confirm(colon.t("選択したフレームを削除しますか？"))) {
                    for (;e--; ) b = g.indexes[e], this.frames.splice(b, 1);
                    for (g.elements.remove(), this.totalFileSize = 0, this.totalDelay = 0, f = this.frames, 
                    c = 0, d = f.length; d > c; c++) a = f[c], this.totalFileSize += a.file.size, this.totalDelay += a.delay;
                    this.validate(), this.updateState(), this.fail ? this.showError() : this.updatePreview();
                }
            }, b.prototype.update = function(b, c) {
                var d, e;
                e = a(".item", this.itemsContainer).index(c.item), d = this.frames.splice(this.startIndex, 1), 
                this.frames.splice(e, 0, d[0]), this.fail ? this.showError() : this.updatePreview();
            }, b.prototype.openDelayModal = function(b) {
                var c;
                this.delayModalId = colon.ui.modal.push("._range-modal", {
                    block: !0
                }), b || (b = (null != (c = this.frames[this.selected().indexes.slice(-1)]) ? c.delay : void 0) || this.latestDelay()), 
                a(".delay-bar, .delay-value").val(b);
            }, b.prototype.validateDelayValue = function(b) {
                var c, d, e;
                return b = +b, e = a(".delay-bar"), d = +e.attr("min"), c = +e.attr("max"), !isNaN(b) && b >= d && c >= b;
            }, b.prototype.updateDelay = function() {
                var b, c, d, e, f, g, h, i, j, k;
                if (b = +a(".delay-value").val()) {
                    for (e = this.selected().indexes, f = a(".item", this.itemsContainer), g = 0, i = e.length; i > g; g++) d = e[g], 
                    this.frames[d].delay = b, f.eq(d).find(".delay .value").text(pixiv.UgokuIllustUploader.delayTime(b));
                    for (this.totalDelay = 0, k = this.frames, h = 0, j = k.length; j > h; h++) c = k[h], 
                    this.totalDelay += c.delay;
                    colon.ui.modal.close(this.delayModalId), a(".select-none", this.container).click(), 
                    this.fail ? this.showError() : this.updatePreview();
                }
            }, b.prototype.latestDelay = function() {
                var a;
                return (null != (a = this.frames[this.frames.length - 1]) ? a.delay : void 0) || this.delay;
            }, function() {
                var b;
                pixiv.UgokuIllustPlayer.supported && (b = function(b, c, d) {
                    a(b).addClass("ugoku-illust-started"), new pixiv.UgokuIllustPlayer(a("._ugoku-illust-player-container:first", b), c, d);
                }, pixiv.scrollView.registerFilter("ugoku-illust-autoplay", function(a) {
                    var c, d, e, f;
                    d = a.dataset(), (c = null != (f = pixiv.context.ugokuIllustDataList) ? f[d.id] : void 0) ? (c.size = pixiv.UgokuIllustPlayer.size(c.originalSize), 
                    b(a, pixiv.UgokuIllustPlayer.data(c, "ugoira600x600"), {
                        autoStart: !0,
                        maxSize: d.maxSize || 480,
                        fullscreenData: pixiv.UgokuIllustPlayer.data(c, "ugoira1920x1080")
                    })) : (e = a.dataset("id"), pixiv.api.ugokuIllust(e).done(function(c) {
                        return c = c.body[e], c.originalSize = c.original_size, c.size = pixiv.UgokuIllustPlayer.size(c.original_size), 
                        b(a, pixiv.UgokuIllustPlayer.data(c, "ugoira600x600"), {
                            autoStart: !0,
                            maxSize: d.maxSize || 480,
                            fullscreenData: pixiv.UgokuIllustPlayer.data(c, "ugoira1920x1080")
                        });
                    }));
                }));
            }(), b;
        }(), a(function() {
            colon.dispatcher.connect({
                pathname: "/member_illust.php",
                search: /(?:^|\?|&)mode=medium(?:&|$)/
            }, function() {
                var b, c, d;
                (b = pixiv.context.ugokuIllustData) && (b.size = pixiv.UgokuIllustPlayer.size(pixiv.context.illustSize), 
                d = {
                    autoStart: !0
                }, !pixiv.user.loggedIn && pixiv.context.explicit && (c = 30, d.effect = function(a, d) {
                    var e, f, g, h, i;
                    for (f = this.data.size, g = f[0], e = f[1], i = 0; e > i; ) {
                        for (h = 0; g > h; ) b = d.getImageData(Math.min(h + c / 2 - 1, g) - 1, Math.min(i + c / 2 - 1, e) - 1, 1, 1).data, 
                        d.fillStyle = "rgb(" + b[0] + "," + b[1] + "," + b[2] + ")", d.fillRect(h, i, c, c), 
                        h += c;
                        i += c;
                    }
                }, d.maxSize = 580), new pixiv.UgokuIllustPlayer(a("._ugoku-illust-player-container:first"), b, d));
            }).connect({
                pathname: "/member_illust.php",
                search: /(?:^|\?|&)mode=ugoira_view(?:&|$)/
            }, function() {
                var b;
                (b = pixiv.context.ugokuIllustData) && (b.size = pixiv.UgokuIllustPlayer.size(pixiv.context.illustSize, 1920, 1080), 
                new pixiv.UgokuIllustPlayer(a("._ugoku-illust-player-container"), b, {
                    autoStart: !0,
                    maxWidth: 1920,
                    maxHeight: 1080
                }));
            }).dispatch();
        });
    }(jQuery);
}.call(this), function() {
    "use strict";
    $(function() {
        pixiv.ui.tooltip.setup();
    }), colon.ns("pixiv.ui"), pixiv.ui.tooltip = {
        setup: function() {
            var a;
            this.container = $("#ui-tooltip-container"), this.contentContainer = $(".content", this.container), 
            this.container.length && (a = $(".wrapper", this.container), colon.d.on({
                mouseenter: function(b) {
                    return function(c) {
                        var d, e, f;
                        e = $(c.currentTarget), d = e.dataset(), f = d.tooltip || e.attr("title"), f && (a.attr("class", "wrapper"), 
                        d.tooltipType && a.addClass(d.tooltipType), b.show(e, f));
                    };
                }(this),
                "mouseleave mousedown": $.proxy(this.hide, this)
            }, "._ui-tooltip"));
        },
        show: function(a, b, c) {
            a && (a = $(a)), "function" === $.type(b) ? b(this.contentContainer) : this.contentContainer.text(b), 
            this.container.removeClass("_hidden"), colon.ui.popupPosition(this.container, a, $.extend(c, {
                margin: 3,
                nipple: ".nipple",
                nippleMargin: 3
            }));
        },
        hide: function() {
            this.container.addClass("_hidden");
        }
    };
}.call(this), function() {
    "use strict";
    var a;
    a = function() {
        colon.d.on("change", 'input[type="file"]', function(a) {
            var b;
            return b = $(this).closest("form"), $("._button-large", b).prop("disabled", !$('input[type="file"]', b).first().val());
        });
    }, $(function() {
        return colon.dispatcher.connect("/content_upload.php", a).connect("/manga_upload.php", a).connect("/ugoira_upload.php", a).dispatch();
    });
}.call(this), function() {
    "use strict";
    var a = function(a, c) {
        function d() {
            this.constructor = a;
        }
        for (var e in c) b.call(c, e) && (a[e] = c[e]);
        return d.prototype = c.prototype, a.prototype = new d(), a.__super__ = c.prototype, 
        a;
    }, b = {}.hasOwnProperty;
    $(function() {
        var a;
        a = function() {
            pixiv.fallback.placeholder.setup("._illust-upload"), pixiv.uploader.setup();
        }, colon.dispatcher.connect("/upload.php", a).connect("/member_illust_mod.php", a).dispatch();
    }), colon.ns("pixiv.uploader", {
        setup: function() {
            var a;
            a = $("._illust-upload"), a.length && (pixiv.uploader.Illust.supported ? new pixiv.uploader.Illust(a) : (colon.h.addClass("_outdated-uploader"), 
            new pixiv.uploader.IllustLegacy(a)));
        },
        imageType: function(a) {
            var b, c;
            return b = $.Deferred(), c = new FileReader(a), c.onload = function(a) {
                var c, d, e, f, g;
                for (c = new Uint8Array(a.target.result), d = "", e = f = 0; 4 >= f; e = ++f) d += c[e].toString(16);
                return g = function() {
                    switch (!1) {
                      case 0 !== d.indexOf("ffd8"):
                        return "image/jpeg";

                      case 0 !== d.indexOf("89504e47"):
                        return "image/png";

                      case 0 !== d.indexOf("474946"):
                        return "image/gif";
                    }
                }(), b.resolve(g);
            }, c.readAsArrayBuffer(a), b.promise();
        },
        fileSize: function(a) {
            var b, c, d, e;
            for (d = [ "", "K", "M" ], b = 0, c = d.length; c > b && (e = d[b], a >= 1024); b++) a /= 1024;
            return colon.format(a.toFixed(2)) + " " + e + "B";
        },
        delayTime: function(a) {
            return a = "" + a, colon.padding(a.slice(0, -3)) + ":" + colon.padding(a.slice(-3), 3);
        }
    }), pixiv.uploader.Illust = function() {
        function a(a, b) {
            this.container = a, this.options = null != b ? b : {}, "manga" === pixiv.context.queries.type && (this.type = "manga"), 
            this.mode = pixiv.context.queries.mode || "upload", this.itemContainer = $(".item-container", this.container), 
            this.itemHeaderContainer = $(".header", this.itemContainer), this.featureContainer = $(".new-feature", this.container), 
            this.failsContainer = $(".fails", this.itemContainer), this.chooseContainer = $(".choose-container", this.container), 
            this.bookStyleSwitchContainer = $(".book-style ._ui-switch", this.container), this.typesContainer = $(".types", this.itemContainer), 
            this.propertiesContainer = $(".properties", this.itemContainer), this.currentTypeContainer = $(".current-type", this.itemContainer), 
            this.itemListContainer = $(".items", this.itemContainer), this.input = $(".input", this.itemContainer).one("change", function(a) {
                return function() {
                    return a.open().done(function() {
                        return a.add();
                    }), !1;
                };
            }(this)), this.metadataContainer = $(".metadata-container", this.container), new pixiv.uploader.Metadata(this.metadataContainer, this), 
            pixiv.uploader.captcha.createUpdateStatus(this), colon.w.on("beforeunload", function(a) {
                return function(b) {
                    var c;
                    if (!a.uploading && a.items.length) return c = colon.t("編集内容は保存されません。投稿を中止しますか？"), 
                    b.returnValue = c;
                };
            }(this)), this.container.on("submit", function() {
                return !1;
            }).on("click", ".action-submit", function(a) {
                return function() {
                    return a.upload(), !1;
                };
            }(this));
        }
        return a.supported = !!(window.File && window.FileReader && window.FormData && window.Uint8Array), 
        a.prototype.type = "illust", a.prototype.book = !1, a.prototype.binding = "rtl", 
        a.prototype.items = [], a.prototype.maxItems = 200, a.prototype.maxFileSize = 8388608, 
        a.prototype.maxTotalFileSize = 31457280, a.prototype.requestMode = {
            upload: {
                reqest: "upload",
                polling: "poll",
                complete: "move"
            },
            re_upload: {
                reqest: "re_upload",
                polling: "poll",
                complete: "re_upload_move"
            },
            mod: {
                request: "run_mod",
                migrate: "migrate",
                polling: "poll",
                complete: "migrate_move"
            }
        }, a.prototype.validItem = !1, a.prototype.fails = [], a.prototype.open = function() {
            return colon.ui.modal.push("._spinner-modal", {
                block: !0,
                esc: !1
            }), pixiv.get["jquery-ui"]().done(function(a) {
                return function() {
                    colon.ui.modal.pop(), a.watch();
                };
            }(this));
        }, a.prototype.watch = function() {
            this.container.on("uiswitch", "._ui-switch", function(a) {
                return function(b, c) {
                    c ? a.bookFormatOn() : a.bookFormatOff();
                };
            }(this)).on("click", ".direction-rtl", function(a) {
                return function() {
                    a.ltr();
                };
            }(this)).on("click", ".direction-ltr", function(a) {
                return function() {
                    a.rtl();
                };
            }(this)), this.itemContainer.on("click", ".add-item", function(a) {
                return function() {
                    return a.input.click(), !1;
                };
            }(this)).on("click", ".remove", function(a) {
                return function(b) {
                    return a.remove($(b.currentTarget).closest(".item")), !1;
                };
            }(this)), this.itemListContainer.sortable({
                items: "> .item",
                cancel: ".remove"
            }).on("sortstart", function(a) {
                return function(b, c) {
                    a.startIndex = $(".item", a.itemListContainer).index(c.item), a.itemListContainer.addClass("sorting");
                };
            }(this)).on("sortstop", function(a) {
                return function(b, c) {
                    a.itemListContainer.removeClass("sorting");
                };
            }(this)).on("sortupdate", function(a) {
                return function(b, c) {
                    a.updateOrder(c.item);
                };
            }(this)), this.input.on("change", function(a) {
                return function() {
                    return a.add(), !1;
                };
            }(this)), colon.w.on("resize", function(a) {
                return function() {
                    a.resize();
                };
            }(this));
        }, a.prototype.resize = function() {
            var a, b, c, d;
            this.items.length && (this.itemListContainer.attr("style", ""), this.book ? (a = Math.max(970, this.itemListContainer.outerWidth(!0)) - 30, 
            b = 165, c = Math.floor(a / b), c % 2 && (c -= 1), d = "ltr" === this.binding ? "margin-left" : "margin-right", 
            this.itemListContainer.css(d, (a - b * c) / 2)) : (a = Math.max(970, this.itemListContainer.outerWidth(!0)) - 30, 
            b = 170, c = Math.floor(a / b), this.itemListContainer.css("margin-left", (a - b * c) / 2)));
        }, a.prototype.select = function(a) {
            $(a).addClass("selected ui-selected"), this.updateState();
        }, a.prototype.unselect = function(a) {
            $(a).removeClass("selected ui-selected"), this.updateState();
        }, a.prototype.selected = function(a) {
            var b, c;
            return c = $(".item", this.itemListContainer), a || (a = c.filter(".selected")), 
            b = [], a.each(function(a) {
                return function(a, d) {
                    b.push(c.index(d));
                };
            }(this)), {
                elements: a,
                indexes: b,
                length: b.length
            };
        }, a.prototype.updateOrder = function(a) {
            var b;
            b = $(".item", this.itemListContainer).index(a), a = this.items.splice(this.startIndex, 1), 
            this.items.splice(b, 0, a[0]);
        }, a.prototype.updateState = function() {
            var a, b, c, d, e, f, g, h, i;
            for (this.resize(), f = this.items.length, a = $(".total-items .value", this.container), 
            d = +a.text(), a.text(f), h = 0, g = this.items, c = 0, e = g.length; e > c; c++) b = g[c], 
            h += b.file.size;
            $(".total-bytes", this.container).text(pixiv.uploader.fileSize(h)), f !== d && (f ? (this.featureContainer.add(this.chooseContainer).addClass("_hidden"), 
            this.typesContainer.slideUp("fast"), this.propertiesContainer.slideDown("fast"), 
            this.currentTypeContainer.addClass(this.type).removeClass("_hidden"), this.itemListContainer.removeClass("_hidden _fade-in").addClass("_fade-in")) : (this.featureContainer.add(this.chooseContainer).removeClass("_hidden _fade-in").addClass("_fade-in"), 
            this.typesContainer.slideDown("fast"), this.propertiesContainer.slideUp("fast"), 
            this.currentTypeContainer.removeClass("illust ugoku-illust manga novel").addClass("_hidden"), 
            this.itemListContainer.addClass("_hidden"), this.validItem = !1), 1 === f ? this.itemListContainer.addClass("single").attr("style", "") : this.itemListContainer.removeClass("single"), 
            2 > f ? (this.book && this.bookStyleSwitchContainer.click(), this.bookStyleSwitchContainer.addClass("_disabled")) : this.bookStyleSwitchContainer.removeClass("_disabled")), 
            i = !this.fails.length && this.validItem, i && $(".required-item", this.metadataContainer).each(function() {
                return $(this).hasClass("edited") ? void 0 : (i = !1, !1);
            }), $(".action-submit", this.container).prop("disabled", !i), $(".submit-container .notes", this.container).toggleClass("_hidden", i), 
            this.fails.length ? this.failsContainer.html(colon.template("illust-upload-fails", {
                fails: this.fails
            })).removeClass("_hidden") : this.failsContainer.addClass("_hidden"), this.container[this.items.length % 2 ? "removeClass" : "addClass"]("odd");
        }, a.prototype.validateItem = function(a) {
            return /^image\/(?:jpeg|png|gif)$/.test(a.type) ? (a.fails = [], a.file.size > this.maxFileSize && (a.fails.push("file_size"), 
            this.validItem = !1), !0) : !1;
        }, a.prototype.validateItemAll = function() {
            var a, b, c, d, e, f, g, h, i, j;
            for (this.fails = [], j = 0, d = !1, c = !1, i = this.items, e = g = 0, h = i.length; h > g; e = ++g) f = i[e], 
            0 === e && (a = f.type), -1 !== f.fails.indexOf("file_size") && (b = !0), f.type !== a && (f.fails.push("file_type"), 
            c = !0), j += f.file.size;
            return c && this.fails.push("file_type"), b && this.fails.push("file_size"), j > this.maxTotalFileSize && this.fails.push("total_file_size"), 
            !0;
        }, a.prototype.updateFail = function(a) {
            var b, c, d, e, f, g;
            c = $(".item", this.container).removeClass("fail"), b = [];
            for (d in a) g = a[d], f = c.filter(".input-" + d), b.push(f.offset().top), f.addClass("fail"), 
            $(".fail-container", f).text(g);
            e = 0, b.length && (b.sort(), e = b[0] - $(window).innerHeight() / 2), window.setTimeout(function() {
                pixiv.ui.scroll(e);
            });
        }, a.prototype.upload = function() {
            var a, b, c, d, e, f;
            if (!this.uploading && window.confirm([ colon.t("投稿しますか？"), colon.t("アップロードには時間が掛かることがあります。") ].join("\n"))) {
                for (this.uploading = !0, b = new FormData(this.container[0]), f = this.items, d = 0, 
                e = f.length; e > d; d++) c = f[d], b.append("files[]", c.file);
                colon.ui.modal.push("._progress-modal", {
                    block: !0,
                    esc: !1
                }), a = pixiv.api.post(this.container.attr("action"), b, {
                    ajaxSettings: {
                        timeout: 0,
                        xhr: function(a) {
                            return function() {
                                var b;
                                return b = new XMLHttpRequest(), b.upload.addEventListener("progress", $.proxy(a.progress, a), !1), 
                                b;
                            };
                        }(this)
                    }
                }), a.then(function(b) {
                    return function(c) {
                        return "mod" !== b.mode ? a : (c = c.body, c.migrate ? pixiv.api.post("/upload.php", {
                            mode: b.requestMode[b.mode].migrate,
                            illust_id: pixiv.context.workId,
                            illust_type_to: $('input[name="illust_type"]:checked').val()
                        }) : (location.href = "/member_illust.php?mode=medium&illust_id=" + pixiv.context.workId, 
                        $.Deferred().promise()));
                    };
                }(this)).fail(function(a) {
                    return function(b, c, d) {
                        (null != b ? b.body.errors : void 0) ? a.updateFail(b.body.errors) : window.alert(d || colon.t("エラーが発生しました")), 
                        colon.ui.modal.pop(), a.uploading = !1;
                    };
                }(this)).then(this.polling).done($.proxy(this.uploadDone, this)).fail($.proxy(this.uploadFail, this));
            }
        }, a.prototype.polling = function(a) {
            var b, c;
            return a = a.body, colon.ui.modal.next("._spinner-modal", {
                block: !0,
                esc: !1
            }), b = $.Deferred(), (c = function() {
                var d;
                d = window.setTimeout(function() {
                    return pixiv.api.get("/upload.php", {
                        mode: "poll",
                        convert_key: a.convert_key
                    }, {
                        cache: !1
                    }).done(function(a) {
                        switch (a.body.status) {
                          case "COMPLETE":
                            b.resolve(a);
                            break;

                          case "RUNNING":
                            window.clearTimeout(d), c();
                            break;

                          default:
                            b.reject();
                        }
                    }).fail(function() {
                        b.reject();
                    });
                }, 1e3);
            })(), b.promise();
        }, a.prototype.uploadDone = function(a) {
            a = a.body, location.href = colon.query.build("/content_upload_fix.php", {
                i: a.illust_id,
                t: a.title,
                r: a.x_restrict,
                restrict: a.restrict
            });
        }, a.prototype.uploadFail = function(a, b, c) {
            (null != a ? a.body.errors : void 0) ? this.updateFail(a.body.errors) : window.alert(c || colon.t("エラーが発生しました")), 
            colon.ui.modal.pop(), this.uploading = !1, pixiv.uploader.captcha.reset();
        }, a.prototype.addDone = function(a) {
            $(".last", this.itemListContainer).before(colon.template("illust-upload-items", {
                items: a
            }));
        }, a.prototype.addFail = function() {}, a.prototype.add = function() {
            var a, b, c, d, e, f, g, h, i, j, k;
            for (d = this.input[0].files, c = Math.min(d.length, this.maxItems - this.items.length), 
            j = $("._progress-modal"), i = colon.ui.modal.push(j, {
                block: !0,
                esc: !1
            }), h = $("progress", j), h[0].max = c, this.validItem = !0, b = [], e = function(a) {
                return function(c, d) {
                    var e, f;
                    e = $.Deferred(), f = new FileReader(), f.onload = function(b) {
                        pixiv.uploader.imageType(c).done(function(d) {
                            var f;
                            f = {
                                file: c,
                                image: b.target.result,
                                type: d
                            }, a.validateItem(f) ? e.resolve(f) : e.reject(f), h[0].value += c.size;
                        });
                    }, b[d] = e.promise(), f.readAsDataURL(c);
                };
            }(this), f = g = 0, k = c; k >= 0 ? k > g : g > k; f = k >= 0 ? ++g : --g) e(d[f], f);
            a = $.when.apply(null, b), a.then(function(b) {
                return function() {
                    return b.items = b.items.concat($.makeArray(arguments)), b.validateItemAll() ? a : $.Deferred().reject(b.fails);
                };
            }(this)).done(function(a) {
                return function() {
                    a.addDone($.makeArray(arguments));
                };
            }(this)).fail(function(a) {
                return function() {
                    a.addFail($.makeArray(arguments));
                };
            }(this)).always(function(a) {
                return function() {
                    colon.ui.modal.close(i), a.input.val(""), a.updateState();
                };
            }(this));
        }, a.prototype.remove = function(a) {
            var b;
            window.confirm(colon.t("画像を削除しますか？")) && (b = $(".item", this.itemListContainer).index(a), 
            -1 !== b && this.items.splice(b, 1), $(a).remove(), this.updateState());
        }, a.prototype.bookFormatOn = function() {
            this.book = !0, this.container.addClass("book-style-on"), this[this.binding](), 
            this.resize(), $("#book_style").val(1);
        }, a.prototype.bookFormatOff = function() {
            this.book = !1, this.container.removeClass("book-style-on rtl ltr"), this.itemListContainer.removeClass("_fade-in"), 
            window.setTimeout(function(a) {
                return function() {
                    return a.itemListContainer.addClass("_fade-in");
                };
            }(this)), this.resize(), $("#book_style").val(0);
        }, a.prototype.rtl = function() {
            this.binding = "rtl", this.container.removeClass("ltr").addClass("rtl"), this.itemListContainer.removeClass("_fade-in"), 
            window.setTimeout(function(a) {
                return function() {
                    return a.itemListContainer.addClass("_fade-in");
                };
            }(this)), this.resize(), $("#book_style").val(1);
        }, a.prototype.ltr = function() {
            this.binding = "ltr", this.container.removeClass("rtl _fade-in").addClass("ltr"), 
            this.itemListContainer.removeClass("_fade-in"), window.setTimeout(function(a) {
                return function() {
                    return a.itemListContainer.addClass("_fade-in");
                };
            }(this)), this.resize(), $("#book_style").val(2);
        }, a;
    }(), pixiv.uploader.IllustLegacy = function(b) {
        function c(a, b) {
            c.__super__.constructor.call(this, a, b), $(".hint-illust-1, .hint-manga-1, .hint-manga-2, .total-files", this.container).addClass("_disabled"), 
            this.input.attr("name", "files[]"), this.container.append('<input type="hidden" name="text" value="1">'), 
            $(".wrapper", this.chooseContainer).removeClass("_ui-tooltip");
        }
        return a(c, b), c.prototype.open = function() {
            return colon.async().done(function(a) {
                return function() {
                    a.watch();
                };
            }(this));
        }, c.prototype.watch = function() {
            this.input.on("change", function(a) {
                return function() {
                    return a.add(), !1;
                };
            }(this)), colon.w.on("resize", function(a) {
                return function() {
                    a.resize();
                };
            }(this));
        }, c.prototype.updateState = function() {
            var a;
            this.resize(), a = !0, $(".required-item", this.metadataContainer).each(function() {
                return $(this).hasClass("edited") ? void 0 : (a = !1, !1);
            }), $(".action-submit", this.container).prop("disabled", !a), $(".submit-container .notes", this.container).toggleClass("_hidden", a);
        }, c.prototype.upload = function() {
            var a;
            !this.uploading && window.confirm([ colon.t("投稿しますか？"), colon.t("アップロードには時間が掛かることがあります。") ].join("\n")) && (this.uploading = !0, 
            colon.ui.modal.push("._progress-modal", {
                block: !0,
                esc: !1
            }), a = pixiv.fallback.post(this.container), a.then(function(b) {
                return function(c) {
                    return "mod" !== b.mode ? a : (c = c.body, c.migrate ? pixiv.api.post("/upload.php", {
                        mode: b.requestMode[b.mode].migrate,
                        illust_id: pixiv.context.workId,
                        illust_type_to: $('input[name="illust_type"]:checked').val()
                    }) : (location.href = "/member_illust.php?mode=medium&illust_id=" + pixiv.context.workId, 
                    $.Deferred().promise()));
                };
            }(this)).fail(function(a) {
                return function(b, c, d) {
                    (null != b ? b.body.errors : void 0) ? a.updateFail(b.body.errors) : window.alert(d || colon.t("エラーが発生しました")), 
                    colon.ui.modal.pop(), a.uploading = !1, pixiv.uploader.captcha.reset();
                };
            }(this)).then(this.polling).done($.proxy(this.uploadDone, this)).fail($.proxy(this.uploadFail, this)));
        }, c.prototype.add = function() {
            this.updateState(), $("._choose-file-button ._icon-text", this.chooseContainer).text(this.input.val().replace(/^.*[\/\\](.+)$/, "$1"));
        }, c;
    }(pixiv.uploader.Illust), pixiv.uploader.Metadata = function() {
        function a(a, b) {
            this.uploader = b, this.container = $(a), this.watch();
        }
        return a.prototype.maxToolItems = 3, a.prototype.imageResponseItems = [], a.prototype.maxImageResponseItems = 5, 
        a.prototype.watch = function() {
            this.tagContainer = $("._ui-tag", this.container), this.recommendedTagsContainer = $(".recommended-tags", this.container), 
            this.toolsContainer = $(".tools", this.container), this.answersContainer = $(".answers", this.container), 
            this.imageResponseUrlContainer = $(".input-image-response-url", this.container), 
            this.imageResponseContainer = $(".image-response-container", this.container), this.imageResponseFailContainer = $(".image-response-fail", this.container), 
            this.imageResponseItemsContainer = $(".image-response-items", this.container), this.imageResponsePreviewContainer = $(".image-response-preview", this.container), 
            this.imageResponseCountContainer = $(".image-response-container .count", this.container), 
            this.container.on("click", ".recommended-tags li", function(a) {
                return function(b) {
                    a.toggleTag(b.currentTarget);
                };
            }(this)).on("uitagupdate", "._ui-tag", function(a) {
                return function(b, c) {
                    a.updateTags(c);
                };
            }(this)).on("click", ".action-add-tool", function(a) {
                return function(b) {
                    var c;
                    c = $(".input", b.currentTarget).val(), c && $(".tool-item[value='" + c + "']", a.container).click(), 
                    a.openTools();
                };
            }(this)).on("change", "input.tool-item", function(a) {
                return function(b) {
                    a.updateTool(b.currentTarget);
                };
            }(this)).on("keyup blur", ".input-image-response-url", colon.debounce(this.previewImageResponse, this, 100)).on("click", ".action-add-image-response", function(a) {
                return function(b) {
                    a.addImageResponse($(b.currentTarget).dataset());
                };
            }(this)).on("click", ".action-remove-image-response", function(a) {
                return function(b) {
                    a.removeImageResponse($(b.currentTarget).closest(".image-response-item"));
                };
            }(this)).on("keyup blur", ".input-question", function(a) {
                return function(b) {
                    a.changeQuestion(b.currentTarget);
                };
            }(this)).on("uitagupdate keyup", '.required-item input[type="text"]', function(a) {
                return function(b) {
                    var c;
                    c = $(b.currentTarget), "keyup" === b.type && c.parents(".ui-tag-container").length || (c.closest(".item")[c.val() ? "addClass" : "removeClass"]("edited"), 
                    a.uploader.updateState());
                };
            }(this)).on("change", ".required-item input", function(a) {
                return function(b) {
                    var c;
                    c = $(b.currentTarget).closest(".item"), c[$("input:checked", c) ? "addClass" : "removeClass"]("edited"), 
                    a.uploader.updateState();
                };
            }(this)), this.updateTool();
        }, a.prototype.toggleTag = function(a) {
            a = $(a), a.hasClass("selected") ? (this.tagContainer.trigger("uitagremove", [ a.dataset("tag") ]), 
            a.removeClass("selected")) : (this.tagContainer.trigger("uitagadd", [ a.dataset("tag") ]), 
            a.addClass("selected"));
        }, a.prototype.updateTags = function(a) {
            $("li", this.recommendedTagsContainer).each(function() {
                -1 === colon.ui.Tag.find($("._icon-text", this).text(), a) ? $(this).removeClass("selected") : $(this).addClass("selected");
            });
        }, a.prototype.openTools = function() {
            this.toolModal = colon.ui.modal.push(this.toolsContainer, {
                block: !0
            }), this.toolsContainer.one("uimodalclose", function(a) {
                return function() {
                    a.toolModal = null;
                };
            }(this));
        }, a.prototype.closeTools = function() {
            this.toolModal && colon.ui.modal.close(this.toolModal);
        }, a.prototype.toggleTools = function() {
            this.toolModal ? this.closeTools() : this.openTools();
        }, a.prototype.updateTool = function(a) {
            var b, c, d, e, f, g, h, i, j, k;
            if (a) for (a = $(a), b = a.prop("checked"), j = a.val(), f = $(".tool .input", this.container), 
            i = $(".tool-preview .input", this.container), c = g = 0; 3 > g; c = ++g) if (e = f.eq(c), 
            h = i.eq(c), k = e.val(), b) {
                if (!k) {
                    e.val(j), h.val(j);
                    break;
                }
            } else if (j === k) {
                e.val(""), h.val("");
                break;
            }
            d = $("input.tool-item", this.container), d.filter(":checked").length >= this.maxToolItems ? (d.not(":checked").prop("disabled", !0), 
            this.closeTools()) : d.prop("disabled", !1);
        }, a.prototype.previewImageResponse = function() {
            var a, b;
            return (b = colon.ui.Tag.trim(this.imageResponseUrlContainer.val())) ? (a = pixiv.api.get("/rpc/get_work.php", {
                q: b
            }, {
                cache: !0
            }), a.then(function(b) {
                return b.body.illust || b.body.novel ? a : $.Deferred().reject(a, null, colon.t("作品が存在しない、または公開条件により指定できません"));
            }).done(function(a) {
                return function(b) {
                    var c, d, e, f, g, h, i, j;
                    if (b = b.body, d = a.imageResponsePreviewContainer.height(), a.imageResponsePreviewContainer.empty(), 
                    b) {
                        c = 0;
                        for (j in b) if (h = b[j]) for (++c, i = a.imageResponseItems, f = 0, g = i.length; g > f; f++) e = i[f], 
                        e.type !== j || e.id !== h.illust_id && e.id !== h.id || (h.exists = !0);
                        a.imageResponseFailContainer.slideUp("fast"), a.imageResponsePreviewContainer.css({
                            display: "",
                            height: d
                        }).append(colon.template("uploader-image-response-preview-items", b)).animate({
                            height: 51 * c
                        }, "fast");
                    }
                };
            }(this)).fail(function(a) {
                return function(b, c, d) {
                    a.imageResponseFailContainer.slideDown("fast").text(d || colon.t("エラーが発生しました")), 
                    a.imageResponsePreviewContainer.slideUp("fast", function() {
                        $(this).empty().height("");
                    });
                };
            }(this))) : void this.imageResponseFailContainer.slideUp("fast");
        }, a.prototype.addImageResponse = function(a) {
            pixiv.api.get("/rpc/get_work.php", a).always(function(a) {
                return function() {
                    a.imageResponsePreviewContainer.slideUp("fast", function() {
                        $(this).empty().height("");
                    }), a.imageResponseUrlContainer.val("");
                };
            }(this)).done(function(b) {
                return function(c) {
                    var d;
                    c = c.body, c && (b.imageResponseContainer.is(":hidden") && b.imageResponseContainer.slideDown("fast"), 
                    $(colon.template("uploader-image-response-item", c)).prependTo(b.imageResponseItemsContainer).hide().slideDown("fast"), 
                    b.imageResponseItems.push(a), d = b.imageResponseItems.length, d >= b.maxImageResponseItems ? b.imageResponseUrlContainer.slideUp("fast") : b.imageResponseUrlContainer.focus(), 
                    b.imageResponseCountContainer.text(d));
                };
            }(this));
        }, a.prototype.removeImageResponse = function(a) {
            var b, c, d, e, f, g, h;
            for (a = $(a), c = a.dataset(), e = [], h = this.imageResponseItems, f = 0, g = h.length; g > f; f++) d = h[f], 
            (d.type !== c.type || d.id !== c.id) && e.push(d);
            this.imageResponseItems = e, b = e.length, b ? a.slideUp(function() {
                a.remove();
            }) : this.imageResponseContainer.slideUp("fast", function() {
                a.remove();
            }), this.imageResponseUrlContainer.is(":hidden") && this.imageResponseUrlContainer.slideDown("fast"), 
            this.imageResponseUrlContainer.focus(), this.imageResponseCountContainer.text(b);
        }, a.prototype.openAnswers = function() {
            this.answersContainer.slideDown("fast");
        }, a.prototype.closeAnswers = function() {
            this.answersContainer.slideUp();
        }, a.prototype.changeQuestion = function(a) {
            a = $(a), a.val() ? this.answersContainer.is(":hidden") && this.openAnswers() : this.answersContainer.is(":visible") && this.closeAnswers();
        }, a;
    }(), colon.ns("pixiv.uploader.captcha", {
        createUpdateStatus: function(a) {
            return window.__recaptchaUpdateStatus = function(b) {
                b && $(".input-captcha").addClass("edited"), a.updateState();
            };
        },
        reset: function() {
            var a;
            (a = $("img.captcha")).length && a.attr("src", a.data("src") + "?" + +new Date()), 
            "undefined" != typeof grecaptcha && null !== grecaptcha && grecaptcha.reset();
        }
    });
}.call(this), function() {
    "use strict";
    pixiv.UserList = function() {
        function a(a, b) {
            null == b && (b = {}), this.container = $(a), this.listContainer = $(".user-recommendation-items", this.container), 
            this.thumbnailContainer = $("._thumbnail-popup"), this.indicator = new pixiv.LoadingIndicator(this.container), 
            this.autoView = new pixiv.AutoView(".more", b.modal ? {
                scrollContext: this.container
            } : void 0), this.debounceObject = colon.debounce(this.openThumbnail, this, 200), 
            this.sampleUser = b.sampleUser || pixiv.context.userRecommendSampleUser, this.followingBoosterModel = b.followingBoosterModel || 1, 
            this.container.on({
                mouseenter: this.debounceObject,
                mouseleave: $.proxy(this.closeThumbnail, this)
            }, ".action-open-thumbnail"), this.show();
        }
        return a.prototype.offset = 0, a.prototype.sampleUser = null, a.prototype.followingBoosterModel = 1, 
        a.prototype.request = function(a, b, c) {
            return pixiv.api.userRecommendation(a, b, c).then(function(a, b) {
                var c;
                return (null != a && null != (c = a.user_ids) ? c.length : void 0) ? $.Deferred().resolveWith(this, arguments) : $.Deferred().rejectWith(this, [ a, b, null != a ? a.error : void 0 ]);
            });
        }, a.prototype.show = function() {
            return this.request(this.sampleUser, 100, this.followingBoosterModel).always(function(a) {
                return function() {
                    a.indicator.finish(a.indicator);
                };
            }(this)).done(function(a) {
                return function(b) {
                    a.data = b, $(colon.template("following-booster-dummy", {
                        user_ids: a.data.user_ids
                    })).appendTo(".user-recommendation-items"), pixiv.scrollView.registerFilter("following-booster-loading", function(a) {
                        var b, c;
                        b = a.dataset(), c = b.user_id, pixiv.followingBooster.replace(c, {
                            user_ids: c,
                            illust_num: 4,
                            get_illust_count: 1
                        }, {});
                    }), pixiv.scrollView.update();
                };
            }(this)).fail(function(a) {
                return function(b, c, d) {
                    var e;
                    e = $("._no-item", a.container), e.removeClass("hidden"), d && e.text(d);
                };
            }(this));
        }, a.prototype.openThumbnail = function(a) {
            var b, c, d, e;
            e = $(a.currentTarget), d = e.offset(), b = e.data(), e.data("canceled", !1), c = new Image(), 
            c.onload = function(a) {
                return function() {
                    var d, f;
                    e.data("canceled") || (d = Math.min(c.height, 480), f = Math.floor(c.width * d / c.height), 
                    a.thumbnailContainer.removeClass("_hidden").find(".wrapper").css({
                        width: f,
                        height: d,
                        backgroundImage: "url(" + b.src + ")",
                        backgroundSize: f + "px " + d + "px"
                    }), colon.ui.popupPosition(a.thumbnailContainer, e, {
                        nipple: $(".nipple", a.thumbnailContainer)
                    }));
                };
            }(this), c.src = b.src;
        }, a.prototype.closeThumbnail = function(a) {
            this.debounceObject.cancel(), $(a.currentTarget).data("canceled", !0), this.thumbnailContainer.addClass("_hidden");
        }, a;
    }(), colon.ns("pixiv.followingBooster", {
        request: function(a, b, c) {
            return pixiv.api.userRecommendation(a, b, c).then(function(a, b) {
                var c;
                return (null != a && null != (c = a.user_ids) ? c.length : void 0) ? $.Deferred().resolveWith(this, arguments) : $.Deferred().rejectWith(this, [ a, b, null != a ? a.error : void 0 ]);
            });
        },
        replace: function(a, b, c) {
            return pixiv.api.get("/rpc/get_profile.php", b, c).done(function(b) {
                return function(c, d, e, f) {
                    var g;
                    g = $(".following-booster-" + a), $(colon.template("user-list-items", {
                        premium: !!pixiv.user.premium,
                        items: c.body,
                        relatedUser: g.dataset("related_user")
                    })).insertAfter(g).each(function(a, d) {
                        var e;
                        e = $("._follow-button-container", d).on("follow", function() {
                            b.showRelated(d);
                        }), new pixiv.FollowButton(e, $.extend({
                            premium: !!pixiv.user.premium
                        }, c.body[a]));
                    }), g.remove(), pixiv.scrollView.update();
                };
            }(this));
        },
        showRelated: function(a) {
            return a = $(a), this.request(a.dataset("id")).done(function(b) {
                return function(b) {
                    a.after($(colon.template("following-booster-dummy", {
                        user_ids: b.user_ids,
                        user_name: $(".title", a).text()
                    }))), pixiv.scrollView.registerFilter("following-booster-loading", function(a) {
                        var c;
                        b = a.dataset(), c = b.user_id, pixiv.followingBooster.replace(c, {
                            user_ids: c,
                            illust_num: 4,
                            get_illust_count: 1
                        }, {});
                    }), pixiv.scrollView.update();
                };
            }(this));
        }
    });
}.call(this), function() {
    "use strict";
    var a;
    a = function() {
        var a, b;
        pixiv.emoji.setup(), pixiv.HistoryTrial.record(), pixiv.user.loggedIn && (b = !1, 
        a = $("._layout-thumbnail.ui-modal-trigger").on("click", function() {
            var c, d;
            d = $("._illust_modal"), c = $("img", d), d.on("uimodalopen", function() {
                colon.ui.shortcut.pause("← →"), colon.w.on("resize.illustModal", function() {
                    c.css("margin-top", Math.max((colon.w.height() - c.attr("height")) / 2, 0) || "");
                }).trigger("resize.illustModal");
            }).on("uimodalclose", function() {
                colon.ui.shortcut.restart("← →"), colon.w.off("resize.illustModal");
            }), colon.ui.modal.toggle(a, d, {
                block: !0
            }), b || (b = !0, c.attr("src", c.dataset("src")));
        }), colon.ui.shortcut.bind("←", function() {
            var a;
            return "novel" !== pixiv.context.type ? ((a = $(".sibling-items .before a").attr("href")) && (location.href = a), 
            !1) : void 0;
        }).bind("→", function() {
            var a;
            return "novel" !== pixiv.context.type ? ((a = $(".sibling-items .after a").attr("href")) && (location.href = a), 
            !1) : void 0;
        }).bind("B", function() {
            var a;
            return pixiv.bookmarkModal.open() === !1 && (a = $(".bookmark-container ._button").attr("href")) && (location.href = a), 
            !1;
        }).bind("L", function() {
            return pixiv.rating.apply(10), !1;
        }).bind("F", function() {
            return $("#favorite-button").click(), !1;
        }).bind("C", function() {
            return pixiv.comment.showComment(), !1;
        }), "illust" === pixiv.context.type && colon.ui.shortcut.bind("V", function() {
            var b;
            return (b = colon.$.find(".works_display a")) ? window.open(b.attr("href"), "_blank") : a.click(), 
            !1;
        }), "novel" === pixiv.context.type && colon.ui.shortcut.bind("↑", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("up") : void 0;
        }).bind("↓", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("down") : void 0;
        }).bind("←", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("left") : void 0;
        }).bind("→", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("right") : void 0;
        }).bind("SPACE", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("space") : void 0;
        }).bind("PAGEUP", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("pageup") : void 0;
        }).bind("PAGEDOWN", function() {
            return "undefined" != typeof novel && null !== novel && "function" == typeof novel.onKeypress ? novel.onKeypress("pagedown") : void 0;
        }));
    }, $(function() {
        colon.dispatcher.connect("/member_illust.php", a).connect("/novel/show.php", a).dispatch();
    }), colon.ns("pixiv.comment", {
        page: 1,
        setup: function() {
            var a, b, c;
            this.commentItemsContainer = $("._comment-items"), this.noItemContainer = $("._no-item", this.commentItemsContainer), 
            c = $(".stamp-form"), c.length && c.html(colon.template("stamp-tab-content", {
                stamp_series: pixiv.context.stampSeries
            })), b = $(".emoji-list"), b.length && b.html(colon.template("emoji-list", {
                emoji_series: pixiv.context.emojiSeries
            })), pixiv.ui.tab.update(), colon.d.on("submit", "._comment-form", $.proxy(this.postComment, this)).on("click", "._comment-form .sticker", $.proxy(this.postSticker, this)).on("click", ".more-comment", this.more).on("click", ".delete-comment", $.proxy(this["delete"], this)).on("click", ".reply", function(a) {
                return function(b) {
                    a.showReply($(b.currentTarget).closest("._comment-item, .sticker-item"));
                };
            }(this)).on("click", ".reply-to", function(a) {
                return function(b) {
                    a.showComment($(b.currentTarget).dataset("id"));
                };
            }(this)).on("click", ".comment .date", function(a) {
                return colon.query.replace({
                    comment_id: $(this).closest("._comment-item").dataset("id")
                }, !0, !1), !1;
            }), (a = pixiv.context.queries.comment_id) && this.showComment(a);
        },
        postComment: function(a) {
            var b, c, d, e;
            return d = $(a.currentTarget), d.hasClass("sending") ? !1 : (c = d.closest("._comment-form"), 
            e = c.find("textarea"), (b = $.trim(e.val())) ? (d.addClass("sending"), pixiv.api[pixiv.context.type].comment.post(pixiv.context.illustId, pixiv.context.userId, b, c.dataset("parentCommentId")).always(function() {
                d.removeClass("sending");
            }).done(function(a) {
                return function(b) {
                    e.val(""), a.noItemContainer.addClass("_hidden"), d = $(b.body.html).hide().prependTo(a.commentItemsContainer).slideDown("fast"), 
                    pixiv.scrollView.update(), colon.d.trigger(pixiv.comment.ns + "Post", [ d ]);
                };
            }(this)).fail(function(a, b, c) {
                window.alert(c);
            }), !1) : !1);
        },
        postSticker: function(a) {
            var b, c, d;
            return d = $(a.currentTarget), c = d.parents(".tab-content-sticker"), c.hasClass("sending") ? !1 : (b = d.closest("._comment-form"), 
            c.addClass("sending"), c.find(".disabler .bar").animate({
                width: "0%"
            }, 1e4, "linear"), pixiv.api[pixiv.context.type].sticker.post(pixiv.context.illustId, pixiv.context.userId, d.dataset("id"), b.dataset("parentCommentId")).always(function() {
                window.setTimeout(function() {
                    return c.removeClass("sending"), c.find(".disabler .bar").css("width", "100%");
                }, 1e4);
            }).done(function(a) {
                return function(b) {
                    a.noItemContainer.addClass("_hidden"), $(b.body.html).hide().prependTo(a.commentItemsContainer).slideDown("fast"), 
                    pixiv.scrollView.update(), colon.d.trigger(pixiv.comment.ns + "Sticker", [ d ]);
                };
            }(this)).fail(function(a, b, c) {
                window.alert(c);
            }), !1);
        },
        "delete": function(a) {
            var b, c;
            return c = $(a.currentTarget), c.hasClass("sending") || !window.confirm(c.dataset("textConfirm")) ? !1 : (b = c.closest("._comment-item, .sticker-item"), 
            c.addClass("sending"), pixiv.api[pixiv.context.type].comment["delete"](pixiv.context.illustId, b.dataset("id")).always(function() {
                c.removeClass("sending");
            }).done(function(a) {
                return function() {
                    var c;
                    c = function() {
                        b.remove(), $("._comment-item, .sticker-item", a.commentItemsContainer).length || a.noItemContainer.removeClass("_hidden");
                    }, b.hasClass("sticker-item") ? b.animate({
                        width: 0
                    }, "fast", c) : b.slideUp("fast", c);
                };
            }(this)).fail(function(a, b, c) {
                return window.alert(c);
            }), !1);
        },
        more: function(a) {
            var b;
            return b = $(this), b.hasClass("loading") ? !1 : (b.addClass("loading"), pixiv.api[pixiv.context.type].comment.more(pixiv.context.illustId, pixiv.context.userId, ++pixiv.comment.page).always(function() {
                return b.removeClass("loading");
            }).done(function(c) {
                return b = $(c.body.html).appendTo("._comment-items"), c.body.more || $(a.target).remove(), 
                pixiv.scrollView.update(), colon.d.trigger(pixiv.comment.ns + "More", [ b ]);
            }).fail(function(a, b, c) {
                return window.alert(c);
            }), !1);
        },
        showComment: function(a, b) {
            var c, d;
            null == a && (a = void 0), null == b && (b = !1), d = $("._comment-form-container"), 
            d.length && (a ? pixiv.api[pixiv.context.type].comment.item(a, b).done(function(a) {
                return function(b) {
                    a.showReply(b.body.html);
                };
            }(this)).fail(function() {}) : (c = $("._comment-modal"), $(".content", c).html(d.first().clone()), 
            window.setTimeout(function() {
                return $("textarea", c).focus();
            }), c.on("uimodalclose", function() {
                return colon.d.off(".reply");
            }), colon.ui.modal.push(c, {
                block: !0
            }), colon.d.on("pixivCommentPost.reply pixivCommentSticker.reply", function() {
                return colon.ui.modal.pop(), pixiv.statusBar({
                    type: "success",
                    text: "コメントしました",
                    link: "#one_comment"
                });
            }), $(".ui-tab-container.root", c).each(function() {
                return pixiv.ui.tab.restore(this);
            }), pixiv.scrollView.update()));
        },
        showReply: function(a) {
            var b, c;
            a = $(a), b = $("._comment-modal"), c = $(".user-name", a).text(), $(".body p", a).html(pixiv.emoji.replace($(".body p", a).html())), 
            $(".content", b).html($("._comment-form-container").first().clone()).find("._comment-form").dataset("parentCommentId", a.dataset("id") || "").end().prepend(a.clone()), 
            window.setTimeout(function() {
                $("textarea", b)[0].focus();
            }), b.on("uimodalclose", function() {
                colon.d.off(".reply");
            }), colon.ui.modal.push(b, {
                block: !0
            }), colon.d.on("pixivCommentPost.reply pixivCommentSticker.reply", function() {
                return colon.ui.modal.pop(), pixiv.statusBar({
                    type: "success",
                    text: "コメントしました",
                    link: "#one_comment"
                });
            }), $(".ui-tab-container.root", b).each(function() {
                return pixiv.ui.tab.restore(this);
            }), pixiv.scrollView.update();
        }
    }), colon.ns("pixiv", {
        statusBar: function(a) {
            var b, c;
            b = $("#status-bar"), c = $(colon.template("status-item", a)).hide().appendTo(b.show()).slideDown(), 
            window.setTimeout(function(a) {
                return function() {
                    c.slideUp(function() {
                        c.remove(), $(".status-item", b).length || b.hide();
                    });
                };
            }(this), 7500);
        }
    }), colon.ns("pixiv.bookmarkModal", {
        initialize: function() {
            var a;
            return (this.container = colon.$.find(".bookmark-add-modal")) ? (a = $(".bookmark_modal_thumbnail"), 
            a.attr("src", a.dataset("src")), colon.$.find("._list-unit", this.container) && (pixiv.bookmarkTag.setup(".tag-cloud-container"), 
            this.showTag(), this.container.on("click", ".tag", function() {
                return pixiv.tag.toggle($(this).dataset("tag")), !1;
            }).on("uimodalopen", function() {
                $("#input_tag").focus();
            }).on("uimodalclose", function() {
                $("#input_tag").blur();
            }), pixiv.tag.setup()), colon.w.on("resize", colon.throttle(this.updateHeight, this)), 
            this.open(), void this.updateHeight()) : !1;
        },
        open: function() {
            return this.container ? colon.ui.modal.push(this.container, {
                block: !0
            }) : this.initialize();
        },
        showTag: function() {
            var a;
            return a = [], $(".tags-container .tag").each(function() {
                return a.push({
                    self: !!$(".self-tag", this).length,
                    name: $(".text", this).text()
                });
            }), a.length ? $(".tag-cloud.work", this.container).append(colon.template("tag-items", {
                tags: a
            })) : $(".work-tags-container", this.container).remove();
        },
        updateHeight: function() {
            return $("._list-unit", this.container).height(colon.w.height() - $(".layout-fixed", this.container).height() - 20 - 60);
        }
    }), colon.ns("pixiv.emoji", {
        setup: function() {
            var a, b, c, d, e;
            if (pixiv.context.emojiSeries) {
                for (this.patterns = {}, d = pixiv.context.emojiSeries, b = 0, c = d.length; c > b; b++) a = d[b], 
                this.patterns[a.name] = a.id;
                e = function(a) {
                    return function(b, c) {
                        $(".body p", c).each(function(b, c) {
                            c = $(c), c.html(a.replace(c.html()));
                        });
                    };
                }(this), colon.d.on("click." + this.ns, ".emoji", function(a) {
                    return function(b) {
                        var c, d;
                        c = $(b.target), d = c.closest("._comment-form").find("textarea")[0], a.insert(c.data("name"), d), 
                        d.focus(), null != d.selectionStart ? d.selectionStart = d.selectionEnd = d.value.length : null != d.createTextRange && d.createTextRange().select();
                    };
                }(this)).on("pixivCommentPost", e).on("pixivCommentMore", e), $("._comment-items").each(e), 
                colon.ui.shortcut.bind("DELETE", function(a) {
                    return function(b) {
                        return a["delete"](b.target);
                    };
                }(this));
            }
        },
        insert: function(a, b) {
            var c;
            b = $(b), c = $.trim(b.val()), c = (c && c + " ") + ("(" + a + ")"), c.length <= 140 && b.val(c);
        },
        "delete": function(a) {
            var b, c;
            return a = $(a), $(a).closest("._comment-form").length ? (c = /\s*?\(([^()]+)\)$/, 
            (b = c.exec(a.val())) && this.patterns[b[1]] ? (a.val(a.val().replace(c, "")), !1) : void 0) : void 0;
        },
        replace: function(a) {
            var b;
            return a = $.trim(a), b = function(b) {
                return function(c, d) {
                    var e, f;
                    return f = d.replace(/[():]/g, ""), (e = b.patterns[f]) ? d === a ? '<img src="' + pixiv.commonSourcePath + "images/emoji/" + e + '.png" width="56" height="56">' : '<img src="' + pixiv.commonSourcePath + "images/emoji/" + e + '.png" width="28" height="28" class="emoji-text">' : d;
                };
            }(this), a.replace(/\s*?(\([^()]+\))/g, b).replace(/\s*?(:[^:]+:)/g, b);
        }
    });
}.call(this);
//# sourceMappingURL=app.min.js.map